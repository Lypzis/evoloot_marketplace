{"version":3,"sources":["graphql.js","axios.js","context/clientContext.js","store/actions/user.js","store/actions/actionTypes.js","context/authContext.js","components/Navbar.js","components/NavbarSticky.js","store/actions/search.js","components/Select.js","store/actions/checkout.js","components/QuantityInput.js","components/LineProduct.js","components/LineProducts.js","components/LoadingBar.js","components/CartDropdown.js","components/Header.js","components/HeaderMobile.js","store/actions/menu.js","components/Footer.js","components/BluredBackground.js","components/CartPanel.js","components/BackToTopButton.js","components/MenuPanel.js","hoc/Layout.js","components/Card.js","components/Carousel.js","components/Collection.js","components/BannerCarousel.js","containers/Home.js","containers/CollectionProducts.js","components/Thumbnail.js","components/Description.js","containers/ProductDetails.js","containers/ProductDetailsMobile.js","components/ShippingCalculator.js","containers/Cart.js","containers/SignUp.js","containers/Login.js","containers/NotFound.js","components/NavbarVertical.js","containers/Settings.js","components/OrderCard.js","containers/Orders.js","containers/Address.js","containers/Profile.js","containers/Forget.js","components/SearchedResults.js","containers/Search.js","containers/Policies.js","containers/Pages.js","containers/App.js","serviceWorker.js","store/reducers/checkout.js","store/reducers/user.js","store/reducers/search.js","store/reducers/menu.js","index.js","assets/images/logo.png","assets/images/Rotating_Product_Banner_Finals_1.png","assets/images/Rotating_Product_Banner_Finals_2.jpg","assets/images/Rotating_Product_Banner_Finals_3.jpg","assets/images/Rotating_Product_Banner_Finals_4.jpg","assets/icons/sprite.svg"],"names":["getCustomerToken","email","password","query","variables","input","updateCustomer","customerAccessToken","firstName","lastName","customer","updateCustomerPassword","recoverCustomerPassword","updateCustomerAddress","addressId","address","id","createCustomerCheckout","lineItems","shippingAddress","allowPartialAddresses","getAvailableShippingRates","updateCheckoutShippingAddress","checkoutId","updateCheckoutEmail","getCustomerOrders","groupBy","getCollectionProducts","handle","queryParam","instance","axios","create","baseURL","headers","client","Client","buildClient","storefrontAccessToken","domain","ClientContext","React","createContext","collections","shopPolicies","shopCurrency","currencyRate","code","value","changeCurrency","currency","loadMoreCollectionProducts","pages","ClientContextProvider","props","useState","setCollections","setShopPolicies","setShopCurrency","setPages","currencyRates","setCurrencyRates","setCurrencyRate","history","useHistory","getShopPagesData","a","axiosInstance","post","arr","data","edges","map","el","node","console","log","getCurrencyRate","localCurrencyRate","savedCurrencyRates","localStorage","getItem","dateNow","Math","round","Date","getTime","dateYesterday","JSON","parse","dateAtTime","rates","get","currencies","setItem","stringify","getShopCurrencyData","shop","paymentSettings","currencyCode","getShopPoliciesData","key","policies","push","getAllCollectionsWithProducts","useCallback","treatedCollections","collection","forEach","products","treatCollectionProducts","i","tags","j","k","findIndex","tag","length","reverse","replace","newProducts","e","index","cursor","images","image","altText","src","originalSrc","variants","variant","title","available","availableForSale","price","priceV2","amount","productsArr","collectionByHandle","collectionToAdd","productsTreated","collectionsCopy","Object","assign","concat","useEffect","Provider","children","updateUserDetails","type","updateUserAddress","mainAddress","setUserOrders","orders","updateUserOrders","AuthContext","customerToken","loginError","login","token","logout","userIsOnline","refreshToken","AuthContextProvider","userToken","setUserToken","dispatch","useDispatch","getUserInformation","accessToken","userInfo","defaultAddress","isUserOnline","shopifyCustomerToken","date","expiresAt","logoutHandler","removeItem","loginHandler","customerAccessTokenCreate","memo","authContext","useContext","navTitles","setNavTitles","candidateNewMenu","setCandidateNewMenu","menu","setMenu","clientContext","vertical","hide","changeMenuName","getCollections","col","goToMyAccount","turnToMenu","turnToSubMenu","menuSelected","generatedMenu","className","to","onClick","generateMenu","navTitle","activeClassName","xlinkHref","sprite","setSearchText","searchText","Select","showList","toggleShowList","role","aria-label","selected","setSelected","onButtonClick","prevState","changeSelection","identifier","currentOption","checked","readOnly","htmlFor","onOptionClick","addProductToCheckout","productTitle","quantity","updateProductFromCheckout","fromItself","QuantityInput","productQuantity","setQuantity","inputSize","small","labelSize","inputContainer","inputContainerBig","big","inputContainerFinal","split","join","validateNumber","number","trim","isNaN","onChange","event","target","floor","LineProduct","product","cardCheckout","cardCheckoutImageBox","cardCheckoutImage","cardCheckoutRemoveButton","cardCheckoutRemoveButtonIcon","cardCheckoutDetails","cardTitle","alt","toFixed","checkout","useSelector","state","item","LoadingBar","override","css","style","marginTop","height","width","color","loading","addressFields","company","address1","address2","city","country","province","zip","user","setLoading","createQuickCheckout","variantId","newCheckout","axiosInstace","addressWithoutId","addLineItems","checkoutWithProducts","window","open","webUrl","totalPrice","disabled","search","pathname","useLocation","isSticky","setSticky","element","useRef","handleScroll","current","scrollY","getBoundingClientRect","bottom","addEventListener","removeEventListener","ref","logo","autoFocus","placeholder","preventDefault","goBack","reduce","b","filter","page","policy","href","rel","getFullYear","BluredBackground","menuState","defaultChecked","for","BackToTopButton","goToTop","menuName","setMenuName","hideMenu","changeMenuNameHeader","name","link","customFunction","toggle","Layout","innerWidth","isMouseOverButton","setIsMouseOverButton","onClickHandler","productVariant","addToCart","noEffect","productDetails","onMouseOver","onMouseOut","naturalSlideWidth","naturalSlideHeight","totalSlides","visibleSlides","isPlaying","orientation","infinite","step","header","innerClassName","queryTag","URLSearchParams","featured","slice","displayedProducts","setDisplayedProducts","setCursor","currArrLength","setCurrArrLength","renderProducts","loadMoreProducts","newCursor","renderProductsSorted","productsFormated","sort","publishedAt","filteredProducts","description","sorted","image01","image02","image03","image04","interval","homeCollections","setHomeCollections","getFeaturedProducts","renderHomeCollections","CollectionProducts","setCollection","useParams","getCollection","incomingCollection","setImage","isVariant","currentSelection","isThereADescription","dangerouslySetInnerHTML","__html","productReducer","currentProductState","action","imageSrc","imageId","relatedProducts","viewed","ProductDetails","useReducer","productChosen","dispatchProduct","retrieveRelatedProducts","currentProduct","productType","saveViewed","newViewed","undefined","find","addedProduct","unshift","retrieveViewed","getProduct","fetchByHandle","setImageSelected","ReactImageMagnify","imageClassName","enlargedImageContainerClassName","enlargedImagePosition","smallImage","isFluidWidth","largeImage","descriptionHtml","ProductDetailsMobile","changeNumberOfSlides","shippingFormReducer","currentFormState","calcLoading","calculateError","trialsCount","availableShippingRates","shippingWasCalculated","field","ShippingCalculator","shippingForm","dispatchShippingForm","calculateShipping","wasItLoaded","shippingRates","lastIncompleteCheckout","setFieldDropdown","classes","priorityOptions","defaultOptionLabel","val","maxLength","setField","rate","parseFloat","Cart","textAreaValue","setTextAreaValue","createCheckout","customAttributes","updateAttributes","cols","rows","signupFormReducer","username","passwordConfirm","signupFormErrorReducer","passwordIsWithError","emailIsWithError","usernameTaken","emailIsTaken","emailPending","SignUp","signupForm","dispatchSignupForm","passwordError","emailError","emailTakenError","emailPendingError","userNameTakenError","signupFormError","dispatchSignupFormError","validEmail","isValid","validate","from","equalPassword","confirmPassword","equality","validateFields","isEmailValid","isPasswordValid","createdUser","customerCreate","customerUserErrors","errorMessage","message","Error","error","onSubmit","required","minLength","Login","setEmail","setPassword","setLoginError","NotFound","NavbarVertical","Settings","distpatch","setLastName","setFirstName","setPasswordConfirm","passwordNotEqual","setPasswordNotEqual","emailNotValid","setEmailNotValid","emailTaken","setEmailTaken","loadingSettings","setLoadingSettings","loadingPassword","setLoadingPassword","retrieveCustomerData","updatePassword","res","customerUpdate","updateSettings","OrderCard","order","processedAt","toLocaleDateString","weekday","year","month","day","toLocaleTimeString","lineItem","sku","subtotalPriceV2","totalShippingPriceV2","totalTaxV2","totalRefundedV2","totalPriceV2","Orders","currPointer","setCurrPointer","hasMore","setHasMore","loadingMoreOrders","setLoadingMoreOrders","formatResults","ordersFormatted","formattedLineItems","loadNewerOrders","pageInfo","hasNextPage","getOrders","addressFormReducer","Address","addressForm","dispatchAddressForm","updateAddress","customerAddress","customerAddressCreate","Profile","path","Forget","invalidEmailMessage","setInvalidEmailMessage","resetPassword","customerRecover","Search","setProducts","getMatchingProducts","collectionProducts","allProducts","restructure","result","word","toLowerCase","indexOf","SearchedResults","Policies","htmlBody","setHtmlBody","currPolicy","setCurrPolicy","setContent","curr","body","Pages","currPage","setCurrPage","App","routes","Boolean","location","hostname","match","initialState","lineItemsCopy","alreadyAdded","toUpdate","removeProductFromCheckout","toRemove","splice","reducer","initializeUserDetails","toggleMenu","rootReducers","combineReducers","checkoutReducer","userReducer","searchReducer","menuReducer","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.f41ce48a.chunk.js","sourcesContent":["/**\n * Creates a graphql query for Creating a new user.\n * @param {String} firstName\n * @param {String} lastName\n * @param {String} email\n * @param {String} password\n * @returns graphql query body\n */\nexport const createUser = (firstName, lastName, email, password) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\tmutation customerCreate($input: CustomerCreateInput!) {\n\t\t\t\t\t\tcustomerCreate(input: $input) {\n\t\t\t\t\t\t\tcustomer {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n\t\tvariables: {\n\t\t\tinput: {\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t},\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query to get the current user token.\n * @param {String} email\n * @param {String} password\n * @returns graphql query body\n */\nexport const getCustomerToken = (email, password) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\tmutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {\n\t\t\t\t\t\tcustomerAccessTokenCreate(input: $input) {\n\t\t\t\t\t\t\tcustomerAccessToken {\n\t\t\t\t\t\t\t\taccessToken\n\t\t\t\t\t\t\t\texpiresAt\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n\t\tvariables: {\n\t\t\tinput: {\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t},\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query to update the current user data.\n * - It does not update password.\n * @param {String} customerAccessToken\n * @param {String} firstName\n * @param {String} lastName\n * @param {String} email\n * @returns graphql query body\n */\nexport const updateCustomer = (\n\tcustomerAccessToken,\n\tfirstName,\n\tlastName,\n\temail\n) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\tmutation customerUpdate($customerAccessToken: String!, $customer: CustomerUpdateInput!) {\n\t\t\t\t\t\tcustomerUpdate(customerAccessToken: $customerAccessToken, customer: $customer) {\n\t\t\t\t\t\t\tcustomer {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerAccessToken {\n\t\t\t\t\t\t\t\taccessToken\n\t\t\t\t\t\t\t\texpiresAt\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n\t\tvariables: {\n\t\t\tcustomerAccessToken,\n\t\t\tcustomer: {\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\temail,\n\t\t\t},\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query to update current user password.\n * @param {String} customerAccessToken\n * @param {String} password\n * @returns graphql query body\n */\nexport const updateCustomerPassword = (customerAccessToken, password) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\tmutation customerUpdate($customerAccessToken: String!, $customer: CustomerUpdateInput!) {\n\t\t\t\t\t\tcustomerUpdate(customerAccessToken: $customerAccessToken, customer: $customer) {\n\t\t\t\t\t\t\tcustomer {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerAccessToken {\n\t\t\t\t\t\t\t\taccessToken\n\t\t\t\t\t\t\t\texpiresAt\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n\t\tvariables: {\n\t\t\tcustomerAccessToken,\n\t\t\tcustomer: {\n\t\t\t\tpassword,\n\t\t\t},\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query for recovering user password.\n * @param {String} email\n * @returns graphql query body\n */\nexport const recoverCustomerPassword = email => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\tmutation customerRecover($email: String!) {\n\t\t\t\t\t\tcustomerRecover(email: $email) {\n\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n\t\tvariables: {\n\t\t\temail,\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query for retrieving user information.\n * @param {String} customerAccessToken\n * @returns graphql query body\n */\nexport const getUserSettings = customerAccessToken => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\t{\n\t\t\t\t\t\tcustomer (customerAccessToken: \"${customerAccessToken}\"){\n\t\t\t\t\t\t\tfirstName\n\t\t\t\t\t\t\tlastName\n\t\t\t\t\t\t\temail\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t};\n};\n\n/**\n * Creates a graphql query for retrieving user information\n * along with his default address.\n * @param {String} customerAccessToken\n * @returns graphql query body\n */\nexport const getUserSettingsAndAddress = customerAccessToken => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\t{\n\t\t\t\t\t\tcustomer (customerAccessToken: \"${customerAccessToken}\"){\n\t\t\t\t\t\t\tfirstName\n\t\t\t\t\t\t\tlastName\n\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\tdefaultAddress{\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tfirstName\n\t\t\t\t\t\t\t\tlastName\n\t\t\t\t\t\t\t\tcompany\n\t\t\t\t\t\t\t\taddress1\n\t\t\t\t\t\t\t\taddress2\n\t\t\t\t\t\t\t\tcity\n\t\t\t\t\t\t\t\tcountry\n\t\t\t\t\t\t\t\tprovince\n\t\t\t\t\t\t\t\tzip\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t};\n};\n\n/**\n * Creates a graphql query to create user address.\n * @param {String} customerAccessToken\n * @param {Object} address\n * @returns graphql query body\n */\nexport const createCustomerAddress = (customerAccessToken, address) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\tmutation customerAddressCreate($customerAccessToken: String!, $address: MailingAddressInput!) {\n\t\t\t\t\t\tcustomerAddressCreate(customerAccessToken: $customerAccessToken, address: $address) {\n\t\t\t\t\t\t\tcustomerAddress {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n\t\tvariables: {\n\t\t\tcustomerAccessToken,\n\t\t\taddress,\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query for updating the user default address.\n * @param {String} customerAccessToken\n * @param {String} addressId\n * @param {Object} address\n * @returns graphql query body\n */\nexport const updateCustomerAddress = (\n\tcustomerAccessToken,\n\taddressId,\n\taddress\n) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\tmutation customerAddressUpdate($customerAccessToken: String!, $id: ID!, $address: MailingAddressInput!) {\n\t\t\t\t\t\tcustomerAddressUpdate(customerAccessToken: $customerAccessToken, id: $id, address: $address) {\n\t\t\t\t\t\t\tcustomerAddress {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n\t\tvariables: {\n\t\t\tcustomerAccessToken,\n\t\t\tid: addressId,\n\t\t\taddress,\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query for the checkout.\n * @param {Array} lineItems\n * @param {Object} shippingAddress\n * @param {String} email\n * @returns graphql query body\n */\nexport const createCustomerCheckout = (lineItems, shippingAddress, email) => {\n\treturn {\n\t\tquery: `\t \n\t\t\t\tmutation checkoutCreate($input: CheckoutCreateInput!) {\n\t\t\t\t\tcheckoutCreate(input: $input) {\n\t\t\t\t\tcheckout {\n\t\t\t\t\t\tid\n\t\t\t\t\t}\n\t\t\t\t\tcheckoutUserErrors {\n\t\t\t\t\t\tcode\n\t\t\t\t\t\tfield\n\t\t\t\t\t\tmessage\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n\t\tvariables: {\n\t\t\tinput: {\n\t\t\t\tallowPartialAddresses: true,\n\t\t\t\temail,\n\t\t\t\tlineItems,\n\t\t\t\tshippingAddress,\n\t\t\t},\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query to retrieve available shipping rates\n * for the last created checkout.\n * @param {String} customerAccessToken\n * @returns graphql query body\n */\nexport const getAvailableShippingRates = customerAccessToken => {\n\treturn {\n\t\tquery: `\t \n\t\t\t\t{\n\t\t\t\t\tcustomer (customerAccessToken: \"${customerAccessToken}\"){\n\t\t\t\t\t\tlastIncompleteCheckout {\n\t\t\t\t\t\t\tavailableShippingRates {\n\t\t\t\t\t\t\t\tready\n\t\t\t\t\t\t\t\tshippingRates {\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tpriceV2 {\n\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n\t};\n};\n\n/**\n * Creates a graphql query for updating a checkout shipping address.\n * @param {Object} shippingAddress\n * @param {String} checkoutId\n * @returns graphql query body\n */\nexport const updateCheckoutShippingAddress = (shippingAddress, checkoutId) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\tmutation checkoutShippingAddressUpdateV2($shippingAddress: MailingAddressInput!, $checkoutId: ID!) {\n\t\t\t\t\t\tcheckoutShippingAddressUpdateV2(shippingAddress: $shippingAddress, checkoutId: $checkoutId) {\n\t\t\t\t\t\t\tcheckout {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcheckoutUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n\t\tvariables: {\n\t\t\tshippingAddress,\n\t\t\tcheckoutId,\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query for updating a checkout email.\n * @param {String} email\n * @param {String} checkoutId\n * @returns graphql query body\n */\nexport const updateCheckoutEmail = (email, checkoutId) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\tmutation checkoutEmailUpdateV2($checkoutId: ID!, $email: String!) {\n\t\t\t\t\t\tcheckoutEmailUpdateV2(checkoutId: $checkoutId, email: $email) {\n\t\t\t\t\t\t\tcheckout {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcheckoutUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n\t\tvariables: {\n\t\t\temail,\n\t\t\tcheckoutId,\n\t\t},\n\t};\n};\n\n/**\n * Creates a graphql query to get the user orders.\n * @param {String} customerAccessToken\n * @param {String} groupBy graphql connections\n * @returns graphql query body\n */\nexport const getCustomerOrders = (\n\tcustomerAccessToken,\n\tgroupBy = 'first: 5'\n) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\t{\n\t\t\t\t\t\tcustomer (customerAccessToken: \"${customerAccessToken}\"){\n\t\t\t\t\t\t\torders(${groupBy}) {\n\t\t\t\t\t\t\t\tpageInfo { \n\t\t\t\t\t\t\t\t\thasNextPage \n\t\t\t\t\t\t\t\t\thasPreviousPage\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\tprocessedAt\n\t\t\t\t\t\t\t\t\t\tsuccessfulFulfillments{\n\t\t\t\t\t\t\t\t\t\t\tfulfillmentLineItems(first:100){\n\t\t\t\t\t\t\t\t\t\t        edges {\n\t\t\t\t\t\t\t\t\t\t            node {\n\t\t\t\t\t\t\t\t\t\t                quantity\n\t\t\t\t\t\t\t\t\t\t            }\n\t\t\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t\t\ttrackingInfo{\n\t\t\t\t\t\t\t\t\t\t\t\tnumber\n\t\t\t\t\t\t\t\t\t\t\t\turl\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlineItems(first: 100) {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsku\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tproduct{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpriceV2{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tquantity\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsubtotalPriceV2{\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttotalShippingPriceV2 {\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttotalPriceV2{\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttotalRefundedV2 {\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttotalTaxV2 {\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t`,\n\t};\n};\n\n/**\n * Creates a graphql query to get the shop policies.\n * @returns graphql query body\n */\nexport const getShopPolicies = () => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\t{\n\t\t\t\t\t\tshop {\n\t\t\t\t\t\t\tprivacyPolicy {\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trefundPolicy {\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttermsOfService{\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t`,\n\t};\n};\n\n/**\n * Creates a graphql query to get the shop currency.\n * @returns graphql query body\n */\nexport const getShopCurrency = () => {\n\treturn {\n\t\tquery: `\n\t\t\t\t\t{\n\t\t\t\t\t\tshop {\n\t\t\t\t\t\t\tpaymentSettings {\n\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t`,\n\t};\n};\n\n/**\n * Creates a graphql query to get the shop pages.\n * @returns graphql query body\n */\nexport const getShopPages = () => {\n\treturn {\n\t\tquery: `\t \n\t\t\t\t\t{\n\t\t\t\t\t\tpages(first:100) {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t`,\n\t};\n};\n\n/**\n * Creates a graphql query to get products from a collection.\n * @param {String} handle\n * @param {String} queryParam e.g first:20, after: \"eyJsYXN0X2lkIjo1ODUxODk5NDYxNzk0LCJsYXN0X3ZhbHVlIjoiMCJ9\"\n * default is 'first: 20'\n * @returns graphql query body\n */\nexport const getCollectionProducts = (handle, queryParam) => {\n\treturn {\n\t\tquery: `\n\t\t\t\t{ \n\t\t\t\t\tcollectionByHandle (handle: \"${handle}\") {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tproducts(${queryParam ? queryParam : 'first: 20'}) {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tavailableForSale\n\t\t\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\t\t\tpublishedAt\n\t\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\t\tdescriptionHtml\n\t\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\t\tonlineStoreUrl\n\t\t\t\t\t\t\t\t\tproductType\n\t\t\t\t\t\t\t\t\ttags\n\t\t\t\t\t\t\t\t\timages(first: 100) {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\toptions {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\tvalues\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvariants(first: 100) {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\tavailableForSale\n\t\t\t\t\t\t\t\t\t\t\t\trequiresShipping\n\t\t\t\t\t\t\t\t\t\t\t\tsku\n\t\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tpriceV2 {\n\t\t\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n\t};\n};\n\n/**\n * Creates a graphql query to get all collection along with some of their products.\n * @returns graphql query body\n */\nexport const getAllCollectionsAndProducts = () => {\n\treturn {\n\t\tquery: `\n\t\t\t\t{ \n\t\t\t\t\tcollections(first:100)  {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\tdescriptionHtml\n\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\t\t\timage{\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tproducts(first: 20) {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\tavailableForSale\n\t\t\t\t\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\t\t\t\t\tpublishedAt\n\t\t\t\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\t\t\t\tdescriptionHtml\n\t\t\t\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\t\t\t\tonlineStoreUrl\n\t\t\t\t\t\t\t\t\t\t\tproductType\n\t\t\t\t\t\t\t\t\t\t\ttags\n\t\t\t\t\t\t\t\t\t\t\timages(first: 100) {\n\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\toptions {\n\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t\tvalues\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvariants(first: 100) {\n\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tavailableForSale\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequiresShipping\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsku\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpriceV2 {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n\t};\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n\t// store url\n\tbaseURL: 'https://evoloot-marketplace-dev.myshopify.com',\n\t// key\n\theaders: {\n\t\t'X-Shopify-Storefront-Access-Token': '22244a0434741a7f12f81ea49a794d3b',\n\t},\n});\n\nexport default instance;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Client from 'shopify-buy';\nimport { useHistory } from 'react-router-dom';\nimport {\n\tgetShopPolicies,\n\tgetShopPages,\n\tgetShopCurrency,\n\tgetCollectionProducts,\n\tgetAllCollectionsAndProducts,\n} from '../graphql';\nimport axiosInstance from '../axios';\n\nconst client = Client.buildClient({\n\tstorefrontAccessToken: '22244a0434741a7f12f81ea49a794d3b',\n\tdomain: 'evoloot-marketplace-dev.myshopify.com',\n});\n\nexport const ClientContext = React.createContext({\n\tclient: null,\n\tcollections: null,\n\tshopPolicies: null,\n\tshopCurrency: null,\n\tcurrencyRate: { code: 'USD', value: 1 },\n\tchangeCurrency: currency => {},\n\tloadMoreCollectionProducts: () => {},\n\tpages: null,\n});\n\nconst ClientContextProvider = props => {\n\tconst [collections, setCollections] = useState(null);\n\tconst [shopPolicies, setShopPolicies] = useState(null);\n\tconst [shopCurrency, setShopCurrency] = useState(null);\n\tconst [pages, setPages] = useState(null);\n\tconst [currencyRates, setCurrencyRates] = useState(null);\n\tconst [currencyRate, setCurrencyRate] = useState({ code: 'USD', value: 1 });\n\tconst history = useHistory();\n\n\t/**\n\t * Get the shop pages.\n\t */\n\tconst getShopPagesData = async () => {\n\t\ttry {\n\t\t\tconst pages = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetShopPages()\n\t\t\t);\n\n\t\t\tconst arr = pages.data.data.pages.edges.map(el => {\n\t\t\t\treturn { ...el.node };\n\t\t\t});\n\n\t\t\tsetPages(arr);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\t/**\n\t * Get currency rates.\n\t * - Will attempt to get from local storage first, verifying if it is not older\n\t * than 1 day, in which case, will request for the today's rates, and replace them.\n\t */\n\tconst getCurrencyRate = async () => {\n\t\ttry {\n\t\t\tlet localCurrencyRate = null;\n\t\t\tlet currencies;\n\n\t\t\tconst savedCurrencyRates = localStorage.getItem('currencyRates');\n\n\t\t\tconst dateNow = Math.round(new Date().getTime() / 1000);\n\t\t\tconst dateYesterday = dateNow - 24 * 3600;\n\n\t\t\tif (savedCurrencyRates)\n\t\t\t\tlocalCurrencyRate = JSON.parse(savedCurrencyRates);\n\n\t\t\tif (\n\t\t\t\tlocalCurrencyRate &&\n\t\t\t\tlocalCurrencyRate.dateAtTime >= dateYesterday\n\t\t\t) {\n\t\t\t\tconsole.log('currency up to date');\n\n\t\t\t\tsetCurrencyRates(localCurrencyRate.rates);\n\t\t\t} else {\n\t\t\t\tcurrencies = await axiosInstance.get(\n\t\t\t\t\t'https://evoloot.herokuapp.com/api/v1/currency/currencies'\n\t\t\t\t);\n\n\t\t\t\tconsole.log('currency expired or does not exist');\n\n\t\t\t\tconst { rates } = currencies.data.data;\n\n\t\t\t\tlocalCurrencyRate = {\n\t\t\t\t\tdateAtTime: dateNow,\n\t\t\t\t\trates,\n\t\t\t\t};\n\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t'currencyRates',\n\t\t\t\t\tJSON.stringify(localCurrencyRate)\n\t\t\t\t);\n\n\t\t\t\tsetCurrencyRates(rates);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\t/**\n\t * Changes the current active currency.\n\t * @param {String} currency\n\t */\n\tconst changeCurrency = currency => {\n\t\tsetCurrencyRate({ code: currency, value: currencyRates[currency] });\n\t};\n\n\tconst getShopCurrencyData = async () => {\n\t\ttry {\n\t\t\tconst currency = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetShopCurrency()\n\t\t\t);\n\n\t\t\tsetShopCurrency(\n\t\t\t\tcurrency.data.data.shop.paymentSettings.currencyCode\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\t/**\n\t * Gets the shop policies.\n\t */\n\tconst getShopPoliciesData = async () => {\n\t\ttry {\n\t\t\tconst arr = [];\n\n\t\t\tconst policies = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetShopPolicies()\n\t\t\t);\n\n\t\t\tfor (let key in policies.data.data.shop) {\n\t\t\t\tarr.push(policies.data.data.shop[key]);\n\t\t\t}\n\n\t\t\tsetShopPolicies(arr);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\t/**\n\t * Get all the collections along with some of their products.\n\t * - default amount of products is 20.\n\t */\n\tconst getAllCollectionsWithProducts = useCallback(async () => {\n\t\ttry {\n\t\t\tconst collections = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetAllCollectionsAndProducts()\n\t\t\t);\n\n\t\t\tconst treatedCollections = collections.data.data.collections.edges.map(\n\t\t\t\tcollection => collection.node\n\t\t\t);\n\n\t\t\ttreatedCollections.forEach(collection => {\n\t\t\t\tcollection.products = treatCollectionProducts(\n\t\t\t\t\tcollection.products.edges\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// Get available tags from products and place them into the collection\n\t\t\tfor (let i = 0; i < treatedCollections.length; ++i) {\n\t\t\t\ttreatedCollections[i].tags = [];\n\n\t\t\t\tfor (\n\t\t\t\t\tlet j = 0;\n\t\t\t\t\tj < treatedCollections[i].products.length;\n\t\t\t\t\t++j\n\t\t\t\t) {\n\t\t\t\t\tfor (\n\t\t\t\t\t\tlet k = 0;\n\t\t\t\t\t\tk < treatedCollections[i].products[j].tags.length;\n\t\t\t\t\t\t++k\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst alreadyThere = treatedCollections[\n\t\t\t\t\t\t\ti\n\t\t\t\t\t\t].tags.findIndex(\n\t\t\t\t\t\t\ttag =>\n\t\t\t\t\t\t\t\ttag ===\n\t\t\t\t\t\t\t\ttreatedCollections[i].products[j].tags[k]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (alreadyThere === -1) {\n\t\t\t\t\t\t\ttreatedCollections[i].tags.push(\n\t\t\t\t\t\t\t\ttreatedCollections[i].products[j].tags[k]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetCollections(treatedCollections.reverse());\n\t\t} catch (err) {\n\t\t\thistory.replace('/*');\n\t\t}\n\t}, [history]);\n\n\t/**\n\t * Reestructures the products array data.\n\t * @param {Array} products\n\t * @returns Array of products\n\t */\n\tconst treatCollectionProducts = products => {\n\t\tconst newProducts = products.map((e, index) => {\n\t\t\te.node.cursor = products[products.length - 1].cursor;\n\n\t\t\treturn e.node;\n\t\t});\n\n\t\t// treat images\n\t\tnewProducts.forEach(e => {\n\t\t\tconst images = e.images.edges.map(image => {\n\t\t\t\treturn {\n\t\t\t\t\tid: image.node.id,\n\t\t\t\t\taltText: image.node?.altText,\n\t\t\t\t\tsrc: image.node?.originalSrc,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\te.images = images;\n\t\t});\n\n\t\t// treat variants\n\t\tnewProducts.forEach(e => {\n\t\t\tconst variants = e.variants.edges.map(variant => {\n\t\t\t\treturn {\n\t\t\t\t\tid: variant.node.id,\n\t\t\t\t\ttitle: variant.node?.title,\n\t\t\t\t\tavailable: variant.node?.availableForSale,\n\t\t\t\t\tprice: variant.node.priceV2?.amount,\n\t\t\t\t\timage: {\n\t\t\t\t\t\tid: variant.node.image?.id,\n\t\t\t\t\t\taltText: variant.node.image?.altText,\n\t\t\t\t\t\tsrc: variant.node.image?.originalSrc,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n\n\t\t\te.variants = variants;\n\t\t});\n\n\t\treturn newProducts;\n\t};\n\n\t/**\n\t * Add more products to a collection, if available.\n\t * @param {String} handle\n\t * @param {String} queryParam\n\t * @returns cursor of the last product brought.\n\t */\n\tconst loadMoreCollectionProducts = async (handle, queryParam = null) => {\n\t\ttry {\n\t\t\tconst products = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetCollectionProducts(handle, queryParam)\n\t\t\t);\n\n\t\t\tconst productsArr =\n\t\t\t\tproducts.data.data.collectionByHandle.products.edges;\n\n\t\t\tif (productsArr.length > 0) {\n\t\t\t\tconst cursor =\n\t\t\t\t\tproductsArr[\n\t\t\t\t\t\tproducts.data.data.collectionByHandle.products.edges\n\t\t\t\t\t\t\t.length - 1\n\t\t\t\t\t].cursor;\n\n\t\t\t\tconst collectionToAdd = collections.findIndex(\n\t\t\t\t\te => e.handle === handle\n\t\t\t\t);\n\n\t\t\t\tconst productsTreated = treatCollectionProducts(productsArr);\n\n\t\t\t\tlet collectionsCopy = Object.assign(collections);\n\n\t\t\t\tif (!queryParam) {\n\t\t\t\t\tcollectionsCopy = Object.assign(collections);\n\n\t\t\t\t\tcollectionsCopy[collectionToAdd].products = collectionsCopy[\n\t\t\t\t\t\tcollectionToAdd\n\t\t\t\t\t].products.concat(productsTreated);\n\n\t\t\t\t\tsetCollections(collectionsCopy);\n\t\t\t\t} else {\n\t\t\t\t\tcollectionsCopy = Object.assign(collections);\n\n\t\t\t\t\tcollectionsCopy[collectionToAdd].products = collectionsCopy[\n\t\t\t\t\t\tcollectionToAdd\n\t\t\t\t\t].products.concat(productsTreated);\n\n\t\t\t\t\tsetCollections(collectionsCopy);\n\t\t\t\t}\n\n\t\t\t\treturn { cursor, length: productsArr.length };\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} catch (err) {\n\t\t\thistory.replace('/*');\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetAllCollectionsWithProducts();\n\t\tgetShopPoliciesData();\n\t\tgetShopPagesData();\n\t\tgetShopCurrencyData();\n\t\tgetCurrencyRate();\n\t}, [getAllCollectionsWithProducts]);\n\n\treturn (\n\t\t<ClientContext.Provider\n\t\t\tvalue={{\n\t\t\t\tclient,\n\t\t\t\tcollections,\n\t\t\t\tpages,\n\t\t\t\tshopPolicies,\n\t\t\t\tshopCurrency,\n\t\t\t\tcurrencyRate,\n\t\t\t\tchangeCurrency,\n\t\t\t\tloadMoreCollectionProducts,\n\t\t\t}}>\n\t\t\t{props.children}\n\t\t</ClientContext.Provider>\n\t);\n};\n\nexport default ClientContextProvider;\n","import * as actionTypes from './actionTypes';\n\nexport const initializeUserDetails = (\n\tfirstName,\n\tlastName,\n\temail,\n\tmainAddress\n) => {\n\treturn {\n\t\ttype: actionTypes.INITIALIZE_USER_DETAILS,\n\t\tfirstName,\n\t\tlastName,\n\t\temail,\n\t\tmainAddress,\n\t};\n};\n\nexport const updateUserDetails = (firstName, lastName, email) => {\n\treturn {\n\t\ttype: actionTypes.UPDATE_USER_DETAILS,\n\t\tfirstName,\n\t\tlastName,\n\t\temail,\n\t};\n};\n\nexport const updateUserAddress = mainAddress => {\n\treturn {\n\t\ttype: actionTypes.UPDATE_USER_ADDRESS,\n\t\tmainAddress,\n\t};\n};\n\nexport const setUserOrders = orders => {\n\treturn {\n\t\ttype: actionTypes.SET_USER_ORDERS,\n\t\torders,\n\t};\n};\n\nexport const updateUserOrders = orders => {\n\treturn {\n\t\ttype: actionTypes.UPDATE_USER_ORDERS,\n\t\torders,\n\t};\n};\n","export const ADD_PRODUCT_TO_CHECKOUT = 'ADD_PRODUCT_TO_CHECKOUT';\nexport const REMOVE_PRODUCT_FROM_CHECKOUT = 'REMOVE_PRODUCT_FROM_CHECKOUT';\nexport const UPDATE_PRODUCT_FROM_CHECKOUT = 'UPDATE_PRODUCT_FROM_CHECKOUT';\nexport const REMOVE_ALL_PRODUCTS_FROM_CHECKOUT =\n\t'REMOVE_ALL_PRODUCTS_FROM_CHECKOUT';\n\nexport const INITIALIZE_USER_DETAILS = 'INITIALIZE_USER_DETAILS';\nexport const UPDATE_USER_DETAILS = 'UPDATE_USER_DETAILS';\nexport const UPDATE_USER_ADDRESS = 'UPDATE_USER_ADDRESS';\nexport const SET_USER_ORDERS = 'SET_USER_ORDERS';\nexport const UPDATE_USER_ORDERS = 'UPDATE_USER_ORDERS';\n\nexport const SET_SEARCHED_TEXT = 'SET_SEARCHED_TEXT';\n\nexport const TOGGLE_MENU = 'TOGGLE_MENU';\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { getUserSettingsAndAddress } from '../graphql';\nimport axiosInstance from '../axios';\nimport { initializeUserDetails } from '../store/actions/user';\n\nexport const AuthContext = React.createContext({\n\tcustomerToken: null,\n\tloginError: false,\n\tlogin: async token => {},\n\tlogout: async () => {},\n\tuserIsOnline: () => {},\n\trefreshToken: customerToken => {},\n});\n\nconst AuthContextProvider = props => {\n\tconst [userToken, setUserToken] = useState();\n\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\n\t/**\n\t * Gets current user information and stores\n\t * it at the reducer.\n\t */\n\tconst getUserInformation = useCallback(\n\t\tasync accessToken => {\n\t\t\ttry {\n\t\t\t\tconst userInfo = await axiosInstance.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tgetUserSettingsAndAddress(accessToken)\n\t\t\t\t);\n\n\t\t\t\tconst { customer } = userInfo.data.data;\n\n\t\t\t\tdispatch(\n\t\t\t\t\tinitializeUserDetails(\n\t\t\t\t\t\tcustomer.firstName,\n\t\t\t\t\t\tcustomer.lastName,\n\t\t\t\t\t\tcustomer.email,\n\t\t\t\t\t\tcustomer.defaultAddress\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\t/**\n\t * Retrieve user token and get user information.\n\t * - verifies if the token is stored at the local storage.\n\t * - If there is a token, verify its expiration date.\n\t * - If both token and expiration date are ok, set user token and\n\t * retrieve his information.\n\t */\n\tconst isUserOnline = useCallback(async () => {\n\t\tlet token = null;\n\n\t\tconst shopifyCustomerToken = localStorage.getItem(\n\t\t\t'shopifyCustomerToken'\n\t\t);\n\n\t\tif (shopifyCustomerToken) token = JSON.parse(shopifyCustomerToken);\n\n\t\tif (token) {\n\t\t\tconst date = new Date();\n\t\t\tconst expiresAt = new Date(token.expiresAt);\n\n\t\t\tif (!(date > expiresAt)) {\n\t\t\t\tsetUserToken(token.accessToken);\n\n\t\t\t\t// ALSO GET AND FILL REDUCER WITH CUSTOMER ADDRESS AND DETAILS\n\t\t\t\tawait getUserInformation(token.accessToken);\n\t\t\t}\n\t\t}\n\t}, [getUserInformation]);\n\n\tuseEffect(() => {\n\t\tisUserOnline();\n\t}, [isUserOnline]);\n\n\t/**\n\t * Logs the user out.\n\t * - Deletes stored user token and sends user to home page.\n\t */\n\tconst logoutHandler = async () => {\n\t\tsetUserToken(null);\n\t\tlocalStorage.removeItem('shopifyCustomerToken');\n\t\thistory.replace('/');\n\t};\n\n\t/**\n\t * Replace or create a new user token.\n\t * @param {Object} customerToken\n\t */\n\tconst refreshToken = customerToken => {\n\t\tconst {\n\t\t\tcustomerAccessToken,\n\t\t} = customerToken.data.data.customerAccessTokenCreate;\n\n\t\tlocalStorage.setItem(\n\t\t\t'shopifyCustomerToken',\n\t\t\tJSON.stringify(customerAccessToken)\n\t\t);\n\n\t\tsetUserToken(customerAccessToken.accessToken);\n\t};\n\n\t/**\n\t * Logs in user.\n\t * - set current token then retrieves user information.\n\t * @param {String} token\n\t */\n\tconst loginHandler = async token => {\n\t\ttry {\n\t\t\tsetUserToken(token);\n\t\t\tawait getUserInformation(token);\n\t\t} catch (err) {\n\t\t\t//console.log(err);\n\t\t\t// else connection error\n\t\t}\n\t};\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\tcustomerToken: userToken,\n\t\t\t\trefreshToken,\n\t\t\t\tlogin: loginHandler,\n\t\t\t\tlogout: logoutHandler,\n\t\t\t\tuserIsOnline: isUserOnline,\n\t\t\t}}>\n\t\t\t{props.children}\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport default AuthContextProvider;\n","import React, {\n\tFragment,\n\tmemo,\n\tuseContext,\n\tuseEffect,\n\tuseCallback,\n\tuseState,\n} from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { ClientContext } from '../context/clientContext';\nimport sprite from '../assets/icons/sprite.svg';\nimport { AuthContext } from '../context/authContext';\n\nconst Navbar = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst [navTitles, setNavTitles] = useState([]);\n\tconst [candidateNewMenu, setCandidateNewMenu] = useState([]);\n\tconst [menu, setMenu] = useState([]);\n\tconst clientContext = useContext(ClientContext);\n\tconst { collections } = clientContext;\n\tconst history = useHistory();\n\tconst { vertical, hide, changeMenuName } = props;\n\n\tconst getCollections = useCallback(() => {\n\t\tif (collections) {\n\t\t\tconst navTitles = collections.map(col => {\n\t\t\t\treturn { title: col.title, handle: col.handle, tags: col.tags };\n\t\t\t});\n\n\t\t\tsetNavTitles(navTitles);\n\t\t}\n\t}, [collections]);\n\n\tconst logout = async () => {\n\t\ttry {\n\t\t\tprops.hide();\n\t\t\tawait authContext.logout();\n\t\t} catch (err) {\n\t\t\t// connection error\n\t\t\tconsole.log('D:', err);\n\t\t}\n\t};\n\n\tconst goToMyAccount = async () => {\n\t\tprops.hide();\n\t\thistory.push('/me');\n\t};\n\n\tconst turnToMenu = useCallback(() => {\n\t\tgetCollections();\n\t\tchangeMenuName();\n\t}, [getCollections, changeMenuName]);\n\n\tconst turnToSubMenu = useCallback(\n\t\tmenuSelected => {\n\t\t\tchangeMenuName(\n\t\t\t\tmenuSelected.title,\n\t\t\t\t`/collection/${menuSelected.handle}`,\n\t\t\t\tturnToMenu\n\t\t\t);\n\n\t\t\tconst generatedMenu = menuSelected.tags.map((tag, index) => (\n\t\t\t\t<li className='navbar__list-item' key={index}>\n\t\t\t\t\t<div className='navbar__title-container'>\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tto={`/collection/${menuSelected.handle}?tag=${tag}`}\n\t\t\t\t\t\t\tclassName='paragraph navbar-vertical__link navbar-vertical__link--menu menu__link'\n\t\t\t\t\t\t\tonClick={hide}>\n\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t));\n\n\t\t\tsetCandidateNewMenu(generatedMenu);\n\t\t},\n\t\t[changeMenuName, hide, turnToMenu]\n\t);\n\n\t// menu needs to become state\n\tconst generateMenu = useCallback(\n\t\t(menu = navTitles) => {\n\t\t\tconst generatedMenu = menu.map((navTitle, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<li className='navbar__list-item' key={index}>\n\t\t\t\t\t\t{vertical ? (\n\t\t\t\t\t\t\t<div className='navbar__title-container'>\n\t\t\t\t\t\t\t\t{navTitle.tags.length > 0 ? (\n\t\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\t\tclassName='paragraph navbar-vertical__link navbar-vertical__link--menu menu__link'\n\t\t\t\t\t\t\t\t\t\tonClick={() => turnToSubMenu(navTitle)}>\n\t\t\t\t\t\t\t\t\t\t{navTitle.title}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\tto={`/collection/${navTitle.handle}`}\n\t\t\t\t\t\t\t\t\t\tclassName='paragraph navbar-vertical__link navbar-vertical__link--menu menu__link'\n\t\t\t\t\t\t\t\t\t\tactiveClassName=' navbar-vertical__link--active menu__link'\n\t\t\t\t\t\t\t\t\t\tonClick={hide}>\n\t\t\t\t\t\t\t\t\t\t{navTitle.title}\n\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{/* <button>{'>'}</button> */}\n\t\t\t\t\t\t\t\t<ol className='navbar__link-hidden-list'>\n\t\t\t\t\t\t\t\t\t{navTitle.tags.map(tag => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\tkey={tag}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='navbar__link-hidden-list-item'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={hide}>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/collection/${navTitle.handle}?tag=${tag}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'paragraph navbar__link'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\tto={`/collection/${navTitle.handle}`}\n\t\t\t\t\t\t\t\t\tclassName='paragraph  navbar__link '\n\t\t\t\t\t\t\t\t\tactiveClassName=' navbar__link--active '>\n\t\t\t\t\t\t\t\t\t{navTitle.title}\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t{/* little button on vertical to open submenus */}\n\t\t\t\t\t\t\t\t<ol className='navbar__link-hidden-list'>\n\t\t\t\t\t\t\t\t\t{navTitle.tags.map(tag => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\tkey={tag}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='navbar__link-hidden-list-item'>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/collection/${navTitle.handle}?tag=${tag}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'paragraph navbar__link'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tsetMenu(generatedMenu);\n\t\t},\n\t\t[navTitles, vertical, hide, turnToSubMenu]\n\t);\n\n\tuseEffect(() => {\n\t\tgetCollections();\n\t}, [clientContext, getCollections]);\n\n\tuseEffect(() => {\n\t\tgenerateMenu();\n\t}, [generateMenu]);\n\n\tuseEffect(() => {\n\t\tsetMenu(candidateNewMenu);\n\t}, [candidateNewMenu]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<span className='navbar-line'></span>\n\t\t\t{navTitles.length > 0 && (\n\t\t\t\t<nav\n\t\t\t\t\tclassName={` ${\n\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t? 'navbar-vertical navbar-vertical--no-background'\n\t\t\t\t\t\t\t: 'navbar'\n\t\t\t\t\t}`}>\n\t\t\t\t\t<ul\n\t\t\t\t\t\tclassName={` ${\n\t\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t\t? 'navbar-vertical__list'\n\t\t\t\t\t\t\t\t: 'navbar__list'\n\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t{menu}\n\t\t\t\t\t\t<span className='navbar-line navbar-line--thicc'></span>\n\t\t\t\t\t\t{props.vertical && (\n\t\t\t\t\t\t\t<li className='navbar-vertical__list-item navbar-vertical__list-item--menu'>\n\t\t\t\t\t\t\t\t{!authContext.customerToken ? (\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--account button__black--account button__black--account-menu-panel '\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph menu__link'>\n\t\t\t\t\t\t\t\t\t\t\t\tAccount\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--login'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-enter`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>log in</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--signup'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/signup')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-clipboard`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>sign up</p>\n\t\t\t\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--profile'\n\t\t\t\t\t\t\t\t\t\t\tonClick={goToMyAccount}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph menu__link'>\n\t\t\t\t\t\t\t\t\t\t\t\tMy Account\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--logout'\n\t\t\t\t\t\t\t\t\t\t\tonClick={logout}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-exit`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph menu__link'>\n\t\t\t\t\t\t\t\t\t\t\t\tLog out\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default memo(Navbar);\n","import React, {\n\tmemo,\n\tuseContext,\n\tuseEffect,\n\tuseCallback,\n\tuseState,\n} from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { ClientContext } from '../context/clientContext';\nimport sprite from '../assets/icons/sprite.svg';\nimport { AuthContext } from '../context/authContext';\n\nconst NavbarSticky = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst [navTitles, setNavTitles] = useState([]);\n\tconst clientContext = useContext(ClientContext);\n\tconst { collections } = clientContext;\n\n\tconst getCollections = useCallback(async () => {\n\t\tif (collections) {\n\t\t\tconst navTitles = collections.map(col => {\n\t\t\t\treturn { title: col.title, handle: col.handle, tags: col.tags };\n\t\t\t});\n\n\t\t\tsetNavTitles(navTitles);\n\t\t}\n\t}, [collections]);\n\n\tconst history = useHistory();\n\n\tconst logout = async () => {\n\t\ttry {\n\t\t\tawait authContext.logout();\n\t\t} catch (err) {\n\t\t\t// connection error\n\t\t\tconsole.log('D:', err);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetCollections();\n\t}, [clientContext, getCollections]);\n\n\treturn (\n\t\t<div className='navbar-sticky'>\n\t\t\t<span className='navbar-line'></span>\n\t\t\t{navTitles.length > 0 && (\n\t\t\t\t<nav\n\t\t\t\t\tclassName={` ${\n\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t? 'navbar-vertical navbar-vertical--no-background'\n\t\t\t\t\t\t\t: 'navbar'\n\t\t\t\t\t}`}>\n\t\t\t\t\t<ul\n\t\t\t\t\t\tclassName={` ${\n\t\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t\t? 'navbar-vertical__list'\n\t\t\t\t\t\t\t\t: 'navbar__list'\n\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t{navTitles.map((navTitle, index) => (\n\t\t\t\t\t\t\t<li className='navbar__list-item' key={index}>\n\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\tto={`/collection/${navTitle.handle}`}\n\t\t\t\t\t\t\t\t\tclassName={`paragraph  ${\n\t\t\t\t\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t\t\t\t\t? ' navbar-vertical__link navbar-vertical__link--menu'\n\t\t\t\t\t\t\t\t\t\t\t: ' navbar__link '\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\tactiveClassName={\n\t\t\t\t\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t\t\t\t\t? ' navbar-vertical__link--active'\n\t\t\t\t\t\t\t\t\t\t\t: ' navbar__link--active '\n\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t{navTitle.title}\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t<ol className='navbar__link-hidden-list'>\n\t\t\t\t\t\t\t\t\t{navTitle.tags.map(tag => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\tkey={tag}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='navbar__link-hidden-list-item'>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/collection/${navTitle.handle}?tag=${tag}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'paragraph navbar__link'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<span className='navbar-line navbar-line--thicc'></span>\n\t\t\t\t\t\t{props.vertical && (\n\t\t\t\t\t\t\t<li className='navbar-vertical__list-item navbar-vertical__list-item--menu'>\n\t\t\t\t\t\t\t\t{!authContext.customerToken ? (\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--account button__black--account button__black--account-menu-panel '\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>Account</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--login'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-enter`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>log in</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--signup'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/signup')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-clipboard`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>sign up</p>\n\t\t\t\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--profile'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => history.push('/me')}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\tMy Account\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--logout'\n\t\t\t\t\t\t\t\t\t\t\tonClick={logout}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-exit`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>Log out</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default memo(NavbarSticky);\n","import * as actionTypes from './actionTypes';\n\nexport const setSearchText = searchText => {\n\treturn {\n\t\ttype: actionTypes.SET_SEARCHED_TEXT,\n\t\tsearchText,\n\t};\n};\n","import React, { useState, useEffect, useCallback } from 'react';\n\nconst Select = props => {\n\tconst [showList, toggleShowList] = useState(false);\n\n\tconst [selected, setSelected] = useState(\n\t\t<span role='img' aria-label={'flag'}>\n\t\t\t&#127482;&#127480; USD\n\t\t</span>\n\t);\n\n\tconst onButtonClick = () => {\n\t\ttoggleShowList(prevState => !prevState);\n\t};\n\n\tconst changeSelection = useCallback(identifier => {\n\t\tswitch (identifier) {\n\t\t\tcase 'USD':\n\t\t\t\tsetSelected(\n\t\t\t\t\t<span role='img' aria-label={'flag'}>\n\t\t\t\t\t\t&#127482;&#127480; USD\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'CAD':\n\t\t\t\tsetSelected(\n\t\t\t\t\t<span role='img' aria-label={'Canadian flag'}>\n\t\t\t\t\t\t&#127464;&#127462; CAD\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'EUR':\n\t\t\t\tsetSelected(\n\t\t\t\t\t<span role='img' aria-label={'EU flag'}>\n\t\t\t\t\t\t&#127466;&#127482; EUR\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'GBP':\n\t\t\t\tsetSelected(\n\t\t\t\t\t<span role='img' aria-label={'UK flag'}>\n\t\t\t\t\t\t&#127468;&#127463; GBP\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tchangeSelection(props.currentOption);\n\t}, [changeSelection, props.currentOption]);\n\n\treturn (\n\t\t<div className='input__select-header-container'>\n\t\t\t<input\n\t\t\t\tchecked={showList}\n\t\t\t\treadOnly\n\t\t\t\ttype='checkbox'\n\t\t\t\tclassName='input__select-checkbox'\n\t\t\t\tid='select-toggle'\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor='select-toggle'\n\t\t\t\tclassName='input input--black input__select input__select--header'\n\t\t\t\tonClick={onButtonClick}>\n\t\t\t\t{selected}\n\t\t\t</label>\n\t\t\t<ul className='input__selection-list'>\n\t\t\t\t<li\n\t\t\t\t\tclassName='paragraph input__selection-list-item'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonButtonClick();\n\t\t\t\t\t\tchangeSelection('USD');\n\t\t\t\t\t\tprops.onOptionClick('USD');\n\t\t\t\t\t}}>\n\t\t\t\t\t<span role='img' aria-label={'USA flag'}>\n\t\t\t\t\t\t&#127482;&#127480; USD\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t\t<li\n\t\t\t\t\tclassName='paragraph input__selection-list-item'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonButtonClick();\n\t\t\t\t\t\tchangeSelection('CAD');\n\t\t\t\t\t\tprops.onOptionClick('CAD');\n\t\t\t\t\t}}>\n\t\t\t\t\t<span role='img' aria-label={'Canadian flag'}>\n\t\t\t\t\t\t&#127464;&#127462; CAD\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t\t<li\n\t\t\t\t\tclassName='paragraph input__selection-list-item'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonButtonClick();\n\t\t\t\t\t\tchangeSelection('EUR');\n\t\t\t\t\t\tprops.onOptionClick('EUR');\n\t\t\t\t\t}}>\n\t\t\t\t\t<span role='img' aria-label={'EU flag'}>\n\t\t\t\t\t\t&#127466;&#127482; EUR\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t\t<li\n\t\t\t\t\tclassName='paragraph input__selection-list-item'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonButtonClick();\n\t\t\t\t\t\tchangeSelection('GBP');\n\t\t\t\t\t\tprops.onOptionClick('GBP');\n\t\t\t\t\t}}>\n\t\t\t\t\t<span role='img' aria-label={'UK flag'}>\n\t\t\t\t\t\t&#127468;&#127463; GBP\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default Select;\n","import * as actionTypes from './actionTypes';\n\nexport const addProductToCheckout = (\n\tvariant,\n\tproductTitle,\n\tquantity,\n\thandle\n) => {\n\treturn {\n\t\ttype: actionTypes.ADD_PRODUCT_TO_CHECKOUT,\n\t\tvariant,\n\t\tproductTitle,\n\t\tquantity,\n\t\thandle,\n\t};\n};\n\nexport const removeProductFromCheckout = variant => {\n\treturn {\n\t\ttype: actionTypes.REMOVE_PRODUCT_FROM_CHECKOUT,\n\t\tvariant,\n\t};\n};\n\nexport const updateProductFromCheckout = (\n\tvariant,\n\tquantity,\n\tfromItself = false\n) => {\n\treturn {\n\t\ttype: actionTypes.UPDATE_PRODUCT_FROM_CHECKOUT,\n\t\tvariant,\n\t\tquantity,\n\t\tfromItself,\n\t};\n};\n\nexport const removeAllProductsFromCheckout = () => {\n\treturn {\n\t\ttype: actionTypes.REMOVE_ALL_PRODUCTS_FROM_CHECKOUT,\n\t};\n};\n","import React from 'react';\n\nconst QuantityInput = props => {\n\tlet { productQuantity, setQuantity } = props;\n\n\tconst inputSize = props.small ? 'input input--small' : 'input';\n\tconst labelSize = props.small\n\t\t? 'paragraph paragraph--black input__container-paragraph-small'\n\t\t: 'paragraph paragraph--black';\n\n\tconst inputContainer = props.small\n\t\t? 'input__container input__container--small'\n\t\t: 'input__container';\n\n\tconst inputContainerBig = props.big ? 'input__container--big' : '';\n\n\tconst inputContainerFinal = [\n\t\t...inputContainer.split(' '),\n\t\tinputContainerBig,\n\t].join(' ');\n\n\tconst addToQuantity = () => {\n\t\tsetQuantity(++productQuantity);\n\t};\n\n\tconst subtractFromQuantity = () => {\n\t\tif (productQuantity > 1) setQuantity(--productQuantity);\n\t};\n\n\tconst addFromTextInput = event => {\n\t\tvalidateNumber(event.target.value) &&\n\t\t\tsetQuantity(Math.floor(event.target.value) * 1);\n\t};\n\n\tconst validateNumber = number => {\n\t\tif (number.trim() === '') return true;\n\n\t\tif (isNaN(number)) return false;\n\n\t\tif (number.trim() <= 0) return false;\n\n\t\treturn true;\n\t};\n\n\treturn (\n\t\t<div className={inputContainerFinal}>\n\t\t\t<p className={labelSize}>Quantity:</p>\n\n\t\t\t<div className='input__quantity-buttons'>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`button ${inputSize}  input__quantity input__quantity--left`}\n\t\t\t\t\tonClick={subtractFromQuantity}>\n\t\t\t\t\t<p className='paragraph'>-</p>\n\t\t\t\t</button>\n\t\t\t\t<input\n\t\t\t\t\tclassName={`${inputSize} input__quantity`}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tonChange={addFromTextInput}\n\t\t\t\t\tvalue={productQuantity}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`button ${inputSize} input__quantity input__quantity--right`}\n\t\t\t\t\tonClick={addToQuantity}>\n\t\t\t\t\t<p className='paragraph'>+</p>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default QuantityInput;\n","import React, { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport {\n\tremoveProductFromCheckout,\n\tupdateProductFromCheckout,\n} from '../store/actions/checkout';\nimport QuantityInput from './QuantityInput';\nimport { ClientContext } from '../context/clientContext';\n\nconst LineProduct = props => {\n\tconst dispatch = useDispatch();\n\tconst clientContext = useContext(ClientContext);\n\tconst { product } = props;\n\n\tconst cardCheckout = props.big\n\t\t? 'card card--checkout card--checkout-big'\n\t\t: 'card card--checkout';\n\n\tconst cardCheckoutImageBox = props.big\n\t\t? 'card__image-box card__image-box--checkout card__image-box--checkout-big'\n\t\t: 'card__image-box card__image-box--checkout';\n\n\tconst cardCheckoutImage = props.big\n\t\t? 'card__image'\n\t\t: 'card__image card__image--checkout';\n\n\tconst cardCheckoutRemoveButton = props.big\n\t\t? 'button button__small-circle button__big-circle'\n\t\t: 'button button__small-circle button__small-circle--checkout';\n\n\tconst cardCheckoutRemoveButtonIcon = props.big\n\t\t? 'button__icon button__icon--card-cart-big'\n\t\t: 'button__icon button__icon--card';\n\n\tconst cardCheckoutDetails = props.big\n\t\t? 'card__checkout-details card__checkout-details--big'\n\t\t: 'card__checkout-details';\n\n\tconst cardTitle = props.big\n\t\t? 'heading-tertiary card__title card__title--big'\n\t\t: 'heading-tertiary card__title card__title--checkout';\n\n\tconst removeProduct = () => {\n\t\tdispatch(removeProductFromCheckout(product));\n\t};\n\n\tconst updateQuantity = quantity => {\n\t\tdispatch(updateProductFromCheckout(product, quantity, true));\n\t};\n\n\treturn (\n\t\t<li key={product.id} className={cardCheckout}>\n\t\t\t<div className={cardCheckoutImageBox}>\n\t\t\t\t<img\n\t\t\t\t\tclassName={cardCheckoutImage}\n\t\t\t\t\tsrc={product.image.src}\n\t\t\t\t\talt={\n\t\t\t\t\t\tproduct.image.altText\n\t\t\t\t\t\t\t? product.image.altText\n\t\t\t\t\t\t\t: product.productTitle\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className={cardCheckoutDetails}>\n\t\t\t\t<Link className='card__link' to={`/product/${product.handle}`}>\n\t\t\t\t\t<h3 className={cardTitle}>{product.productTitle}</h3>\n\t\t\t\t</Link>\n\n\t\t\t\t<QuantityInput\n\t\t\t\t\tproductQuantity={product.quantity}\n\t\t\t\t\tsetQuantity={updateQuantity}\n\t\t\t\t\tsmall={props.small}\n\t\t\t\t\tbig={props.big}\n\t\t\t\t/>\n\n\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t{product.quantity}x $\n\t\t\t\t\t{(product.price * clientContext.currencyRate.value).toFixed(\n\t\t\t\t\t\t2\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tclassName={cardCheckoutRemoveButton}\n\t\t\t\tonClick={removeProduct}>\n\t\t\t\t<svg className={cardCheckoutRemoveButtonIcon}>\n\t\t\t\t\t<use xlinkHref={`${sprite}#icon-cross`}></use>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</li>\n\t);\n};\n\nexport default LineProduct;\n","import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport LineProduct from './LineProduct';\n\nconst LineProducts = props => {\n\tconst checkout = useSelector(state => state.checkout);\n\n\treturn (\n\t\t<ul>\n\t\t\t{checkout.lineItems.length > 0 ? (\n\t\t\t\tcheckout.lineItems.map(item => (\n\t\t\t\t\t<LineProduct\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\tproduct={item}\n\t\t\t\t\t\tsmall={props.small}\n\t\t\t\t\t\tbig={props.big}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\t-- ...is empty. --\n\t\t\t\t</h3>\n\t\t\t)}\n\t\t</ul>\n\t);\n};\n\nexport default memo(LineProducts);\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport BarLoader from 'react-spinners/BarLoader';\n\nconst LoadingBar = props => {\n\tconst override = css`\n\t\tmargin: auto;\n\t\tborder-radius: 5rem;\n\t`;\n\n\treturn (\n\t\t<div style={{ marginTop: props.marginTop ? props.marginTop : 0 }}>\n\t\t\t<div className='sweet-loading'>\n\t\t\t\t<BarLoader\n\t\t\t\t\tcss={override}\n\t\t\t\t\theight={props.height ? props.height : 5}\n\t\t\t\t\twidth={props.width ? props.width : 300}\n\t\t\t\t\tcolor={props.color ? props.color : '#54cd00'}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default LoadingBar;\n","import React, { Fragment, memo, useContext, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport LineProducts from './LineProducts';\nimport { ClientContext } from '../context/clientContext';\nimport { removeAllProductsFromCheckout } from '../store/actions/checkout';\nimport { updateCheckoutShippingAddress, updateCheckoutEmail } from '../graphql';\nimport axiosInstace from '../axios';\nimport LoadingBar from './LoadingBar';\n\nconst addressFields = {\n\tfirstName: '',\n\tlastName: '',\n\tcompany: '',\n\taddress1: '',\n\taddress2: '',\n\tcity: '',\n\tcountry: '',\n\tprovince: '',\n\tzip: '',\n};\n\nconst CartDropdown = props => {\n\tconst checkout = useSelector(state => state.checkout);\n\tconst user = useSelector(state => state.user);\n\tconst dispatch = useDispatch();\n\tconst clientContext = useContext(ClientContext);\n\tconst history = useHistory();\n\tconst [loading, setLoading] = useState(false);\n\n\t/**\n\t * Creates a checkout.\n\t * - Treat user products chosen.\n\t * - Creates a new shopify checkout.\n\t * - Adds user's email to checkout(if logged in).\n\t * - Adds user's main address to chekout(if there is one).\n\t * - Finally, adds products to checkout, opening a new tab\n\t * where the user can complete or edit his checkout.\n\t */\n\tconst createQuickCheckout = async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst lineItems = checkout.lineItems.map(product => {\n\t\t\t\treturn {\n\t\t\t\t\tvariantId: product.id,\n\t\t\t\t\tquantity: product.quantity,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst newCheckout = await clientContext.client.checkout.create();\n\n\t\t\tif (user.email)\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutEmail(user.email, newCheckout.id)\n\t\t\t\t);\n\n\t\t\tif (user.mainAddress) {\n\t\t\t\tconst addressWithoutId = { ...addressFields };\n\n\t\t\t\tfor (let key in user.mainAddress)\n\t\t\t\t\tif (key !== 'id')\n\t\t\t\t\t\taddressWithoutId[key] = user.mainAddress[key];\n\n\t\t\t\t//const checkoutWithAddress =\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutShippingAddress(\n\t\t\t\t\t\taddressWithoutId,\n\t\t\t\t\t\tnewCheckout.id\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// const errors =\n\t\t\t\t// \tcheckoutWithAddress.data.data\n\t\t\t\t// \t\t.checkoutShippingAddressUpdateV2.checkoutUserErrors;\n\n\t\t\t\t// if (errors.length > 0) throw new Error(errors[0].message);\n\t\t\t}\n\n\t\t\tconst checkoutWithProducts = await clientContext.client.checkout.addLineItems(\n\t\t\t\tnewCheckout.id,\n\t\t\t\tlineItems\n\t\t\t);\n\n\t\t\twindow.open(checkoutWithProducts.webUrl);\n\t\t\tsetLoading(false);\n\n\t\t\tdispatch(removeAllProductsFromCheckout());\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\tconsole.log('Something terrible happened ', err);\n\t\t}\n\t};\n\n\tif (checkout.lineItems.length > 0)\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='cart cart--dropdown'>\n\t\t\t\t\t<div className='cart__panel'>\n\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary no-margin'>\n\t\t\t\t\t\t\tShopping Cart:\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t{/* LIST OF LINE PRODUCTS */}\n\t\t\t\t\t\t<LineProducts small={true} />\n\n\t\t\t\t\t\t<span className='navbar-line small-margin-top'></span>\n\n\t\t\t\t\t\t<div className='cart__total'>\n\t\t\t\t\t\t\t<p className='paragraph'>Total: </p>\n\t\t\t\t\t\t\t<div className='product__price'>\n\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\tcheckout.totalPrice *\n\t\t\t\t\t\t\t\t\t\tclientContext.currencyRate.value\n\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\tdisabled={checkout.totalPrice === 0}\n\t\t\t\t\t\t\t\t\tonClick={createQuickCheckout}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tcheckout\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big small-margin-top'\n\t\t\t\t\t\t\t\t\tonClick={() => history.push('/cart')}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tview cart\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar marginTop='3rem' />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<p>&emsp;</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\n\treturn null;\n};\n\nexport default memo(CartDropdown);\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, {\n\tFragment,\n\tmemo,\n\tuseContext,\n\tuseState,\n\tuseEffect,\n\tuseRef,\n\tuseCallback,\n} from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Navbar from './Navbar';\nimport NavbarSticky from './NavbarSticky';\nimport sprite from '../assets/icons/sprite.svg';\nimport logo from '../assets/images/logo.png';\nimport { AuthContext } from '../context/authContext';\nimport { ClientContext } from '../context/clientContext';\nimport { setSearchText } from '../store/actions/search';\nimport Select from '../components/Select';\nimport CartDropdown from '../components/CartDropdown';\n\nconst Header = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst clientContext = useContext(ClientContext);\n\tconst checkout = useSelector(state => state.checkout);\n\tconst search = useSelector(state => state.search);\n\tconst dispatch = useDispatch();\n\t// const [callToActionOpen, setCallToActionOpen] = useState(true);\n\n\tconst history = useHistory();\n\tconst { pathname } = useLocation();\n\n\t// const logout = async () => {\n\t// \ttry {\n\t// \t\tawait authContext.logout();\n\t// \t} catch (err) {\n\t// \t\t// connection error\n\t// \t\tconsole.log('D:', err);\n\t// \t}\n\t// };\n\n\t/**\n\t * On text change, set the current value to 'searchInput'\n\t * @param {String} text text input value\n\t */\n\tconst handleSearchTextChanged = event => {\n\t\tevent.preventDefault();\n\n\t\tdispatch(setSearchText(event.target.value));\n\n\t\t// or go to home?\n\t\tif (event.target.value.trim() === '') history.goBack();\n\t\telse if (pathname === '/search') history.replace('/search');\n\t\telse history.push('/search');\n\t};\n\n\tconst handleChangeCurrency = currency => {\n\t\tclientContext.changeCurrency(currency);\n\t};\n\n\t// const renderCallToAction = () => {\n\t// \tconst callToAction = clientContext.pages.filter(\n\t// \t\tpage => page.title === 'Call-To-Action'\n\t// \t);\n\n\t// \tif (callToAction !== undefined) {\n\t// \t\treturn (\n\t// \t\t\t<Fragment>\n\t// \t\t\t\t{callToActionOpen && (\n\t// \t\t\t\t\t<div className='call-to-action'>\n\t// \t\t\t\t\t\t<div\n\t// \t\t\t\t\t\t\tclassName='card__description-box-description'\n\t// \t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t// \t\t\t\t\t\t\t\t__html: callToAction[0].body,\n\t// \t\t\t\t\t\t\t}}></div>\n\n\t// \t\t\t\t\t\t<button\n\t// \t\t\t\t\t\t\tclassName='button button__small-circle'\n\t// \t\t\t\t\t\t\tonClick={() => setCallToActionOpen(false)}>\n\t// \t\t\t\t\t\t\t<svg className='button__icon'>\n\t// \t\t\t\t\t\t\t\t<use\n\t// \t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-cross`}></use>\n\t// \t\t\t\t\t\t\t</svg>\n\t// \t\t\t\t\t\t</button>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t)}\n\t// \t\t\t</Fragment>\n\t// \t\t);\n\t// \t}\n\t// };\n\n\tconst [isSticky, setSticky] = useState(false);\n\tconst element = useRef(null);\n\n\t/**\n\t * When the user scrolls, it checks whether window.scrollY is superior\n\t * or not to stickyRef.current.getBoundingClientRect().bottom and then\n\t * handles the isSticky state consequently\n\t */\n\tconst handleScroll = useCallback(() => {\n\t\tif (element.current)\n\t\t\twindow.scrollY / 3 > element.current.getBoundingClientRect().bottom\n\t\t\t\t? setSticky(true)\n\t\t\t\t: setSticky(false);\n\t}, []);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('scroll', handleScroll);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', () => handleScroll());\n\t\t};\n\t}, [handleScroll]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<header className='header'>\n\t\t\t\t{/* NEEDS TO STAY CLOSED FOR LIFE */}\n\t\t\t\t{/* {clientContext.pages && renderCallToAction()} */}\n\n\t\t\t\t<div className='header__body' ref={element}>\n\t\t\t\t\t<div className='header__content'>\n\t\t\t\t\t\t<Link className='header__logo' to='/'>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='header__logo-image'\n\t\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\t\talt='Evoloot Marketplace Logo'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className='header__buttons'>\n\t\t\t\t\t\t\t<div className='header__container'>\n\t\t\t\t\t\t\t\t<div className='header__search-form'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tautoFocus={pathname === '/search'}\n\t\t\t\t\t\t\t\t\t\ttype='search'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Search'\n\t\t\t\t\t\t\t\t\t\tclassName='input input__search'\n\t\t\t\t\t\t\t\t\t\tvalue={search.searchText}\n\t\t\t\t\t\t\t\t\t\tonChange={handleSearchTextChanged}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tclassName='button button__search'>\n\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-search`}></use>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className='header__user'>\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--cart'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/cart')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-cart`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<div className='button__quantity'>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{checkout.lineItems.length >\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? checkout.lineItems\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tel =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tel.quantity\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.reduce(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(a, b) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta + b\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 0}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<CartDropdown />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tonOptionClick={handleChangeCurrency}\n\t\t\t\t\t\t\t\t\t\t\tcurrentOption={\n\t\t\t\t\t\t\t\t\t\t\t\tclientContext.currencyRate.code\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{!authContext.customerToken ? (\n\t\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--account'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAccount\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--login'\n\t\t\t\t\t\t\t\t\t\tonClick={() => history.push('/login')}>\n\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-enter`}></use>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>log in</p>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--signup'\n\t\t\t\t\t\t\t\t\t\tonClick={() => history.push('/signup')}>\n\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-clipboard`}></use>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>sign up</p>\n\t\t\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--profile'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/me')\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tMy Account\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--logout'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={logout}>\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-exit`}></use>\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tLog out\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{isSticky ? <NavbarSticky /> : <Navbar />}\n\t\t\t</header>\n\t\t</Fragment>\n\t);\n};\n\nexport default memo(Header);\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { Fragment, memo, useContext } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport logo from '../assets/images/logo.png';\nimport { toggleMenu } from '../store/actions/menu';\nimport { setSearchText } from '../store/actions/search';\nimport { ClientContext } from '../context/clientContext';\n\nconst HeaderMobile = props => {\n\tconst clientContext = useContext(ClientContext);\n\tconst search = useSelector(state => state.search);\n\tconst dispatch = useDispatch();\n\t// const [callToActionOpen, setCallToActionOpen] = useState(true);\n\n\tconst history = useHistory();\n\tconst { pathname } = useLocation();\n\n\t/**\n\t * On text change, set the current value to 'searchInput'\n\t * @param {String} text text input value\n\t */\n\tconst handleSearchTextChanged = event => {\n\t\tevent.preventDefault();\n\n\t\tdispatch(setSearchText(event.target.value));\n\n\t\t// or go to home?\n\t\tif (event.target.value.trim() === '') history.goBack();\n\t\telse if (pathname === '/search') history.replace('/search');\n\t\telse history.push('/search');\n\t};\n\n\tconst handleChangeCurrency = event => {\n\t\tclientContext.changeCurrency(event.target.value);\n\t};\n\n\t// const renderCallToAction = () => {\n\t// \tconst callToAction = clientContext.pages.filter(\n\t// \t\tpage => page.title === 'Call-To-Action'\n\t// \t);\n\n\t// \tif (callToAction !== undefined) {\n\t// \t\treturn (\n\t// \t\t\t<Fragment>\n\t// \t\t\t\t{callToActionOpen && (\n\t// \t\t\t\t\t<div className='call-to-action'>\n\t// \t\t\t\t\t\t<div\n\t// \t\t\t\t\t\t\tclassName='call-to-action__description'\n\t// \t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t// \t\t\t\t\t\t\t\t__html: callToAction[0].body,\n\t// \t\t\t\t\t\t\t}}></div>\n\n\t// \t\t\t\t\t\t<button\n\t// \t\t\t\t\t\t\tclassName='button button__small-circle'\n\t// \t\t\t\t\t\t\tonClick={() => setCallToActionOpen(false)}>\n\t// \t\t\t\t\t\t\t<svg className='button__icon'>\n\t// \t\t\t\t\t\t\t\t<use\n\t// \t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-cross`}></use>\n\t// \t\t\t\t\t\t\t</svg>\n\t// \t\t\t\t\t\t</button>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t)}\n\t// \t\t\t</Fragment>\n\t// \t\t);\n\t// \t}\n\t// };\n\n\tconst showMenu = () => {\n\t\tdispatch(toggleMenu());\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<header className='header header--mobile'>\n\t\t\t\t{/* NEEDS TO STAY CLOSED FOR LIFE */}\n\t\t\t\t{/* {clientContext.pages && renderCallToAction()} */}\n\t\t\t\t<div className='header__body header__body--mobile'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='button menu__button menu__button--real'\n\t\t\t\t\t\tonClick={showMenu}>\n\t\t\t\t\t\t<svg className='button__icon menu__button-icon menu__button-icon--real'>\n\t\t\t\t\t\t\t<use xlinkHref={`${sprite}#icon-menu`}></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<div className='header__content header__content--mobile'>\n\t\t\t\t\t\t<Link className='header__logo' to='/'>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='header__logo-image'\n\t\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\t\talt='Evoloot Marketplace Logo'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className='header__buttons header__buttons--mobile'>\n\t\t\t\t\t\t\t<div className='header__user'>\n\t\t\t\t\t\t\t\t<div className='header__search-form  header__search-form--mobile'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tautoFocus={pathname === '/search'}\n\t\t\t\t\t\t\t\t\t\ttype='search'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Search'\n\t\t\t\t\t\t\t\t\t\tclassName='input input__search  input__search--mobile'\n\t\t\t\t\t\t\t\t\t\tvalue={search.searchText}\n\t\t\t\t\t\t\t\t\t\tonChange={handleSearchTextChanged}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tclassName='button button__search'>\n\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-search`}></use>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\n\t\t\t<div className='header__mobile-currency-button'>\n\t\t\t\t<select\n\t\t\t\t\tclassName='input input--black input__select input__select--header'\n\t\t\t\t\tonChange={handleChangeCurrency}\n\t\t\t\t\tvalue={clientContext.currencyRate.code}>\n\t\t\t\t\t<option className='paragraph' value='USD'>\n\t\t\t\t\t\t&#127482;&#127480; USD\n\t\t\t\t\t</option>\n\t\t\t\t\t<option className='paragraph' value='CAD'>\n\t\t\t\t\t\t&#127464;&#127462; CAD\n\t\t\t\t\t</option>\n\t\t\t\t\t<option className='paragraph' value='EUR'>\n\t\t\t\t\t\t&#127466;&#127482; EUR\n\t\t\t\t\t</option>\n\t\t\t\t\t<option className='paragraph' value='GBP'>\n\t\t\t\t\t\t&#127468;&#127463; GBP\n\t\t\t\t\t</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default memo(HeaderMobile);\n","import * as actionTypes from './actionTypes';\n\nexport const toggleMenu = () => {\n\treturn {\n\t\ttype: actionTypes.TOGGLE_MENU,\n\t};\n};\n","import React, { memo, useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport logo from '../assets/images/logo.png';\nimport { ClientContext } from '../context/clientContext';\n\n// TO-DO: ALTERNATIVE FOOTER AT ~730 WINDOW WIDTH\n\nconst Footer = props => {\n\tconst clientContext = useContext(ClientContext);\n\n\treturn (\n\t\t<footer className='footer'>\n\t\t\t<div className='footer__body'>\n\t\t\t\t<div className='footer__links'>\n\t\t\t\t\t<div className='footer__links-partition'>\n\t\t\t\t\t\t<Link className='footer__logo' to='/'>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='header__logo-image'\n\t\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\t\talt='Evoloot Marketplace Logo'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='footer__links-partition'>\n\t\t\t\t\t\t<h3 className='heading-fourtiary'>\n\t\t\t\t\t\t\tSocial Media Thingies\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<div className='footer__icons'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--small-circle'\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\twindow.open(\n\t\t\t\t\t\t\t\t\t\t'https://www.facebook.com/kumonekojp'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-facebook`}></use>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--small-circle'\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\twindow.open(\n\t\t\t\t\t\t\t\t\t\t'https://twitter.com/kumonekojp'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-twitter`}></use>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--small-circle'\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\twindow.open(\n\t\t\t\t\t\t\t\t\t\t'https://www.instagram.com/kumonekojp/'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-instagram`}></use>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='footer__links-partition'>\n\t\t\t\t\t\t<h3 className='heading-fourtiary'>Who We Are</h3>\n\n\t\t\t\t\t\t<div className='footer__links-partition-content footer__links-partition-content--always-column'>\n\t\t\t\t\t\t\t{clientContext.pages &&\n\t\t\t\t\t\t\t\tclientContext.pages\n\t\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t\tpage => page.title !== 'Call-To-Action'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.map(page => (\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tkey={page.handle}\n\t\t\t\t\t\t\t\t\t\t\tto={`/pages/${page.handle}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName='footer__link'>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t{page.title}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='footer__links-partition'>\n\t\t\t\t\t\t<h3 className='heading-fourtiary'>The Details</h3>\n\n\t\t\t\t\t\t<div className='footer__links-partition-content footer__links-partition-content--always-column'>\n\t\t\t\t\t\t\t{clientContext.shopPolicies &&\n\t\t\t\t\t\t\t\tclientContext.shopPolicies.map(policy => (\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tkey={policy.handle}\n\t\t\t\t\t\t\t\t\t\tto={`/policy/${policy.handle}`}\n\t\t\t\t\t\t\t\t\t\tclassName='footer__link'>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t{policy.title}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<span className='navbar-line'></span>\n\t\t\t<div className='footer__copyright'>\n\t\t\t\t<p className='paragraph'>\n\t\t\t\t\tCreated with{' '}\n\t\t\t\t\t<span role='img' aria-label={'heart'}>\n\t\t\t\t\t\t&#128150;\n\t\t\t\t\t</span>{' '}\n\t\t\t\t\tby{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='paragraph footer__author'\n\t\t\t\t\t\thref='https://lypzistech.pro/'\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\tLypzis\n\t\t\t\t\t</a>\n\t\t\t\t\t.\n\t\t\t\t</p>\n\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t© Kumoneko - Evoloot Marketplace {new Date().getFullYear()}.\n\t\t\t\t\tAll rights reserved.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</footer>\n\t);\n};\n\nexport default memo(Footer);\n","import React, { Fragment } from 'react';\n\nconst BluredBackground = props => {\n\treturn (\n\t\t<Fragment>\n\t\t\t{props.menuState && (\n\t\t\t\t<label className='blured' onClick={props.hide}></label>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default BluredBackground;\n","import React, { Fragment, memo, useContext, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport LineProducts from './LineProducts';\nimport BluredBackground from './BluredBackground';\nimport { ClientContext } from '../context/clientContext';\nimport { removeAllProductsFromCheckout } from '../store/actions/checkout';\nimport { updateCheckoutShippingAddress, updateCheckoutEmail } from '../graphql';\nimport axiosInstace from '../axios';\nimport LoadingBar from './LoadingBar';\n\nconst addressFields = {\n\tfirstName: '',\n\tlastName: '',\n\tcompany: '',\n\taddress1: '',\n\taddress2: '',\n\tcity: '',\n\tcountry: '',\n\tprovince: '',\n\tzip: '',\n};\n\n// OBS: NOT component, needs to be moved to container\n\nconst CartPanel = props => {\n\tconst checkout = useSelector(state => state.checkout);\n\tconst user = useSelector(state => state.user);\n\tconst dispatch = useDispatch();\n\tconst clientContext = useContext(ClientContext);\n\tconst history = useHistory();\n\tconst [loading, setLoading] = useState(false);\n\n\t/**\n\t * Creates a checkout.\n\t * - Treat user products chosen.\n\t * - Creates a new shopify checkout.\n\t * - Adds user's email to checkout(if logged in).\n\t * - Adds user's main address to chekout(if there is one).\n\t * - Finally, adds products to checkout, opening a new tab\n\t * where the user can complete or edit his checkout.\n\t */\n\tconst createQuickCheckout = async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst lineItems = checkout.lineItems.map(product => {\n\t\t\t\treturn {\n\t\t\t\t\tvariantId: product.id,\n\t\t\t\t\tquantity: product.quantity,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst newCheckout = await clientContext.client.checkout.create();\n\n\t\t\tif (user.email)\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutEmail(user.email, newCheckout.id)\n\t\t\t\t);\n\n\t\t\tif (user.mainAddress) {\n\t\t\t\tconst addressWithoutId = { ...addressFields };\n\n\t\t\t\tfor (let key in user.mainAddress)\n\t\t\t\t\tif (key !== 'id')\n\t\t\t\t\t\taddressWithoutId[key] = user.mainAddress[key];\n\n\t\t\t\t//const checkoutWithAddress =\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutShippingAddress(\n\t\t\t\t\t\taddressWithoutId,\n\t\t\t\t\t\tnewCheckout.id\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// const errors =\n\t\t\t\t// \tcheckoutWithAddress.data.data\n\t\t\t\t// \t\t.checkoutShippingAddressUpdateV2.checkoutUserErrors;\n\n\t\t\t\t// if (errors.length > 0) throw new Error(errors[0].message);\n\t\t\t}\n\n\t\t\tconst checkoutWithProducts =\n\t\t\t\tawait clientContext.client.checkout.addLineItems(\n\t\t\t\t\tnewCheckout.id,\n\t\t\t\t\tlineItems\n\t\t\t\t);\n\n\t\t\twindow.open(checkoutWithProducts.webUrl);\n\t\t\tsetLoading(false);\n\n\t\t\tdispatch(removeAllProductsFromCheckout());\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\tconsole.log('Something terrible happened ', err);\n\t\t}\n\t};\n\n\tif (checkout.lineItems.length > 0)\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<input\n\t\t\t\t\tdefaultChecked={true}\n\t\t\t\t\ttype='checkbox'\n\t\t\t\t\tclassName='cart__checkbox'\n\t\t\t\t\tid='cart-toggle'\n\t\t\t\t/>\n\n\t\t\t\t<label\n\t\t\t\t\thtmlFor='cart-toggle'\n\t\t\t\t\tclassName='button button__black button__black--login cart__button'>\n\t\t\t\t\t<div className='button__arrow'>\n\t\t\t\t\t\t<p className='button__arrow-text'>&raquo;</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t<use xlinkHref={`${sprite}#icon-cart`}></use>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<div className='button__quantity'>\n\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t{checkout.lineItems\n\t\t\t\t\t\t\t\t.map(el => el.quantity)\n\t\t\t\t\t\t\t\t.reduce((a, b) => a + b)}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\n\t\t\t\t<BluredBackground for={'cart-toggle'} />\n\n\t\t\t\t<div className='cart'>\n\t\t\t\t\t<div className='cart__panel'>\n\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary no-margin'>\n\t\t\t\t\t\t\tShopping Cart:\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t{/* LIST OF LINE PRODUCTS */}\n\t\t\t\t\t\t<LineProducts small={true} />\n\n\t\t\t\t\t\t<span className='navbar-line small-margin-top'></span>\n\n\t\t\t\t\t\t<div className='cart__total'>\n\t\t\t\t\t\t\t<p className='paragraph'>Total: </p>\n\t\t\t\t\t\t\t<div className='product__price'>\n\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\tcheckout.totalPrice *\n\t\t\t\t\t\t\t\t\t\tclientContext.currencyRate.value\n\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\tdisabled={checkout.totalPrice === 0}\n\t\t\t\t\t\t\t\t\tonClick={createQuickCheckout}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tcheckout\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big small-margin-top'\n\t\t\t\t\t\t\t\t\tonClick={() => history.push('/cart')}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tview cart\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar marginTop='3rem' />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<p>&emsp;</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\n\treturn null;\n};\n\nexport default memo(CartPanel);\n","import React from 'react';\nimport { goToTop } from 'react-scrollable-anchor';\n\nconst BackToTopButton = props => {\n\treturn (\n\t\t<div className='back-to-top'>\n\t\t\t{/* {isSticky && ( */}\n\t\t\t<button\n\t\t\t\tclassName='button button__black button__black--login back-to-top__button'\n\t\t\t\tonClick={() => goToTop()}>\n\t\t\t\t^\n\t\t\t</button>\n\t\t\t{/* )} */}\n\t\t</div>\n\t);\n};\n\nexport default BackToTopButton;\n","import React, { Fragment, memo, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport BluredBackground from './BluredBackground';\nimport Navbar from './Navbar';\nimport { toggleMenu } from '../store/actions/menu';\nimport { NavLink } from 'react-router-dom';\n\n// OBS: NOT a component, needs to be moved to container\n\nconst MenuPanel = props => {\n\tconst [menuName, setMenuName] = useState('Menu');\n\tconst menuState = useSelector(state => state.menu);\n\tconst dispatch = useDispatch();\n\n\tconst hideMenu = () => {\n\t\tchangeMenuNameHeader();\n\t\tdispatch(toggleMenu());\n\t};\n\n\tconst changeMenuNameHeader = (\n\t\tname = 'Menu',\n\t\tlink = null,\n\t\tcustomFunction = null\n\t) => {\n\t\tif (link)\n\t\t\tsetMenuName(\n\t\t\t\t<div className='navbar-vertical__submenu-title-box'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='button button__black button__black--login back-to-top__button back-to-top__button--return'\n\t\t\t\t\t\tonClick={customFunction}>\n\t\t\t\t\t\t{'<'}\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* width to 100% */}\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tto={link}\n\t\t\t\t\t\tclassName='paragraph navbar-vertical__link navbar-vertical__link--menu menu__link menu__link--title'\n\t\t\t\t\t\tonClick={hideMenu}>\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>\n\t\t\t);\n\t\telse setMenuName(name);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{menuState.toggle && (\n\t\t\t\t<div>\n\t\t\t\t\t<BluredBackground\n\t\t\t\t\t\tfor={'menu-toggle'}\n\t\t\t\t\t\tclassName='blured--menu'\n\t\t\t\t\t\tmenuState={menuState.toggle}\n\t\t\t\t\t\thide={hideMenu}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className='menu'>\n\t\t\t\t\t\t<div className='cart__panel'>\n\t\t\t\t\t\t\t<h3 className='heading-tertiary menu__header no-margin'>\n\t\t\t\t\t\t\t\t{menuName}\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<span className='navbar-line small-margin-top'></span>\n\n\t\t\t\t\t\t\t<Navbar\n\t\t\t\t\t\t\t\tvertical={true}\n\t\t\t\t\t\t\t\thide={hideMenu}\n\t\t\t\t\t\t\t\tchangeMenuName={changeMenuNameHeader}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default memo(MenuPanel);\n","import React from 'react';\n\nimport Header from '../components/Header';\nimport HeaderMobile from '../components/HeaderMobile';\nimport Footer from '../components/Footer';\nimport CartPanel from '../components/CartPanel';\nimport BackToTopButton from '../components/BackToTopButton';\nimport MenuPanel from '../components/MenuPanel';\n\nconst Layout = props => (\n\t<div className='container__parent'>\n\t\t{window.innerWidth > 1140 ? <Header /> : <HeaderMobile />}\n\n\t\t<CartPanel />\n\n\t\t{/* access to store */}\n\t\t<MenuPanel />\n\n\t\t{/* back to top button */}\n\t\t{window.innerWidth > 1140 && <BackToTopButton />}\n\n\t\t<div className='container__background'>\n\t\t\t<main className='container'>{props.children}</main>\n\t\t</div>\n\t\t<Footer />\n\t</div>\n);\n\nexport default Layout;\n","import React, { memo, useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport {\n\taddProductToCheckout,\n\tupdateProductFromCheckout,\n} from '../store/actions/checkout';\nimport { ClientContext } from '../context/clientContext';\n\nconst Card = props => {\n\tconst [isMouseOverButton, setIsMouseOverButton] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst checkout = useSelector(state => state.checkout);\n\tconst history = useHistory();\n\tconst clientContext = useContext(ClientContext);\n\n\t/**\n\t * Adds product to cart.\n\t */\n\tconst addToCart = () => {\n\t\tconst variant = props.product.variants[0];\n\n\t\tconst title = props.product.title;\n\n\t\tconst quantity = 1;\n\n\t\tconst handle = props.product.handle;\n\n\t\tif (\n\t\t\tcheckout.lineItems.findIndex(\n\t\t\t\tproductVariant => productVariant.id === variant.id\n\t\t\t) !== -1\n\t\t)\n\t\t\tdispatch(updateProductFromCheckout(variant, quantity));\n\t\telse dispatch(addProductToCheckout(variant, title, quantity, handle));\n\t};\n\n\t/**\n\t * Redirects to the product details page.\n\t */\n\tconst goToProduct = () => {\n\t\thistory.push(`/product/${props.product.handle}`);\n\t};\n\n\t/**\n\t * On click, if product has variants, redirects to product details,\n\t * else, directly adds to cart.\n\t */\n\tconst onClickHandler = () => {\n\t\tif (props.product.variants.length === 1) return addToCart();\n\t\tgoToProduct();\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={[\n\t\t\t\tprops.noEffect ? 'card card--raw' : 'card',\n\t\t\t\tprops.productDetails\n\t\t\t\t\t? 'card card--raw card--raw-product-details'\n\t\t\t\t\t: '',\n\t\t\t].join(' ')}>\n\t\t\t<Link\n\t\t\t\tclassName='card__link'\n\t\t\t\tto={`/product/${props.product.handle}`}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tprops.productDetails\n\t\t\t\t\t\t\t? 'card__image-box card__image-box--product-details'\n\t\t\t\t\t\t\t: 'card__image-box'\n\t\t\t\t\t}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tprops.productDetails\n\t\t\t\t\t\t\t\t? 'card__image card__image--product-details'\n\t\t\t\t\t\t\t\t: 'card__image'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tprops.product.images[0] &&\n\t\t\t\t\t\t\tprops.product.images[0].src\n\t\t\t\t\t\t}\n\t\t\t\t\t\talt={\n\t\t\t\t\t\t\tprops.product.images[0] &&\n\t\t\t\t\t\t\tprops.product.images[0].altText\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<h3 className='heading-tertiary card__title'>\n\t\t\t\t\t{props.product.title}\n\t\t\t\t</h3>\n\t\t\t</Link>\n\t\t\t<span className='navbar-line'></span>\n\t\t\t{props.product.variants[0].available ? (\n\t\t\t\t<button\n\t\t\t\t\tclassName='button button__black button__black--card'\n\t\t\t\t\tonMouseOver={() => setIsMouseOverButton(true)}\n\t\t\t\t\tonMouseOut={() => setIsMouseOverButton(false)}\n\t\t\t\t\tonClick={onClickHandler}>\n\t\t\t\t\t{isMouseOverButton ? (\n\t\t\t\t\t\t<div className='button__icon-container'>\n\t\t\t\t\t\t\t<svg className='button__icon button__icon--card'>\n\t\t\t\t\t\t\t\t<use xlinkHref={`${sprite}#icon-cart`}></use>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t<p className='paragraph card__price'>\n\t\t\t\t\t\t\t\t{props.product.variants.length === 1\n\t\t\t\t\t\t\t\t\t? 'Add'\n\t\t\t\t\t\t\t\t\t: 'Options'}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p className='paragraph card__price'>\n\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\tprops.product.variants[0].price *\n\t\t\t\t\t\t\t\tclientContext.currencyRate.value\n\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<button\n\t\t\t\t\tclassName='button button__black button__black--card'\n\t\t\t\t\tonMouseOver={() => setIsMouseOverButton(true)}\n\t\t\t\t\tonMouseOut={() => setIsMouseOverButton(false)}\n\t\t\t\t\tdisabled\n\t\t\t\t\tonClick={onClickHandler}>\n\t\t\t\t\t<div className='button__icon-container'>\n\t\t\t\t\t\t<p className='paragraph  card__price card__price--white'>\n\t\t\t\t\t\t\tsold out\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default memo(Card);\n","import React, { Fragment, memo } from 'react';\nimport {\n\tCarouselProvider,\n\tSlider,\n\tSlide,\n\tButtonBack,\n\tButtonNext,\n} from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nimport Card from './Card';\n\nconst Carousel = props => (\n\t<Fragment>\n\t\t{props.products.length > 0 && (\n\t\t\t<CarouselProvider\n\t\t\t\tnaturalSlideWidth={props.naturalSlideWidth}\n\t\t\t\tnaturalSlideHeight={props.naturalSlideHeight}\n\t\t\t\ttotalSlides={props.products.length}\n\t\t\t\tvisibleSlides={props.visibleSlides}\n\t\t\t\tisPlaying={props.isPlaying}\n\t\t\t\torientation='horizontal'\n\t\t\t\tclassName={\n\t\t\t\t\tprops.productDetails\n\t\t\t\t\t\t? 'product__carousel-body product__carousel-body--product-detail '\n\t\t\t\t\t\t: 'product__carousel-body'\n\t\t\t\t}\n\t\t\t\tinfinite={true}\n\t\t\t\tstep={props.step} // needs to be dinamic\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`product__carousel-controllers ${\n\t\t\t\t\t\t!props.productDetails\n\t\t\t\t\t\t\t? 'product__carousel-controllers--home'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t}`}>\n\t\t\t\t\t<div className='product__carousel-controllers-header'>\n\t\t\t\t\t\t{props.header}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{window.innerWidth > 850 && (\n\t\t\t\t\t<ButtonBack className='button button__black button__black--arrow button__black--arrow-right'>\n\t\t\t\t\t\t&lt;\n\t\t\t\t\t</ButtonBack>\n\t\t\t\t)}\n\t\t\t\t<Slider className='product__carousel-slider'>\n\t\t\t\t\t{props.products.map((product, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Slide\n\t\t\t\t\t\t\t\tkey={product.id}\n\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\tinnerClassName='product__carousel-container'>\n\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\tproduct={product}\n\t\t\t\t\t\t\t\t\tnoEffect={true}\n\t\t\t\t\t\t\t\t\tproductDetails={props.productDetails}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Slide>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Slider>\n\t\t\t\t{window.innerWidth > 850 && (\n\t\t\t\t\t<ButtonNext className='button button__black button__black--arrow button__black--arrow-left'>\n\t\t\t\t\t\t&gt;\n\t\t\t\t\t</ButtonNext>\n\t\t\t\t)}\n\t\t\t</CarouselProvider>\n\t\t)}\n\t</Fragment>\n);\n\nexport default memo(Carousel);\n","import React, { memo, useState, useEffect, useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nimport Card from '../components/Card';\nimport Carousel from '../components/Carousel';\n\n// import { getCustomerOrders } from '../graphql';\n// import axiosInstance from '../axios';\nimport { ClientContext } from '../context/clientContext';\n\nconst Collection = props => {\n\tconst { products } = props.collection;\n\n\tconst clientContext = useContext(ClientContext);\n\tconst { loadMoreCollectionProducts } = clientContext;\n\tconst query = new URLSearchParams(useLocation().search);\n\tconst queryTag = query.get('tag');\n\n\tconst [displayedProducts, setDisplayedProducts] = useState(\n\t\tprops.featured\n\t\t\t? products.slice(0, 4).map(product => {\n\t\t\t\t\treturn <Card key={product.id} product={product} />;\n\t\t\t  })\n\t\t\t: products.map(product => {\n\t\t\t\t\treturn <Card key={product.id} product={product} />;\n\t\t\t  })\n\t);\n\n\tconst [cursor, setCursor] = useState(products[0].cursor);\n\tconst [currArrLength, setCurrArrLength] = useState(products.length);\n\n\t/**\n\t * Sort cards filter.\n\t * @param {Event} event\n\t */\n\tconst sortBy = event => {\n\t\tevent.preventDefault();\n\n\t\tlet sorted;\n\n\t\tswitch (event.target.value) {\n\t\t\tcase 'featured':\n\t\t\t\tsorted = products.sort(\n\t\t\t\t\t(a, b) => new Date(a.publishedAt) < new Date(b.publishedAt)\n\t\t\t\t);\n\t\t\t\trenderProducts(sorted);\n\t\t\t\tbreak;\n\t\t\tcase 'priceLowToHigh':\n\t\t\t\tsorted = products.sort(\n\t\t\t\t\t(a, b) => a.variants[0].price > b.variants[0].price\n\t\t\t\t);\n\t\t\t\trenderProducts(sorted);\n\t\t\t\tbreak;\n\t\t\tcase 'priceHighToLow':\n\t\t\t\tsorted = products.sort(\n\t\t\t\t\t(a, b) => a.variants[0].price < b.variants[0].price\n\t\t\t\t);\n\t\t\t\trenderProducts(sorted);\n\t\t\t\tbreak;\n\t\t\tcase 'alphabeticallyAToZ':\n\t\t\t\tsorted = products.sort((a, b) => a.title > b.title);\n\t\t\t\trenderProducts(sorted);\n\t\t\t\tbreak;\n\t\t\tcase 'alphabeticallyZToA':\n\t\t\t\tsorted = products.sort((a, b) => a.title < b.title);\n\t\t\t\trenderProducts(sorted);\n\t\t\t\tbreak;\n\t\t\tcase 'dateOldToNew':\n\t\t\t\tsorted = products.sort(\n\t\t\t\t\t(a, b) => new Date(a.publishedAt) > new Date(b.publishedAt)\n\t\t\t\t);\n\t\t\t\trenderProducts(sorted);\n\t\t\t\tbreak;\n\t\t\tcase 'dateNewToOld':\n\t\t\t\tsorted = products.sort(\n\t\t\t\t\t(a, b) => new Date(a.publishedAt) < new Date(b.publishedAt)\n\t\t\t\t);\n\t\t\t\trenderProducts(sorted);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsorted = products.sort(\n\t\t\t\t\t(a, b) => new Date(a.publishedAt) < new Date(b.publishedAt)\n\t\t\t\t);\n\t\t\t\trenderProducts(sorted);\n\t\t}\n\t};\n\n\t/**\n\t * Renders 'Card' blocks.\n\t * @param {Array} arr\n\t */\n\tconst renderProducts = arr => {\n\t\tsetDisplayedProducts(\n\t\t\tarr.map(product => {\n\t\t\t\treturn <Card key={product.id} product={product} />;\n\t\t\t})\n\t\t);\n\t};\n\n\t/**\n\t * Loads more 20 products to the page.\n\t */\n\tconst loadMoreProducts = async () => {\n\t\tconst newCursor = await loadMoreCollectionProducts(\n\t\t\tprops.collection.handle,\n\t\t\t`first: 20, after: \"${cursor}\"`\n\t\t);\n\n\t\tif (newCursor) {\n\t\t\tsetCursor(newCursor.cursor);\n\t\t\tsetCurrArrLength(newCursor.length);\n\t\t}\n\t};\n\n\t/**\n\t * Changes carousel width based on window width.\n\t * @returns number\n\t */\n\tconst changeCarouselWidth = () => {\n\t\treturn window.innerWidth <= 850 ? 110 : 100;\n\t};\n\n\t/**\n\t * Changes carousel height based on window height.\n\t * @returns number\n\t */\n\tconst changeCarouselHeight = () => {\n\t\treturn window.innerWidth <= 850 ? 130 : 120;\n\t};\n\n\t/**\n\t * Changes the number of slides based on window width.\n\t * @returns number\n\t */\n\tconst changeNumberOfSlides = () => {\n\t\tif (window.innerWidth <= 600) return 2;\n\t\telse if (window.innerWidth <= 850) return 3;\n\t\telse return 4;\n\t};\n\n\tconst renderProductsSorted = arr => {\n\t\tconst productsFormated = arr\n\t\t\t.sort((a, b) => new Date(a.publishedAt) < new Date(b.publishedAt))\n\t\t\t.map(product => {\n\t\t\t\treturn <Card key={product.id} product={product} />;\n\t\t\t});\n\n\t\tsetDisplayedProducts(productsFormated);\n\t};\n\n\tuseEffect(() => {\n\t\tconst productsFormated = products\n\t\t\t.sort((a, b) => new Date(a.publishedAt) < new Date(b.publishedAt))\n\t\t\t.map(product => {\n\t\t\t\treturn <Card key={product.id} product={product} />;\n\t\t\t});\n\n\t\tsetDisplayedProducts(productsFormated);\n\t}, [products, props.featured]);\n\n\tuseEffect(() => {\n\t\tconst filteredProducts = [];\n\n\t\tif (queryTag && typeof queryTag !== 'undefined') {\n\t\t\tfor (let i = 0; i < products.length; ++i) {\n\t\t\t\tconst doesItBelong = products[i].tags.findIndex(\n\t\t\t\t\ttag => tag === queryTag\n\t\t\t\t);\n\n\t\t\t\tif (doesItBelong !== -1) filteredProducts.push(products[i]);\n\t\t\t}\n\n\t\t\trenderProductsSorted(filteredProducts);\n\t\t} else {\n\t\t\trenderProductsSorted(products);\n\t\t}\n\t}, [queryTag, products]);\n\n\treturn (\n\t\t<div className='home__featured-section' key={props.collection.id}>\n\t\t\t<h2 className='heading-secondary heading-secondary--dark'>\n\t\t\t\t{props.collection.title}\n\t\t\t</h2>\n\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t{props.collection.description}\n\t\t\t</h3>\n\t\t\t{!props.featured && (\n\t\t\t\t<div className='card card--collection'>\n\t\t\t\t\t<div className='input__container input__container--collection'>\n\t\t\t\t\t\t<p className='paragraph'>sort by: </p>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t// input--black\n\t\t\t\t\t\t\tclassName='input input__select input__select--collection'\n\t\t\t\t\t\t\tonChange={sortBy}>\n\t\t\t\t\t\t\t<option value='featured'>Featured</option>\n\t\t\t\t\t\t\t<option value='priceLowToHigh'>\n\t\t\t\t\t\t\t\tPrice, low to high\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t<option value='priceHighToLow'>\n\t\t\t\t\t\t\t\tPrice, high to low\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t<option value='alphabeticallyAToZ'>\n\t\t\t\t\t\t\t\tAlphabetically, A-Z\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t<option value='alphabeticallyZToA'>\n\t\t\t\t\t\t\t\tAlphabetically, Z-A\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t<option value='dateOldToNew'>\n\t\t\t\t\t\t\t\tDate, old to new\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t<option value='dateNewToOld'>\n\t\t\t\t\t\t\t\tDate, new to old\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className='home__featured'>\n\t\t\t\t{props.featured ? (\n\t\t\t\t\t<div className='home__container'>\n\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\tproducts={products}\n\t\t\t\t\t\t\tnaturalSlideWidth={changeCarouselWidth()}\n\t\t\t\t\t\t\tnaturalSlideHeight={changeCarouselHeight()}\n\t\t\t\t\t\t\tvisibleSlides={changeNumberOfSlides()}\n\t\t\t\t\t\t\tisPlaying={false}\n\t\t\t\t\t\t\tstep={4}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\tdisplayedProducts\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{props.featured ? (\n\t\t\t\t<Link\n\t\t\t\t\tto={`/collection/${props.collection.handle}`}\n\t\t\t\t\tclassName='button button__black button__black--show-more'>\n\t\t\t\t\t<p className='paragraph'>show more</p>\n\t\t\t\t</Link>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t{currArrLength === 20 && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => loadMoreProducts()}\n\t\t\t\t\t\t\tclassName='button button__black button__black--show-more'>\n\t\t\t\t\t\t\t<p className='paragraph'>load more</p>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default memo(Collection);\n","import React, { memo } from 'react';\nimport { CarouselProvider, Slider, Slide } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nimport image01 from '../assets/images/Rotating_Product_Banner_Finals_1.png';\nimport image02 from '../assets/images/Rotating_Product_Banner_Finals_2.jpg';\nimport image03 from '../assets/images/Rotating_Product_Banner_Finals_3.jpg';\nimport image04 from '../assets/images/Rotating_Product_Banner_Finals_4.jpg';\n\nconst images = [image01, image02, image03, image04];\n\nconst BannerCarousel = props => {\n\tconst changeHeight = () => {\n\t\tif (window.innerWidth <= 600) return 40;\n\t\telse if (window.innerWidth <= 850) return 50;\n\t\telse return 38;\n\t};\n\n\treturn (\n\t\t<CarouselProvider\n\t\t\tnaturalSlideWidth={100}\n\t\t\tnaturalSlideHeight={changeHeight()}\n\t\t\ttotalSlides={images.length}\n\t\t\tvisibleSlides={1}\n\t\t\tisPlaying={true}\n\t\t\torientation='horizontal'\n\t\t\tclassName='banner'\n\t\t\tinterval={6000}\n\t\t\tinfinite={true}>\n\t\t\t<Slider>\n\t\t\t\t{images.map(image => (\n\t\t\t\t\t<Slide key={image} innerClassName='banner__slide'>\n\t\t\t\t\t\t<div className='banner__container'>\n\t\t\t\t\t\t\t<div className='banner__card'>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName='banner__image'\n\t\t\t\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\t\t\t\talt='promo banner'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Slide>\n\t\t\t\t))}\n\t\t\t</Slider>\n\t\t</CarouselProvider>\n\t);\n};\n\nexport default memo(BannerCarousel);\n","import React, {\n\tmemo,\n\tuseContext,\n\tuseEffect,\n\tuseCallback,\n\tuseState,\n} from 'react';\n\nimport Layout from '../hoc/Layout';\nimport { ClientContext } from '../context/clientContext';\nimport Collection from '../components/Collection';\nimport LoadingBar from '../components/LoadingBar';\nimport BannerCarousel from '../components/BannerCarousel';\n\nconst Home = props => {\n\tconst [homeCollections, setHomeCollections] = useState();\n\tconst [loading, setLoading] = useState(true);\n\tconst clientContext = useContext(ClientContext);\n\tconst { collections } = clientContext;\n\n\t/**\n\t * Get all collection products for display.\n\t */\n\tconst getFeaturedProducts = useCallback(() => {\n\t\tif (collections) {\n\t\t\tsetHomeCollections([...collections]);\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [collections]);\n\n\tuseEffect(() => {\n\t\tgetFeaturedProducts();\n\t}, [getFeaturedProducts]);\n\n\t/**\n\t * Renders a 'Collection' block.\n\t */\n\tconst renderHomeCollections = useCallback(() => {\n\t\treturn homeCollections.map(collection => (\n\t\t\t<Collection\n\t\t\t\tkey={collection.id}\n\t\t\t\tcollection={collection}\n\t\t\t\tfeatured={true}\n\t\t\t/>\n\t\t));\n\t}, [homeCollections]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t{homeCollections ? (\n\t\t\t\t<section className='home'>\n\t\t\t\t\t{<BannerCarousel />}\n\t\t\t\t\t{renderHomeCollections()}\n\t\t\t\t</section>\n\t\t\t) : (\n\t\t\t\t<LoadingBar loading={loading} marginTop={'18rem'} />\n\t\t\t)}\n\t\t</Layout>\n\t);\n};\n\nexport default memo(Home);\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Layout from '../hoc/Layout';\nimport { ClientContext } from '../context/clientContext';\nimport Collection from '../components/Collection';\n\nconst CollectionProducts = props => {\n\tconst [collection, setCollection] = useState();\n\tconst { handle } = useParams();\n\tconst clientContext = useContext(ClientContext);\n\tconst { collections } = clientContext;\n\n\t/**\n\t * Get a collection based on the\n\t * current page 'params' which is going\n\t * to be one of the collections 'handles'.\n\t */\n\tconst getCollection = useCallback(() => {\n\t\tif (collections) {\n\t\t\tconst incomingCollection = collections.filter(\n\t\t\t\tcollection => collection.handle === handle\n\t\t\t);\n\n\t\t\tsetCollection(incomingCollection[0]);\n\t\t}\n\t}, [collections, handle]);\n\n\tuseEffect(() => {\n\t\tgetCollection();\n\t}, [getCollection]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t{collection && (\n\t\t\t\t<section className='home'>\n\t\t\t\t\t<Collection collection={collection} />\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</Layout>\n\t);\n};\n\nexport default CollectionProducts;\n","import React, { memo } from 'react';\n\nconst Thumbnail = props => {\n\tconst setImage = () => {\n\t\tif (props.isVariant)\n\t\t\tprops.setImage(\n\t\t\t\tprops.product.variants[props.index].image.id,\n\t\t\t\tprops.product.variants[props.index].image.src,\n\t\t\t\tprops.index\n\t\t\t);\n\t\telse\n\t\t\tprops.setImage(\n\t\t\t\tprops.product.images[props.index].id,\n\t\t\t\tprops.product.images[props.index].src\n\t\t\t);\n\t};\n\n\treturn (\n\t\t<li key={props.image.src} className='product__image-variant-list-item'>\n\t\t\t<input\n\t\t\t\treadOnly\n\t\t\t\tclassName='input__radio-image'\n\t\t\t\tchecked={props.currentSelection === props.image.id}\n\t\t\t\tvalue={props.image.id}\n\t\t\t\tid={props.image.id}\n\t\t\t\tname='image'\n\t\t\t\ttype='radio'\n\t\t\t/>\n\t\t\t<label\n\t\t\t\tclassName={\n\t\t\t\t\tprops.currentSelection === props.image.id\n\t\t\t\t\t\t? 'button button__white  button__white--image-active'\n\t\t\t\t\t\t: 'button button__white button__white--image'\n\t\t\t\t}\n\t\t\t\thtmlFor={props.image.id}\n\t\t\t\tonClick={setImage}\n\t\t\t\tonMouseOver={setImage}>\n\t\t\t\t<img\n\t\t\t\t\tclassName='product__image product__image--variant'\n\t\t\t\t\tsrc={props.image.src}\n\t\t\t\t\talt={\n\t\t\t\t\t\tprops.image.altText\n\t\t\t\t\t\t\t? props.image.altText\n\t\t\t\t\t\t\t: props.product.title\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t</li>\n\t);\n};\n\nexport default memo(Thumbnail);\n","import React, { memo } from 'react';\n\nconst Description = ({ description, isThereADescription }) => {\n\tif (!isThereADescription) return null;\n\n\treturn (\n\t\t<div className='card product__card product__card--description'>\n\t\t\t<div className='card__details'>\n\t\t\t\t<h3 className='heading-tertiary small-margin'>Description:</h3>\n\n\t\t\t\t<div className='card__description-box'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='card__description-box-description'\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: description,\n\t\t\t\t\t\t}}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default memo(Description);\n","import React, { useContext, useEffect, useCallback, useReducer } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ReactImageMagnify from 'react-image-magnify';\nimport { goToTop } from 'react-scrollable-anchor';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ClientContext } from '../context/clientContext';\nimport sprite from '../assets/icons/sprite.svg';\nimport Layout from '../hoc/Layout';\nimport Thumbnail from '../components/Thumbnail';\nimport Description from '../components/Description';\nimport Carousel from '../components/Carousel';\nimport {\n\taddProductToCheckout,\n\tupdateProductFromCheckout,\n} from '../store/actions/checkout';\nimport QuantityInput from '../components/QuantityInput';\n\nconst productReducer = (currentProductState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INITIALIZE':\n\t\t\treturn {\n\t\t\t\tproduct: action.product,\n\t\t\t\tquantity: action.quantity,\n\t\t\t\timageSrc: action.imageSrc,\n\t\t\t\timageId: action.imageId,\n\t\t\t\tvariant: action.variant,\n\t\t\t\trelatedProducts: action.relatedProducts,\n\t\t\t\tviewed: action.viewed,\n\t\t\t};\n\t\tcase 'SET_PRODUCT':\n\t\t\treturn { ...currentProductState, product: action.product };\n\t\tcase 'SET_QUANTITY':\n\t\t\treturn { ...currentProductState, quantity: action.quantity };\n\t\tcase 'SET_SELECTION':\n\t\t\treturn {\n\t\t\t\t...currentProductState,\n\t\t\t\timageSrc: action.imageSrc,\n\t\t\t\timageId: action.imageId,\n\t\t\t};\n\t\tcase 'SET_SELECTION_WITH_VARIANT':\n\t\t\treturn {\n\t\t\t\t...currentProductState,\n\t\t\t\timageSrc: action.imageSrc,\n\t\t\t\timageId: action.imageId,\n\t\t\t\tvariant: action.variant,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentProductState;\n\t}\n};\n\nconst ProductDetails = props => {\n\tconst { handle } = useParams();\n\tconst history = useHistory();\n\tconst clientContext = useContext(ClientContext);\n\tconst dispatch = useDispatch();\n\tconst checkout = useSelector(state => state.checkout);\n\n\tconst [productChosen, dispatchProduct] = useReducer(productReducer);\n\n\t/**\n\t * Retrieve related products based on the type of\n\t * the current displayed product.\n\t * - Takes care to not retrieve the same product.\n\t * @returns array of products.\n\t */\n\tconst retrieveRelatedProducts = useCallback(\n\t\tcurrentProduct => {\n\t\t\tlet products = [];\n\n\t\t\tclientContext.collections.forEach(collection => {\n\t\t\t\tproducts = [...products, ...collection.products].filter(\n\t\t\t\t\tproduct =>\n\t\t\t\t\t\tproduct.productType === currentProduct.productType &&\n\t\t\t\t\t\tproduct.handle !== handle\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn products;\n\t\t},\n\t\t[handle, clientContext.collections]\n\t);\n\n\t/**\n\t * Saves a viewed product to the local storage\n\t * if it isn't there already.\n\t * - Default of saved products is 10.\n\t * @param {Object} product\n\t * @returns null\n\t */\n\tconst saveViewed = product => {\n\t\tconst viewed = localStorage.getItem('viewed');\n\n\t\tif (!viewed) {\n\t\t\tlocalStorage.setItem('viewed', JSON.stringify([product]));\n\t\t\treturn;\n\t\t}\n\n\t\tconst convertedViewed = JSON.parse(viewed);\n\n\t\tconst newViewed = convertedViewed.slice(0, 10);\n\n\t\tconst alreadyAdded = newViewed.find(\n\t\t\taddedProduct => addedProduct.handle === product.handle\n\t\t);\n\n\t\tif (alreadyAdded === undefined) newViewed.unshift(product);\n\n\t\tlocalStorage.setItem('viewed', JSON.stringify(newViewed));\n\t};\n\n\t/**\n\t * Retrieves viewed products from local storage.\n\t * - Does not retrieve the current one being displayed.\n\t * @param {Object} currentProduct\n\t * @returns\n\t */\n\tconst retrieveViewed = currentProduct => {\n\t\tconst viewed = localStorage.getItem('viewed');\n\n\t\tconst viewedConverted = JSON.parse(viewed);\n\n\t\treturn viewedConverted.filter(\n\t\t\tproduct => product.handle !== currentProduct.handle\n\t\t);\n\t};\n\n\t/**\n\t * Get a product by its handle, which will be the same as the page param.\n\t */\n\tconst getProduct = useCallback(async () => {\n\t\ttry {\n\t\t\tconst product = await clientContext.client.product.fetchByHandle(\n\t\t\t\thandle\n\t\t\t);\n\n\t\t\tsaveViewed(product);\n\t\t\tconst viewed = retrieveViewed(product);\n\n\t\t\tlet imageSrc, imageId;\n\n\t\t\tif (product.variants.length > 1) {\n\t\t\t\timageSrc = product.variants[0].image.src;\n\t\t\t\timageId = product.variants[0].image.id;\n\t\t\t} else {\n\t\t\t\timageSrc = product.images[0].src;\n\t\t\t\timageId = product.images[0].id;\n\t\t\t}\n\n\t\t\tconst relatedProducts = retrieveRelatedProducts(product);\n\n\t\t\tdispatchProduct({\n\t\t\t\ttype: 'INITIALIZE',\n\t\t\t\tproduct,\n\t\t\t\tquantity: 1,\n\t\t\t\timageSrc,\n\t\t\t\timageId,\n\t\t\t\tvariant: product.variants[0],\n\t\t\t\trelatedProducts,\n\t\t\t\tviewed,\n\t\t\t});\n\n\t\t\tgoToTop();\n\t\t} catch (err) {\n\t\t\t// console.log(err);\n\t\t\thistory.replace('/*');\n\t\t}\n\t}, [handle, history, clientContext.client, retrieveRelatedProducts]);\n\n\t/**\n\t * Sets a new main image from the product to display.\n\t * @param {String} imageId\n\t * @param {String} imageSrc\n\t * @param {Number} index\n\t */\n\tconst setImageSelected = (imageId, imageSrc, index = 0) => {\n\t\tif (productChosen.product.variants.length > 1)\n\t\t\tdispatchProduct({\n\t\t\t\ttype: 'SET_SELECTION_WITH_VARIANT',\n\t\t\t\timageSrc,\n\t\t\t\timageId,\n\t\t\t\tvariant: productChosen.product.variants[index],\n\t\t\t});\n\t\telse\n\t\t\tdispatchProduct({\n\t\t\t\ttype: 'SET_SELECTION',\n\t\t\t\timageSrc,\n\t\t\t\timageId,\n\t\t\t});\n\t};\n\n\t/**\n\t * Sets a variant selection.\n\t * @param {Event} event\n\t */\n\tconst setVariantSelected = event => {\n\t\tconst variant = JSON.parse(event.target.value);\n\n\t\tdispatchProduct({\n\t\t\ttype: 'SET_SELECTION_WITH_VARIANT',\n\t\t\timageSrc: variant.image.src,\n\t\t\timageId: variant.image.id,\n\t\t\tvariant,\n\t\t});\n\t};\n\n\t/**\n\t * Render products images as side thumbnails.\n\t * - If product has variants, their image will be set.\n\t * - If product has no variants, its images will be set.\n\t * @returns Thumbnail block.\n\t */\n\tconst renderThumbnails = () => {\n\t\tif (productChosen.product.variants.length > 1)\n\t\t\treturn productChosen.product.variants.map((variant, index) => (\n\t\t\t\t<Thumbnail\n\t\t\t\t\tkey={index}\n\t\t\t\t\tisVariant={true}\n\t\t\t\t\tproduct={productChosen.product}\n\t\t\t\t\timage={variant.image}\n\t\t\t\t\tindex={index}\n\t\t\t\t\tcurrentSelection={productChosen.imageId}\n\t\t\t\t\tsetImage={setImageSelected}\n\t\t\t\t/>\n\t\t\t));\n\n\t\treturn productChosen.product.images.map((image, index) => (\n\t\t\t<Thumbnail\n\t\t\t\tkey={index}\n\t\t\t\tisVariant={false}\n\t\t\t\tproduct={productChosen.product}\n\t\t\t\timage={image}\n\t\t\t\tindex={index}\n\t\t\t\tcurrentSelection={productChosen.imageId}\n\t\t\t\tsetImage={setImageSelected}\n\t\t\t/>\n\t\t));\n\t};\n\n\t/**\n\t * Render product variants names as options.\n\t * @returns option block.\n\t */\n\tconst renderVariants = () => {\n\t\treturn productChosen.product.variants.map(variant => (\n\t\t\t<option key={variant.id} value={JSON.stringify(variant)}>\n\t\t\t\t{variant.title}\n\t\t\t</option>\n\t\t));\n\t};\n\n\t/**\n\t * Updates the quantity value.\n\t * @param {Number} quantity\n\t */\n\tconst updateQuantity = quantity => {\n\t\tdispatchProduct({\n\t\t\ttype: 'SET_QUANTITY',\n\t\t\tquantity,\n\t\t});\n\t};\n\n\t/**\n\t * Adds the current displayed product to cart.\n\t */\n\tconst addToCart = () => {\n\t\tconst variant = productChosen.variant;\n\n\t\tconst title =\n\t\t\tproductChosen.product.variants.length > 1\n\t\t\t\t? `${productChosen.product.title} - ${productChosen.variant.title}`\n\t\t\t\t: productChosen.product.title;\n\n\t\tconst quantity = productChosen.quantity;\n\n\t\tconst handle = productChosen.product.handle;\n\n\t\tif (\n\t\t\tcheckout.lineItems.findIndex(\n\t\t\t\tproductVariant => productVariant.id === variant.id\n\t\t\t) !== -1\n\t\t)\n\t\t\tdispatch(updateProductFromCheckout(variant, quantity));\n\t\telse dispatch(addProductToCheckout(variant, title, quantity, handle));\n\t};\n\n\tuseEffect(() => {\n\t\tif (clientContext.collections) getProduct();\n\t}, [clientContext.collections, getProduct]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t{productChosen && (\n\t\t\t\t<section className='product'>\n\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark product__title'>\n\t\t\t\t\t\t{productChosen.product.variants.length > 1\n\t\t\t\t\t\t\t? `${productChosen.product.title} - ${productChosen.variant.title}`\n\t\t\t\t\t\t\t: productChosen.product.title}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div className='product__details'>\n\t\t\t\t\t\t<ul className='product__image-variant-list'>\n\t\t\t\t\t\t\t{renderThumbnails()}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div className='product__image'>\n\t\t\t\t\t\t\t<figure className='product__image-container'>\n\t\t\t\t\t\t\t\t<ReactImageMagnify\n\t\t\t\t\t\t\t\t\timageClassName='product__image '\n\t\t\t\t\t\t\t\t\tenlargedImageContainerClassName='product__image '\n\t\t\t\t\t\t\t\t\tenlargedImagePosition='over'\n\t\t\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\t\t\tsmallImage: {\n\t\t\t\t\t\t\t\t\t\t\talt: productChosen.product.images[0]\n\t\t\t\t\t\t\t\t\t\t\t\t.altText\n\t\t\t\t\t\t\t\t\t\t\t\t? productChosen.product\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.images[0].altText\n\t\t\t\t\t\t\t\t\t\t\t\t: productChosen.product.title,\n\t\t\t\t\t\t\t\t\t\t\tisFluidWidth: true,\n\t\t\t\t\t\t\t\t\t\t\tsrc: productChosen.imageSrc,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tlargeImage: {\n\t\t\t\t\t\t\t\t\t\t\tsrc: productChosen.imageSrc,\n\t\t\t\t\t\t\t\t\t\t\twidth: 900, // HERE ???\n\t\t\t\t\t\t\t\t\t\t\theight: 900,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</figure>\n\n\t\t\t\t\t\t\t{/* TO-DO the product card should probably be here */}\n\n\t\t\t\t\t\t\t<Description\n\t\t\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t\t\tproductChosen.product.descriptionHtml\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tisThereADescription={\n\t\t\t\t\t\t\t\t\tproductChosen.product.description.trim() !==\n\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<span className='navbar-line big-margin-top'></span>\n\n\t\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark  medium-margin-top-no-bottom'>\n\t\t\t\t\t\t\t\tYou may also like:\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\t\tproducts={productChosen.relatedProducts}\n\t\t\t\t\t\t\t\tnaturalSlideWidth={100}\n\t\t\t\t\t\t\t\tnaturalSlideHeight={140}\n\t\t\t\t\t\t\t\tvisibleSlides={3}\n\t\t\t\t\t\t\t\tstep={3}\n\t\t\t\t\t\t\t\tisPlaying={false}\n\t\t\t\t\t\t\t\tproductDetails={true}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<span className='navbar-line big-margin-top'></span>\n\n\t\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark  medium-margin-top-no-bottom'>\n\t\t\t\t\t\t\t\tRecently Viewed:\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\t\tproducts={productChosen.viewed}\n\t\t\t\t\t\t\t\tnaturalSlideWidth={100}\n\t\t\t\t\t\t\t\tnaturalSlideHeight={140}\n\t\t\t\t\t\t\t\tvisibleSlides={3}\n\t\t\t\t\t\t\t\tstep={3}\n\t\t\t\t\t\t\t\tisPlaying={false}\n\t\t\t\t\t\t\t\tproductDetails={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* TO-DO needs to be a standalone component */}\n\t\t\t\t\t\t<div className='card product__card'>\n\t\t\t\t\t\t\t<div className='card__details'>\n\t\t\t\t\t\t\t\t<div className='input__container'>\n\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black paragraph--capitalized'>\n\t\t\t\t\t\t\t\t\t\tAvailability:{' '}\n\t\t\t\t\t\t\t\t\t\t{productChosen.variant.available\n\t\t\t\t\t\t\t\t\t\t\t? 'in stock'\n\t\t\t\t\t\t\t\t\t\t\t: 'out of stock'}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{productChosen.product.variants.length > 1 && (\n\t\t\t\t\t\t\t\t\t<div className='input__container'>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t\t\tVariant:{' '}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tclassName='input input__select'\n\t\t\t\t\t\t\t\t\t\t\tonChange={setVariantSelected}>\n\t\t\t\t\t\t\t\t\t\t\t{renderVariants()}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<QuantityInput\n\t\t\t\t\t\t\t\t\tproductQuantity={productChosen.quantity}\n\t\t\t\t\t\t\t\t\tsetQuantity={updateQuantity}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<span className='navbar-line'></span>\n\n\t\t\t\t\t\t\t\t<div className='product__price'>\n\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\tproductChosen.variant.price *\n\t\t\t\t\t\t\t\t\t\t\tproductChosen.quantity *\n\t\t\t\t\t\t\t\t\t\t\tclientContext.currencyRate.value\n\t\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\tonClick={addToCart}\n\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\tproductChosen.quantity === 0 ||\n\t\t\t\t\t\t\t\t\t\t!productChosen.variant.available\n\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t{productChosen.quantity === 0 ||\n\t\t\t\t\t\t\t\t\t!productChosen.variant.available ? (\n\t\t\t\t\t\t\t\t\t\t<div className='button__icon-container button__icon-container--big'>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big'>\n\t\t\t\t\t\t\t\t\t\t\t\tSold Out\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className='button__icon-container button__icon-container--big'>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon button__icon--card-big '>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-cart`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big'>\n\t\t\t\t\t\t\t\t\t\t\t\tAdd To Cart\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</Layout>\n\t);\n};\n\nexport default ProductDetails;\n","import React, { useContext, useEffect, useCallback, useReducer } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ReactImageMagnify from 'react-image-magnify';\nimport { goToTop } from 'react-scrollable-anchor';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ClientContext } from '../context/clientContext';\nimport sprite from '../assets/icons/sprite.svg';\nimport Layout from '../hoc/Layout';\nimport Thumbnail from '../components/Thumbnail';\nimport Description from '../components/Description';\nimport Carousel from '../components/Carousel';\nimport {\n\taddProductToCheckout,\n\tupdateProductFromCheckout,\n} from '../store/actions/checkout';\nimport QuantityInput from '../components/QuantityInput';\n\nconst productReducer = (currentProductState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INITIALIZE':\n\t\t\treturn {\n\t\t\t\tproduct: action.product,\n\t\t\t\tquantity: action.quantity,\n\t\t\t\timageSrc: action.imageSrc,\n\t\t\t\timageId: action.imageId,\n\t\t\t\tvariant: action.variant,\n\t\t\t\trelatedProducts: action.relatedProducts,\n\t\t\t\tviewed: action.viewed,\n\t\t\t};\n\t\tcase 'SET_PRODUCT':\n\t\t\treturn { ...currentProductState, product: action.product };\n\t\tcase 'SET_QUANTITY':\n\t\t\treturn { ...currentProductState, quantity: action.quantity };\n\t\tcase 'SET_SELECTION':\n\t\t\treturn {\n\t\t\t\t...currentProductState,\n\t\t\t\timageSrc: action.imageSrc,\n\t\t\t\timageId: action.imageId,\n\t\t\t};\n\t\tcase 'SET_SELECTION_WITH_VARIANT':\n\t\t\treturn {\n\t\t\t\t...currentProductState,\n\t\t\t\timageSrc: action.imageSrc,\n\t\t\t\timageId: action.imageId,\n\t\t\t\tvariant: action.variant,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentProductState;\n\t}\n};\n\nconst ProductDetailsMobile = props => {\n\tconst { handle } = useParams();\n\tconst history = useHistory();\n\tconst clientContext = useContext(ClientContext);\n\tconst dispatch = useDispatch();\n\tconst checkout = useSelector(state => state.checkout);\n\n\tconst [productChosen, dispatchProduct] = useReducer(productReducer);\n\n\t/**\n\t * Retrieve related products based on the type of\n\t * the current displayed product.\n\t * - Takes care to not retrieve the same product.\n\t * @returns array of products.\n\t */\n\tconst retrieveRelatedProducts = useCallback(\n\t\tcurrentProduct => {\n\t\t\tlet products = [];\n\n\t\t\tclientContext.collections.forEach(collection => {\n\t\t\t\tproducts = [...products, ...collection.products].filter(\n\t\t\t\t\tproduct =>\n\t\t\t\t\t\tproduct.productType === currentProduct.productType &&\n\t\t\t\t\t\tproduct.handle !== handle\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn products;\n\t\t},\n\t\t[handle, clientContext]\n\t);\n\n\t/**\n\t * Saves a viewed product to the local storage\n\t * if it isn't there already.\n\t * - Default of saved products is 10.\n\t * @param {Object} product\n\t * @returns null\n\t */\n\tconst saveViewed = product => {\n\t\tconst viewed = localStorage.getItem('viewed');\n\n\t\tif (!viewed) {\n\t\t\tlocalStorage.setItem('viewed', JSON.stringify([product]));\n\t\t\treturn;\n\t\t}\n\n\t\tconst convertedViewed = JSON.parse(viewed);\n\n\t\tconst newViewed = convertedViewed.slice(0, 10);\n\n\t\tconst alreadyAdded = newViewed.find(\n\t\t\taddedProduct => addedProduct.handle === product.handle\n\t\t);\n\n\t\tif (alreadyAdded === undefined) newViewed.unshift(product);\n\n\t\tlocalStorage.setItem('viewed', JSON.stringify(newViewed));\n\t};\n\n\t/**\n\t * Retrieves viewed products from local storage.\n\t * - Does not retrieve the current one being displayed.\n\t * @param {Object} currentProduct\n\t * @returns\n\t */\n\tconst retrieveViewed = currentProduct => {\n\t\tconst viewed = localStorage.getItem('viewed');\n\n\t\tconst viewedConverted = JSON.parse(viewed);\n\n\t\treturn viewedConverted.filter(\n\t\t\tproduct => product.handle !== currentProduct.handle\n\t\t);\n\t};\n\n\t/**\n\t * Get a product by its handle, which will be the same as the page param.\n\t */\n\tconst getProduct = useCallback(async () => {\n\t\ttry {\n\t\t\tconst product = await clientContext.client.product.fetchByHandle(\n\t\t\t\thandle\n\t\t\t);\n\n\t\t\tsaveViewed(product);\n\t\t\tconst viewed = retrieveViewed(product);\n\n\t\t\tlet imageSrc, imageId;\n\n\t\t\tif (product.variants.length > 1) {\n\t\t\t\timageSrc = product.variants[0].image.src;\n\t\t\t\timageId = product.variants[0].image.id;\n\t\t\t} else {\n\t\t\t\timageSrc = product.images[0].src;\n\t\t\t\timageId = product.images[0].id;\n\t\t\t}\n\n\t\t\tconst relatedProducts = retrieveRelatedProducts(product);\n\n\t\t\tdispatchProduct({\n\t\t\t\ttype: 'INITIALIZE',\n\t\t\t\tproduct,\n\t\t\t\tquantity: 1,\n\t\t\t\timageSrc,\n\t\t\t\timageId,\n\t\t\t\tvariant: product.variants[0],\n\t\t\t\trelatedProducts,\n\t\t\t\tviewed,\n\t\t\t});\n\n\t\t\tgoToTop();\n\t\t} catch (err) {\n\t\t\t// console.log(err);\n\t\t\thistory.replace('/*');\n\t\t}\n\t}, [handle, history, clientContext, retrieveRelatedProducts]);\n\n\t/**\n\t * Sets a new main image from the product to display.\n\t * @param {String} imageId\n\t * @param {String} imageSrc\n\t * @param {Number} index\n\t */\n\tconst setImageSelected = (imageId, imageSrc, index = 0) => {\n\t\tif (productChosen.product.variants.length > 1)\n\t\t\tdispatchProduct({\n\t\t\t\ttype: 'SET_SELECTION_WITH_VARIANT',\n\t\t\t\timageSrc,\n\t\t\t\timageId,\n\t\t\t\tvariant: productChosen.product.variants[index],\n\t\t\t});\n\t\telse\n\t\t\tdispatchProduct({\n\t\t\t\ttype: 'SET_SELECTION',\n\t\t\t\timageSrc,\n\t\t\t\timageId,\n\t\t\t});\n\t};\n\n\t/**\n\t * Sets a variant selection.\n\t * @param {Event} event\n\t */\n\tconst setVariantSelected = event => {\n\t\tconst variant = JSON.parse(event.target.value);\n\n\t\tdispatchProduct({\n\t\t\ttype: 'SET_SELECTION_WITH_VARIANT',\n\t\t\timageSrc: variant.image.src,\n\t\t\timageId: variant.image.id,\n\t\t\tvariant,\n\t\t});\n\t};\n\n\t/**\n\t * Render products images as side thumbnails.\n\t * - If product has variants, their image will be set.\n\t * - If product has no variants, its images will be set.\n\t * @returns Thumbnail block.\n\t */\n\tconst renderThumbnails = () => {\n\t\tif (productChosen.product.variants.length > 1)\n\t\t\treturn productChosen.product.variants.map((variant, index) => (\n\t\t\t\t<Thumbnail\n\t\t\t\t\tkey={index}\n\t\t\t\t\tisVariant={true}\n\t\t\t\t\tproduct={productChosen.product}\n\t\t\t\t\timage={variant.image}\n\t\t\t\t\tindex={index}\n\t\t\t\t\tcurrentSelection={productChosen.imageId}\n\t\t\t\t\tsetImage={setImageSelected}\n\t\t\t\t/>\n\t\t\t));\n\n\t\treturn productChosen.product.images.map((image, index) => (\n\t\t\t<Thumbnail\n\t\t\t\tkey={index}\n\t\t\t\tisVariant={false}\n\t\t\t\tproduct={productChosen.product}\n\t\t\t\timage={image}\n\t\t\t\tindex={index}\n\t\t\t\tcurrentSelection={productChosen.imageId}\n\t\t\t\tsetImage={setImageSelected}\n\t\t\t/>\n\t\t));\n\t};\n\n\t/**\n\t * Render product variants names as options.\n\t * @returns option block.\n\t */\n\tconst renderVariants = () => {\n\t\treturn productChosen.product.variants.map(variant => (\n\t\t\t<option key={variant.id} value={JSON.stringify(variant)}>\n\t\t\t\t{variant.title}\n\t\t\t</option>\n\t\t));\n\t};\n\n\t/**\n\t * Updates the quantity value.\n\t * @param {Number} quantity\n\t */\n\tconst updateQuantity = quantity => {\n\t\tdispatchProduct({\n\t\t\ttype: 'SET_QUANTITY',\n\t\t\tquantity,\n\t\t});\n\t};\n\n\t/**\n\t * Adds the current displayed product to cart.\n\t */\n\tconst addToCart = () => {\n\t\tconst variant = productChosen.variant;\n\n\t\tconst title =\n\t\t\tproductChosen.product.variants.length > 1\n\t\t\t\t? `${productChosen.product.title} - ${productChosen.variant.title}`\n\t\t\t\t: productChosen.product.title;\n\n\t\tconst quantity = productChosen.quantity;\n\n\t\tconst handle = productChosen.product.handle;\n\n\t\tif (\n\t\t\tcheckout.lineItems.findIndex(\n\t\t\t\tproductVariant => productVariant.id === variant.id\n\t\t\t) !== -1\n\t\t)\n\t\t\tdispatch(updateProductFromCheckout(variant, quantity));\n\t\telse dispatch(addProductToCheckout(variant, title, quantity, handle));\n\t};\n\n\tconst changeNumberOfSlides = () => {\n\t\tif (window.innerWidth <= 600) return 2;\n\t\telse if (window.innerWidth <= 800) return 3;\n\t\telse return 4;\n\t};\n\n\tuseEffect(() => {\n\t\tif (clientContext.collections) getProduct();\n\t}, [clientContext, getProduct]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t{productChosen && (\n\t\t\t\t<section className='product'>\n\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark product__title'>\n\t\t\t\t\t\t{productChosen.product.variants.length > 1\n\t\t\t\t\t\t\t? `${productChosen.product.title} - ${productChosen.variant.title}`\n\t\t\t\t\t\t\t: productChosen.product.title}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div className='product__details'>\n\t\t\t\t\t\t<div className='product__image'>\n\t\t\t\t\t\t\t<figure className='product__image-container'>\n\t\t\t\t\t\t\t\t<ReactImageMagnify\n\t\t\t\t\t\t\t\t\timageClassName='product__image '\n\t\t\t\t\t\t\t\t\tenlargedImageContainerClassName='product__image '\n\t\t\t\t\t\t\t\t\tenlargedImagePosition='over'\n\t\t\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\t\t\tsmallImage: {\n\t\t\t\t\t\t\t\t\t\t\talt: productChosen.product.images[0]\n\t\t\t\t\t\t\t\t\t\t\t\t.altText\n\t\t\t\t\t\t\t\t\t\t\t\t? productChosen.product\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.images[0].altText\n\t\t\t\t\t\t\t\t\t\t\t\t: productChosen.product.title,\n\t\t\t\t\t\t\t\t\t\t\tisFluidWidth: true,\n\t\t\t\t\t\t\t\t\t\t\tsrc: productChosen.imageSrc,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tlargeImage: {\n\t\t\t\t\t\t\t\t\t\t\tsrc: productChosen.imageSrc,\n\t\t\t\t\t\t\t\t\t\t\twidth: 900, // HERE ???\n\t\t\t\t\t\t\t\t\t\t\theight: 900,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</figure>\n\n\t\t\t\t\t\t\t<ul className='product__image-variant-list product__image-variant-list--mobile'>\n\t\t\t\t\t\t\t\t{renderThumbnails()}\n\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t\t{/* TO-DO the product card should probably be here */}\n\n\t\t\t\t\t\t\t<Description\n\t\t\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t\t\tproductChosen.product.descriptionHtml\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tisThereADescription={\n\t\t\t\t\t\t\t\t\tproductChosen.product.description.trim() !==\n\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* TO-DO needs to be a standalone component */}\n\t\t\t\t\t\t\t<div className='card product__card product__card--mobile'>\n\t\t\t\t\t\t\t\t<div className='card__details'>\n\t\t\t\t\t\t\t\t\t<div className='input__container'>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--capitalized'>\n\t\t\t\t\t\t\t\t\t\t\tAvailability:{' '}\n\t\t\t\t\t\t\t\t\t\t\t{productChosen.variant.available\n\t\t\t\t\t\t\t\t\t\t\t\t? 'in stock'\n\t\t\t\t\t\t\t\t\t\t\t\t: 'out of stock'}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{productChosen.product.variants.length >\n\t\t\t\t\t\t\t\t\t\t1 && (\n\t\t\t\t\t\t\t\t\t\t<div className='input__container'>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\tVariant:{' '}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='input input__select  input__select--collection'\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={setVariantSelected}>\n\t\t\t\t\t\t\t\t\t\t\t\t{renderVariants()}\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t<QuantityInput\n\t\t\t\t\t\t\t\t\t\tproductQuantity={productChosen.quantity}\n\t\t\t\t\t\t\t\t\t\tsetQuantity={updateQuantity}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t<span className='navbar-line'></span>\n\n\t\t\t\t\t\t\t\t\t<div className='product__price'>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\tproductChosen.variant.price *\n\t\t\t\t\t\t\t\t\t\t\t\tproductChosen.quantity *\n\t\t\t\t\t\t\t\t\t\t\t\tclientContext.currencyRate.value\n\t\t\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\t\tonClick={addToCart}\n\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\tproductChosen.quantity === 0 ||\n\t\t\t\t\t\t\t\t\t\t\t!productChosen.variant.available\n\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t{productChosen.quantity === 0 ||\n\t\t\t\t\t\t\t\t\t\t!productChosen.variant.available ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className='button__icon-container button__icon-container--big'>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSold Out\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<div className='button__icon-container button__icon-container--big'>\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon button__icon--card-big '>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-cart`}></use>\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd To Cart\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<span className='navbar-line big-margin-top'></span>\n\n\t\t\t\t\t\t\t{/* HERE */}\n\t\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark no-margin'>\n\t\t\t\t\t\t\t\t\t\tYou may also like:\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tproducts={productChosen.relatedProducts}\n\t\t\t\t\t\t\t\tnaturalSlideWidth={100}\n\t\t\t\t\t\t\t\tnaturalSlideHeight={\n\t\t\t\t\t\t\t\t\twindow.innerWidth <= 800 ? 130 : 145\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvisibleSlides={changeNumberOfSlides()}\n\t\t\t\t\t\t\t\tstep={changeNumberOfSlides()}\n\t\t\t\t\t\t\t\tisPlaying={false}\n\t\t\t\t\t\t\t\tproductDetails={true}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<span className='navbar-line big-margin-top'></span>\n\n\t\t\t\t\t\t\t{/* HERE */}\n\t\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark no-margin'>\n\t\t\t\t\t\t\t\t\t\tRecently Viewed:\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tproducts={productChosen.viewed}\n\t\t\t\t\t\t\t\tnaturalSlideWidth={100}\n\t\t\t\t\t\t\t\tnaturalSlideHeight={\n\t\t\t\t\t\t\t\t\twindow.innerWidth <= 800 ? 130 : 145\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvisibleSlides={changeNumberOfSlides()}\n\t\t\t\t\t\t\t\tstep={changeNumberOfSlides()}\n\t\t\t\t\t\t\t\tisPlaying={false}\n\t\t\t\t\t\t\t\tproductDetails={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</Layout>\n\t);\n};\n\nexport default ProductDetailsMobile;\n","import React, { useContext, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\nimport { AuthContext } from '../context/authContext';\nimport { createCustomerCheckout, getAvailableShippingRates } from '../graphql';\nimport axiosInstace from '../axios';\nimport LoadingBar from '../components/LoadingBar';\nimport { ClientContext } from '../context/clientContext';\n\nconst shippingFormReducer = (currentFormState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_LOADING':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tcalcLoading: action.calcLoading,\n\t\t\t\tcalculateError: false,\n\t\t\t};\n\t\tcase 'SET_ERROR':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tcalculateError: true,\n\t\t\t};\n\t\tcase 'INCREASE_TRIAL_COUNT':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\ttrialsCount: ++currentFormState.trialsCount,\n\t\t\t};\n\t\tcase 'SET_AVAILABLE_SHIPPING_RATES':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tavailableShippingRates: action.availableShippingRates,\n\t\t\t\tshippingWasCalculated: true,\n\t\t\t\ttrialsCount: 0,\n\t\t\t\tcalcLoading: false,\n\t\t\t};\n\t\tcase 'SET_FIELD':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\t[action.field]: action.value,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentFormState;\n\t}\n};\n\nconst ShippingCalculator = props => {\n\tconst checkout = useSelector(state => state.checkout);\n\tconst user = useSelector(state => state.user);\n\tconst authContext = useContext(AuthContext);\n\tconst clientContext = useContext(ClientContext);\n\n\tconst [shippingForm, dispatchShippingForm] = useReducer(\n\t\tshippingFormReducer,\n\t\t{\n\t\t\tcountry: user.mainAddress ? user.mainAddress.country : '',\n\t\t\tprovince: user.mainAddress ? user.mainAddress.province : '',\n\t\t\tzip: user.mainAddress ? user.mainAddress.zip : '',\n\t\t\tavailableShippingRates: [],\n\t\t\ttrialsCount: 0,\n\t\t\tshippingWasCalculated: false,\n\t\t\tcalcLoading: false,\n\t\t\tcalculateError: false,\n\t\t}\n\t);\n\n\t/**\n\t * Recursively tries to retrieve shipping rates based\n\t * on the last user checkout, which it creates before requesting.\n\t * - For it to work, country, province and zip must be available.\n\t * - It will attemp 10 times and in case of failing, will throw\n\t * a respective error, else, the available shipping rates.\n\t * @param {Boolean} wasItLoaded is there a shipping rate already.\n\t * @returns\n\t */\n\tconst calculateShipping = async (wasItLoaded = null) => {\n\t\tconst { country, province, zip } = shippingForm;\n\n\t\tif (country && province && zip)\n\t\t\ttry {\n\t\t\t\tdispatchShippingForm({\n\t\t\t\t\ttype: 'SET_LOADING',\n\t\t\t\t\tcalcLoading: true,\n\t\t\t\t});\n\t\t\t\tconst lineItems = checkout.lineItems.map(product => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvariantId: product.id,\n\t\t\t\t\t\tquantity: product.quantity,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tconst shippingAddress = {\n\t\t\t\t\tcountry,\n\t\t\t\t\tprovince,\n\t\t\t\t\tzip,\n\t\t\t\t\tcity: 'any',\n\t\t\t\t};\n\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tcreateCustomerCheckout(\n\t\t\t\t\t\tlineItems,\n\t\t\t\t\t\tshippingAddress,\n\t\t\t\t\t\tuser.email\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tconst shippingRates = await axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tgetAvailableShippingRates(authContext.customerToken)\n\t\t\t\t);\n\n\t\t\t\tdispatchShippingForm({ type: 'INCREASE_TRIAL_COUNT' });\n\n\t\t\t\twasItLoaded =\n\t\t\t\t\tshippingRates.data.data.customer.lastIncompleteCheckout\n\t\t\t\t\t\t.availableShippingRates.shippingRates;\n\n\t\t\t\tif (!wasItLoaded && shippingForm.trialsCount < 10)\n\t\t\t\t\treturn calculateShipping(wasItLoaded);\n\n\t\t\t\tdispatchShippingForm({\n\t\t\t\t\ttype: 'SET_AVAILABLE_SHIPPING_RATES',\n\t\t\t\t\tavailableShippingRates:\n\t\t\t\t\t\tshippingRates.data.data.customer.lastIncompleteCheckout\n\t\t\t\t\t\t\t.availableShippingRates.shippingRates,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tdispatchShippingForm({\n\t\t\t\t\ttype: 'SET_LOADING',\n\t\t\t\t\tcalcLoading: false,\n\t\t\t\t});\n\t\t\t}\n\t\telse {\n\t\t\tdispatchShippingForm({ type: 'SET_ERROR' });\n\t\t}\n\t};\n\n\t/**\n\t * Sets a form field value.\n\t * @param {Event} event\n\t * @param {String} field\n\t */\n\tconst setField = (event, field) => {\n\t\tdispatchShippingForm({\n\t\t\ttype: 'SET_FIELD',\n\t\t\tfield,\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Sets a form dropdown field value.\n\t * @param {String} value\n\t * @param {String} field\n\t */\n\tconst setFieldDropdown = (value, field) => {\n\t\tdispatchShippingForm({ type: 'SET_FIELD', field, value });\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{authContext.customerToken && checkout.lineItems.length > 0 && (\n\t\t\t\t<div className='shipping'>\n\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\tShipping Estimate:\n\t\t\t\t\t</p>\n\t\t\t\t\t{/* COUNTRY */}\n\t\t\t\t\t{/* STATE/PROVINCE */}\n\t\t\t\t\t<div className='auth-form__field auth-form__field--side-by-side'>\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--address'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tCountry\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<CountryDropdown\n\t\t\t\t\t\t\t\tclasses='input input__select input__select--address'\n\t\t\t\t\t\t\t\tvalue={shippingForm.country}\n\t\t\t\t\t\t\t\tpriorityOptions={['US', 'CA', 'GB', 'AU']}\n\t\t\t\t\t\t\t\tdefaultOptionLabel={shippingForm.country}\n\t\t\t\t\t\t\t\tonChange={val =>\n\t\t\t\t\t\t\t\t\tsetFieldDropdown(val, 'country')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--address'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tProvince/State\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<RegionDropdown\n\t\t\t\t\t\t\t\tclasses='input input__select input__select--address'\n\t\t\t\t\t\t\t\tcountry={shippingForm.country}\n\t\t\t\t\t\t\t\tdefaultOptionLabel={shippingForm.province}\n\t\t\t\t\t\t\t\tvalue={shippingForm.province}\n\t\t\t\t\t\t\t\tonChange={val =>\n\t\t\t\t\t\t\t\t\tsetFieldDropdown(val, 'province')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='zip'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tPostal/ZIP code\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='zip'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={20}\n\t\t\t\t\t\t\tvalue={shippingForm.zip}\n\t\t\t\t\t\t\tonChange={event => setField(event, 'zip')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t{!shippingForm.calcLoading ? (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\tonClick={calculateShipping}>\n\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\tcalculate shipping\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar marginTop='3rem' width={400} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{shippingForm.calculateError && (\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tYou have to fill correctly all the fields!\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{shippingForm.availableShippingRates &&\n\t\t\t\t\tshippingForm.availableShippingRates.length > 0 ? (\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tHere are the available shipping rates to that\n\t\t\t\t\t\t\t\tlocation:\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<ul className='shipping__rate-list'>\n\t\t\t\t\t\t\t\t{shippingForm.availableShippingRates.map(\n\t\t\t\t\t\t\t\t\trate => {\n\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\t\t\t\t//currencyCode,\n\t\t\t\t\t\t\t\t\t\t} = rate.priceV2;\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<li key={rate.title}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{rate.title} at{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientContext\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.currencyRate.code\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t\t\t\t\t\t{parseFloat(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tamount *\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientContext\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.currencyRate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t{shippingForm.shippingWasCalculated && (\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tSorry, shipping is not available to that\n\t\t\t\t\t\t\t\t\tlocation.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ShippingCalculator;\n","import React, { useContext, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Layout from '../hoc/Layout';\nimport LineProducts from '../components/LineProducts';\nimport { ClientContext } from '../context/clientContext';\nimport { removeAllProductsFromCheckout } from '../store/actions/checkout';\nimport { updateCheckoutShippingAddress, updateCheckoutEmail } from '../graphql';\nimport axiosInstace from '../axios';\nimport LoadingBar from '../components/LoadingBar';\nimport ShippingCalculator from '../components/ShippingCalculator';\n\nconst addressFields = {\n\tfirstName: '',\n\tlastName: '',\n\tcompany: '',\n\taddress1: '',\n\taddress2: '',\n\tcity: '',\n\tcountry: '',\n\tprovince: '',\n\tzip: '',\n};\n\nconst Cart = props => {\n\tconst checkout = useSelector(state => state.checkout);\n\tconst user = useSelector(state => state.user);\n\tconst dispatch = useDispatch();\n\tconst clientContext = useContext(ClientContext);\n\tconst history = useHistory();\n\tconst [textAreaValue, setTextAreaValue] = useState('');\n\tconst [loading, setLoading] = useState(false);\n\n\t/**\n\t * Creates a checkout.\n\t * - Treat user products chosen.\n\t * - Creates a new shopify checkout.\n\t * - Adds custom attributes, such as, notes.\n\t * - Adds user's email to checkout(if logged in).\n\t * - Adds user's main address to chekout(if there is one).\n\t * - Finally, adds products to checkout, opening a new tab\n\t * where the user can complete or edit his checkout.\n\t */\n\tconst createCheckout = async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst lineItems = checkout.lineItems.map(product => {\n\t\t\t\treturn {\n\t\t\t\t\tvariantId: product.id,\n\t\t\t\t\tquantity: product.quantity,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst newCheckout = await clientContext.client.checkout.create();\n\n\t\t\tconst input = {\n\t\t\t\tcustomAttributes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'note',\n\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\ttextAreaValue.trim() !== ''\n\t\t\t\t\t\t\t\t? `Customer Note: ${textAreaValue}`\n\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t};\n\n\t\t\tawait clientContext.client.checkout.updateAttributes(\n\t\t\t\tnewCheckout.id,\n\t\t\t\tinput\n\t\t\t);\n\n\t\t\tif (user.email)\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutEmail(user.email, newCheckout.id)\n\t\t\t\t);\n\n\t\t\tif (user.mainAddress) {\n\t\t\t\tconst addressWithoutId = { ...addressFields };\n\n\t\t\t\tfor (let key in user.mainAddress)\n\t\t\t\t\tif (key !== 'id')\n\t\t\t\t\t\taddressWithoutId[key] = user.mainAddress[key];\n\n\t\t\t\t// const checkoutWithAddress =\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutShippingAddress(\n\t\t\t\t\t\taddressWithoutId,\n\t\t\t\t\t\tnewCheckout.id\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// TO-DO: needs proper treatment, or trust that user will know\n\t\t\t\t// that his info is not getting grabbed because of wrong address information\n\t\t\t\t// const errors =\n\t\t\t\t// \tcheckoutWithAddress.data.data\n\t\t\t\t// \t\t.checkoutShippingAddressUpdateV2.checkoutUserErrors;\n\n\t\t\t\t//if (errors.length > 0) throw new Error(errors[0].message);\n\t\t\t}\n\n\t\t\tconst checkoutWithProducts =\n\t\t\t\tawait clientContext.client.checkout.addLineItems(\n\t\t\t\t\tnewCheckout.id,\n\t\t\t\t\tlineItems\n\t\t\t\t);\n\n\t\t\twindow.open(checkoutWithProducts.webUrl);\n\t\t\tdispatch(removeAllProductsFromCheckout());\n\t\t\tsetLoading(false);\n\n\t\t\thistory.push('/');\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\tconsole.log('Something terrible happened ', err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='cart--page'>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark'>\n\t\t\t\t\t\tMy Cart\n\t\t\t\t\t</h2>\n\t\t\t\t\t<LineProducts big={true} />\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<ShippingCalculator />\n\n\t\t\t\t\t{/* NOTE: THIS PLACES COMENTS SOMEWHAT INTO THE WRONG PLACE  */}\n\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\tAdditional Comments:\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName='input input__text-area'\n\t\t\t\t\t\tname='notes'\n\t\t\t\t\t\tid='notes'\n\t\t\t\t\t\tcols={window.innerWidth > 600 ? '50' : '30'}\n\t\t\t\t\t\tmaxLength={300}\n\t\t\t\t\t\tvalue={textAreaValue}\n\t\t\t\t\t\tonChange={event => setTextAreaValue(event.target.value)}\n\t\t\t\t\t\trows='3'></textarea>\n\t\t\t\t\t{/* /////////////////////////////// */}\n\n\t\t\t\t\t<span className='navbar-line small-margin-top'></span>\n\n\t\t\t\t\t<div className='cart__total'>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>Total: </p>\n\t\t\t\t\t\t<div className='product__price'>\n\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\tcheckout.totalPrice *\n\t\t\t\t\t\t\t\t\tclientContext.currencyRate.value\n\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\tdisabled={checkout.totalPrice === 0}\n\t\t\t\t\t\t\tonClick={createCheckout}>\n\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\tproceed to checkout\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<LoadingBar marginTop='3rem' width={400} />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Cart;\n","import React, { useReducer, useContext, useState } from 'react';\nimport validate from 'validate.js';\nimport { useHistory } from 'react-router-dom';\n\nimport axiosInstance from '../axios';\nimport { createUser, getCustomerToken } from '../graphql';\nimport Layout from '../hoc/Layout';\nimport { AuthContext } from '../context/authContext';\nimport LoadingBar from '../components/LoadingBar';\n\nconst signupFormReducer = (currentFormState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_USERNAME':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tusername: action.username,\n\t\t\t};\n\t\tcase 'SET_FIRST_NAME':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tname: action.name,\n\t\t\t};\n\t\tcase 'SET_LAST_NAME':\n\t\t\treturn { ...currentFormState, lastName: action.lastName };\n\t\tcase 'SET_EMAIL':\n\t\t\treturn { ...currentFormState, email: action.email };\n\t\tcase 'SET_PASSWORD':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tpassword: action.password,\n\t\t\t};\n\t\tcase 'SET_CONFIRM_PASSWORD':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tpasswordConfirm: action.passwordConfirm,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentFormState;\n\t}\n};\n\nconst signupFormErrorReducer = (currentFormState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_PASSWORD_IS_WITH_ERROR':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tpasswordIsWithError: action.passwordIsWithError,\n\t\t\t};\n\t\tcase 'SET_EMAIL_IS_WITH_ERROR':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\temailIsWithError: action.emailIsWithError,\n\t\t\t};\n\t\tcase 'SET_EMAIL_IS_TAKEN':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tusernameTaken: false,\n\t\t\t\temailIsTaken: true,\n\t\t\t\temailPending: false,\n\t\t\t};\n\t\tcase 'SET_USER_IS_TAKEN':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tusernameTaken: true,\n\t\t\t\temailIsTaken: false,\n\t\t\t\temailPending: false,\n\t\t\t};\n\t\tcase 'SET_EMAIL_IS_PENDING':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tusernameTaken: false,\n\t\t\t\temailIsTaken: false,\n\t\t\t\temailPending: true,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentFormState;\n\t}\n};\n\nconst SignUp = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst history = useHistory();\n\tconst [loading, setLoading] = useState(false);\n\n\tconst [signupForm, dispatchSignupForm] = useReducer(signupFormReducer, {\n\t\tusername: '',\n\t\tname: '',\n\t\tlastName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tpasswordConfirm: '',\n\t});\n\n\tconst [signupFormError, dispatchSignupFormError] = useReducer(\n\t\tsignupFormErrorReducer,\n\t\t{\n\t\t\tpasswordError: \"Passwords don't match.\",\n\t\t\temailError: 'This email format is invalid.',\n\t\t\temailTakenError: 'This email is already in use.',\n\t\t\temailPendingError:\n\t\t\t\t'A verification link was already sent to your email.',\n\t\t\tuserNameTakenError: 'This username already exists.',\n\t\t\tpasswordIsWithError: false,\n\t\t\temailIsWithError: false,\n\t\t\temailIsTaken: false,\n\t\t\tusernameTaken: false,\n\t\t\temailPending: false,\n\t\t}\n\t);\n\n\t/**\n\t * Checks whether the string 'email' is in\n\t * a valid email format.\n\t * - Will set an error message in case of invalidation.\n\t * @returns boolean value\n\t */\n\tconst validEmail = () => {\n\t\tconst constraints = {\n\t\t\tfrom: { email: true },\n\t\t};\n\n\t\tconst isValid = validate({ from: signupForm.email }, constraints);\n\n\t\tif (isValid !== undefined)\n\t\t\tdispatchSignupFormError({\n\t\t\t\ttype: 'SET_EMAIL_IS_WITH_ERROR',\n\t\t\t\temailIsWithError: true,\n\t\t\t});\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Checks whether the passwords are equal.\n\t * - Will set an error message in case of invalidation.\n\t * @returns boolean value\n\t */\n\tconst equalPassword = () => {\n\t\tconst constraints = {\n\t\t\tconfirmPassword: {\n\t\t\t\tequality: 'password',\n\t\t\t},\n\t\t};\n\n\t\tconst isValid = validate(\n\t\t\t{\n\t\t\t\tpassword: signupForm.password,\n\t\t\t\tconfirmPassword: signupForm.passwordConfirm,\n\t\t\t},\n\t\t\tconstraints\n\t\t);\n\n\t\tif (isValid !== undefined)\n\t\t\tdispatchSignupFormError({\n\t\t\t\ttype: 'SET_PASSWORD_IS_WITH_ERROR',\n\t\t\t\tpasswordIsWithError: true,\n\t\t\t});\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Validates input fields and if everything\n\t * is valid, creates an user account along with\n\t * the information give.\n\t * @param {Event} event\n\t */\n\tconst validateFields = async event => {\n\t\tevent.preventDefault();\n\n\t\tconst isEmailValid = validEmail();\n\t\tconst isPasswordValid = equalPassword();\n\n\t\tif (isEmailValid)\n\t\t\tdispatchSignupFormError({\n\t\t\t\ttype: 'SET_EMAIL_IS_WITH_ERROR',\n\t\t\t\temailIsWithError: false,\n\t\t\t});\n\t\tif (isPasswordValid)\n\t\t\tdispatchSignupFormError({\n\t\t\t\ttype: 'SET_PASSWORD_IS_WITH_ERROR',\n\t\t\t\tpasswordIsWithError: false,\n\t\t\t});\n\n\t\ttry {\n\t\t\tif (isEmailValid && isPasswordValid) {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst createdUser = await axiosInstance.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tcreateUser(\n\t\t\t\t\t\tsignupForm.name,\n\t\t\t\t\t\tsignupForm.lastName,\n\t\t\t\t\t\tsignupForm.email,\n\t\t\t\t\t\tsignupForm.password\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\tcreatedUser.data.data.customerCreate.customerUserErrors\n\t\t\t\t\t\t.length > 0\n\t\t\t\t) {\n\t\t\t\t\tconst errorMessage =\n\t\t\t\t\t\tcreatedUser.data.data.customerCreate\n\t\t\t\t\t\t\t.customerUserErrors[0].message;\n\n\t\t\t\t\tthrow new Error(errorMessage);\n\t\t\t\t}\n\n\t\t\t\tconst customerToken = await axiosInstance.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tgetCustomerToken(signupForm.email, signupForm.password)\n\t\t\t\t);\n\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t'shopifyCustomerToken',\n\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\tcustomerToken.data.data.customerAccessTokenCreate\n\t\t\t\t\t\t\t.customerAccessToken\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tsetLoading(false);\n\t\t\t\tauthContext.userIsOnline();\n\n\t\t\t\thistory.replace('/');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\tif (err.message === 'Email has already been taken')\n\t\t\t\tdispatchSignupFormError({ type: 'SET_EMAIL_IS_TAKEN' });\n\n\t\t\tlet error = err.message;\n\t\t\terror = error.split(',');\n\n\t\t\tif (\n\t\t\t\terror.length > 1 &&\n\t\t\t\terror[1] ===\n\t\t\t\t\t' please click the link included to verify your email address.'\n\t\t\t) {\n\t\t\t\tdispatchSignupFormError({ type: 'SET_EMAIL_IS_PENDING' });\n\t\t\t}\n\n\t\t\t// go to connection error page\n\t\t\tconsole.log('Something went terribly wrong! ', err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='auth-form auth-form__box'>\n\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\tCreate My Account\n\t\t\t\t</h2>\n\n\t\t\t\t<form className='auth-form__form' onSubmit={validateFields}>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='email'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={signupForm.email}\n\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\tdispatchSignupForm({\n\t\t\t\t\t\t\t\t\ttype: 'SET_EMAIL',\n\t\t\t\t\t\t\t\t\temail: event.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{signupFormError.emailIsWithError && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t{signupFormError.emailError}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{signupFormError.emailIsTaken && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t{signupFormError.emailTakenError}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{signupFormError.emailPending && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--validation'>\n\t\t\t\t\t\t\t\t{signupFormError.emailPendingError}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='password'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\tminLength={5}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={signupForm.password}\n\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\tdispatchSignupForm({\n\t\t\t\t\t\t\t\t\ttype: 'SET_PASSWORD',\n\t\t\t\t\t\t\t\t\tpassword: event.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='password-retype'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tRetype The Password\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password-retype'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\tminLength={5}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={signupForm.passwordConfirm}\n\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\tdispatchSignupForm({\n\t\t\t\t\t\t\t\t\ttype: 'SET_CONFIRM_PASSWORD',\n\t\t\t\t\t\t\t\t\tpasswordConfirm: event.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{signupFormError.passwordIsWithError && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t{signupFormError.passwordError}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\tonClick={() => {}}>\n\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar loading={loading} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default SignUp;\n","import React, { useContext, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Layout from '../hoc/Layout';\nimport { AuthContext } from '../context/authContext';\nimport LoadingBar from '../components/LoadingBar';\nimport { getCustomerToken } from '../graphql';\nimport axiosInstance from '../axios';\n\nconst Login = props => {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst authContext = useContext(AuthContext);\n\tconst [loading, setLoading] = useState(false);\n\tconst [loginError, setLoginError] = useState(false);\n\tconst history = useHistory();\n\n\t// TO-DO: login attempts limititation functionality by account 5+3\n\t/**\n\t * Logs user in and stores his token.\n\t * - redirects to home page if successfully loged in.\n\t * @param {Event} event\n\t */\n\tconst login = async event => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst customerToken = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetCustomerToken(email, password)\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\tcustomerToken.data.data.customerAccessTokenCreate\n\t\t\t\t\t.customerUserErrors.length > 0\n\t\t\t)\n\t\t\t\tthrow new Error(\n\t\t\t\t\tcustomerToken.data.data.customerAccessTokenCreate.customerUserErrors.message\n\t\t\t\t);\n\n\t\t\tconst { customerAccessToken } =\n\t\t\t\tcustomerToken.data.data.customerAccessTokenCreate;\n\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'shopifyCustomerToken',\n\t\t\t\tJSON.stringify(customerAccessToken)\n\t\t\t);\n\n\t\t\tsetLoginError(false);\n\t\t\tsetLoading(false);\n\t\t\tawait authContext.login(customerAccessToken.accessToken);\n\n\t\t\thistory.replace('/');\n\t\t} catch (err) {\n\t\t\tsetLoginError(true);\n\t\t\tsetLoading(false);\n\t\t\t// else connection error\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='auth-form auth-form__box'>\n\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\tLog In\n\t\t\t\t</h2>\n\n\t\t\t\t<form className='auth-form__form' onSubmit={login}>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='email'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black paragraph--capitalized'>\n\t\t\t\t\t\t\temail\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={event => setEmail(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{loginError && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\tIncorrect email or password.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='password'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black paragraph--capitalized'>\n\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={event => setPassword(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<Link to='/forget' className='auth-form__forget-link'>\n\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tForgot your password?\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\tonClick={() => {}}>\n\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar loading={loading} width={200} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div className='login__footer'>\n\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\tDon't have an account?\n\t\t\t\t</h4>\n\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\tRegister with us for a faster checkout, to track the status\n\t\t\t\t\tof your order and more.\n\t\t\t\t</p>\n\t\t\t\t<button\n\t\t\t\t\tclassName='button button__black button__black--account  button__black--account-big'\n\t\t\t\t\tonClick={() => history.push('/signup')}>\n\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\tcreate my account\n\t\t\t\t\t</p>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Login;\n","import React from 'react';\n\nimport Layout from '../hoc/Layout';\n\n// TO-DO\nconst NotFound = props => {\n\treturn (\n\t\t<Layout>\n\t\t\t<section className='home'>\n\t\t\t\t<h1>There is nothing here</h1>\n\t\t\t</section>\n\t\t</Layout>\n\t);\n};\n\nexport default NotFound;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport { AuthContext } from '../context/authContext';\n\nconst NavbarVertical = props => {\n\tconst authContext = useContext(AuthContext);\n\n\tconst logout = async () => {\n\t\ttry {\n\t\t\tawait authContext.logout();\n\t\t} catch (err) {\n\t\t\t// connection error\n\t\t\tconsole.log('D:', err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<nav className='navbar-vertical'>\n\t\t\t<ul className='navbar-vertical__list navbar-vertical__list--profile'>\n\t\t\t\t<li className='navbar-vertical__list-item'>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tto={`/me/settings`}\n\t\t\t\t\t\tclassName='paragraph navbar-vertical__link'\n\t\t\t\t\t\tactiveClassName='navbar-vertical__link--active'>\n\t\t\t\t\t\t<svg className='button__icon '>\n\t\t\t\t\t\t\t<use xlinkHref={`${sprite}#icon-cog`}></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t{window.innerWidth > 600 && 'Settings'}\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className='navbar-vertical__list-item'>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tto={`/me/orders`}\n\t\t\t\t\t\tclassName='paragraph navbar-vertical__link'\n\t\t\t\t\t\tactiveClassName='navbar-vertical__link--active'>\n\t\t\t\t\t\t<svg className='button__icon '>\n\t\t\t\t\t\t\t<use xlinkHref={`${sprite}#icon-dropbox`}></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t{window.innerWidth > 600 && 'My Orders'}\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li className='navbar-vertical__list-item'>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tto={`/me/address`}\n\t\t\t\t\t\tclassName='paragraph navbar-vertical__link'\n\t\t\t\t\t\tactiveClassName='navbar-vertical__link--active'>\n\t\t\t\t\t\t<svg className='button__icon '>\n\t\t\t\t\t\t\t<use xlinkHref={`${sprite}#icon-location2`}></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t{window.innerWidth > 600 && 'My Address'}\n\t\t\t\t\t</NavLink>\n\t\t\t\t</li>\n\t\t\t\t{window.innerWidth > 1140 && (\n\t\t\t\t\t<li className='navbar-vertical__list-item'>\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tto='/'\n\t\t\t\t\t\t\tclassName='paragraph navbar-vertical__link'\n\t\t\t\t\t\t\tonClick={logout}>\n\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t<use xlinkHref={`${sprite}#icon-exit`}></use>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t<p className='paragraph'>Log out</p>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</nav>\n\t);\n};\n\nexport default NavbarVertical;\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport validate from 'validate.js';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Layout from '../hoc/Layout';\nimport NavbarVertical from '../components/NavbarVertical';\nimport { updateCustomer, updateCustomerPassword } from '../graphql';\nimport axiosInstace from '../axios';\nimport { AuthContext } from '../context/authContext';\nimport { updateUserDetails } from '../store/actions/user';\nimport LoadingBar from '../components/LoadingBar';\n\nconst Settings = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst user = useSelector(state => state.user);\n\tconst distpatch = useDispatch();\n\n\tconst [lastName, setLastName] = useState('');\n\tconst [firstName, setFirstName] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [passwordConfirm, setPasswordConfirm] = useState('');\n\tconst [passwordNotEqual, setPasswordNotEqual] = useState(false);\n\tconst [emailNotValid, setEmailNotValid] = useState(false);\n\tconst [emailTaken, setEmailTaken] = useState(false);\n\tconst [loadingSettings, setLoadingSettings] = useState(false);\n\tconst [loadingPassword, setLoadingPassword] = useState(false);\n\n\t/**\n\t * Retrieves user data from the reducer storage.\n\t */\n\tconst retrieveCustomerData = useCallback(() => {\n\t\tsetLastName(user.lastName);\n\t\tsetFirstName(user.firstName);\n\t\tsetEmail(user.email);\n\t}, [user]);\n\n\tuseEffect(() => {\n\t\tretrieveCustomerData();\n\t}, [retrieveCustomerData]);\n\n\t/**\n\t * Checks whether the string 'email' is in\n\t * a valid email format.\n\t * @returns boolean value\n\t */\n\tconst validEmail = () => {\n\t\tconst constraints = {\n\t\t\tfrom: { email: true },\n\t\t};\n\n\t\tconst isValid = validate({ from: email }, constraints);\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Checks whether the passwords are equal.\n\t * @returns boolean value\n\t */\n\tconst equalPassword = () => {\n\t\tconst constraints = {\n\t\t\tconfirmPassword: {\n\t\t\t\tequality: 'password',\n\t\t\t},\n\t\t};\n\n\t\tconst isValid = validate(\n\t\t\t{\n\t\t\t\tpassword: password,\n\t\t\t\tconfirmPassword: passwordConfirm,\n\t\t\t},\n\t\t\tconstraints\n\t\t);\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Updates user password.\n\t * - Only updates if password and its confirmation\n\t * password matches and are greater than 5 characters.\n\t * @returns null\n\t */\n\tconst updatePassword = async () => {\n\t\ttry {\n\t\t\tconst isPasswordValid = equalPassword();\n\n\t\t\tif (\n\t\t\t\t!isPasswordValid ||\n\t\t\t\tpassword.trim() === '' ||\n\t\t\t\tpassword.length < 5\n\t\t\t) {\n\t\t\t\tsetPasswordNotEqual(true);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetPasswordNotEqual(false);\n\t\t\tsetLoadingPassword(true);\n\n\t\t\tconst res = await axiosInstace.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tupdateCustomerPassword(authContext.customerToken, password)\n\t\t\t);\n\n\t\t\tif (res.data.data.customerUpdate.customerUserErrors.length > 0) {\n\t\t\t\tconst errorMessage =\n\t\t\t\t\tres.data.data.customerUpdate.customerUserErrors[0].message;\n\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\t\t\tsetLoadingPassword(false);\n\n\t\t\tauthContext.logout();\n\t\t} catch (err) {\n\t\t\t// CONNECTION ERROR\n\t\t\tsetLoadingPassword(false);\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\t/**\n\t * Updates user settings.\n\t * - Except password.\n\t * @returns\n\t */\n\tconst updateSettings = async () => {\n\t\ttry {\n\t\t\tconst isEmailValid = validEmail();\n\n\t\t\tif (!isEmailValid) {\n\t\t\t\tsetEmailTaken(false);\n\t\t\t\tsetEmailNotValid(true);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetEmailNotValid(false);\n\t\t\tsetEmailTaken(false);\n\t\t\tsetLoadingSettings(true);\n\n\t\t\tconst res = await axiosInstace.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tupdateCustomer(\n\t\t\t\t\tauthContext.customerToken,\n\t\t\t\t\tfirstName.trim(),\n\t\t\t\t\tlastName.trim(),\n\t\t\t\t\temail\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif (res.data.data.customerUpdate.customerUserErrors.length > 0) {\n\t\t\t\tconst errorMessage =\n\t\t\t\t\tres.data.data.customerUpdate.customerUserErrors[0].message;\n\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\n\t\t\tsetLoadingSettings(false);\n\t\t\tdistpatch(\n\t\t\t\tupdateUserDetails(firstName.trim(), lastName.trim(), email)\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tsetEmailTaken(true);\n\t\t\tsetLoadingSettings(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='profile'>\n\t\t\t\t<NavbarVertical />\n\t\t\t\t<div className='auth-form'>\n\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\t\tMy Account\n\t\t\t\t\t</h2>\n\n\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\t\tAccount Details\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<div className='auth-form__form'>\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='email'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={event => setEmail(event.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{emailNotValid && (\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t\tThis Email format is invalid\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{emailTaken && (\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t\tEmail has already been taken.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--side-by-side'>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='first-name'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tFirst Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='first-name'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetFirstName(event.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='last-name'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tLast Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='last-name'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetLastName(event.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t\t{!loadingSettings ? (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\tonClick={updateSettings}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tUpdate My Settings\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<LoadingBar\n\t\t\t\t\t\t\t\t\twidth={350}\n\t\t\t\t\t\t\t\t\tloading={loadingSettings}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark big-margin-top'>\n\t\t\t\t\t\t\tPassword Change\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<div className='auth-form__form'>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='new-password'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tNew Password\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tid='new-password'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\t\tminLength={5}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetPassword(event.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{passwordNotEqual && (\n\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t\t\tPasswords don't match or are too short\n\t\t\t\t\t\t\t\t\t\t(min. 5).\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='retype-password'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tRetype Your New Password\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tid='retype-password'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\t\tminLength={5}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tvalue={passwordConfirm}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetPasswordConfirm(event.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t\t\t{!loadingPassword ? (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\t\tonClick={updatePassword}>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\t\tUpdate My Password\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<LoadingBar\n\t\t\t\t\t\t\t\t\t\twidth={350}\n\t\t\t\t\t\t\t\t\t\tloading={loadingPassword}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Settings;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst OrderCard = props => {\n\tconst { order } = props;\n\n\treturn (\n\t\t<div className='order'>\n\t\t\t<div className='order__header'>\n\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\tOrder {order.name}\n\t\t\t\t</h3>\n\t\t\t\t{/* <span>{switchOrderStatus()}</span> */}\n\t\t\t</div>\n\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\tPlaced on{' '}\n\t\t\t\t{new Date(order.processedAt).toLocaleDateString('en', {\n\t\t\t\t\tweekday: 'long',\n\t\t\t\t\tyear: 'numeric',\n\t\t\t\t\tmonth: 'long',\n\t\t\t\t\tday: 'numeric',\n\t\t\t\t})}{' '}\n\t\t\t\tat {new Date(order.processedAt).toLocaleTimeString('en')}\n\t\t\t</p>\n\t\t\t<div className='order__content'>\n\t\t\t\t<div>\n\t\t\t\t\t{order.lineItems.map(lineItem => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={lineItem.variant.product.handle}\n\t\t\t\t\t\t\tclassName='order__table-row'>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tProduct\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tclassName='card__link order__link'\n\t\t\t\t\t\t\t\t\tto={`/product/${lineItem.variant.product.handle}`}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black order__product-title'>\n\t\t\t\t\t\t\t\t\t\t{lineItem.title}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tSKU\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t{lineItem.variant.sku}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tPrice\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t{lineItem.variant.priceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t\t\t{lineItem.variant.priceV2.amount}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tQuantity\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t{lineItem.quantity}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tTotal\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t{lineItem.variant.priceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\tlineItem.variant.priceV2.amount *\n\t\t\t\t\t\t\t\t\t\tlineItem.quantity\n\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className='navbar-line order__line'></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className='order__table-foot'>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tSubtotal\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.subtotalPriceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.subtotalPriceV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tShipping\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.totalShippingPriceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.totalShippingPriceV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tTaxes\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.totalTaxV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.totalTaxV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tRefund\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.totalRefundedV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.totalRefundedV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tTotal\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.totalPriceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.totalPriceV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default OrderCard;\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Layout from '../hoc/Layout';\nimport NavbarVertical from '../components/NavbarVertical';\nimport { getCustomerOrders } from '../graphql';\nimport axiosInstance from '../axios';\nimport { AuthContext } from '../context/authContext';\nimport OrderCard from '../components/OrderCard';\nimport { setUserOrders, updateUserOrders } from '../store/actions/user';\nimport LoadingBar from '../components/LoadingBar';\n\nconst Orders = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst user = useSelector(state => state.user);\n\tconst [currPointer, setCurrPointer] = useState();\n\tconst [hasMore, setHasMore] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst [loadingMoreOrders, setLoadingMoreOrders] = useState(false);\n\tconst dispatch = useDispatch();\n\n\t/**\n\t * Formats an order coming from shopify to\n\t * an easier to manipulate version.\n\t * @param {Object} orders\n\t * @returns treated orders.\n\t */\n\tconst formatResults = orders => {\n\t\tconst ordersFormatted = orders.data.data.customer.orders.edges.map(\n\t\t\tel => el.node\n\t\t);\n\n\t\tfor (let i = 0; i < ordersFormatted.length; ++i) {\n\t\t\tconst formattedLineItems = [];\n\n\t\t\tfor (\n\t\t\t\tlet j = 0;\n\t\t\t\tj < ordersFormatted[i].lineItems.edges.length;\n\t\t\t\t++j\n\t\t\t) {\n\t\t\t\tformattedLineItems.push(\n\t\t\t\t\tordersFormatted[i].lineItems.edges[j].node\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tordersFormatted[i].lineItems = formattedLineItems;\n\t\t}\n\n\t\treturn ordersFormatted;\n\t};\n\n\t/**\n\t * Loads newer orders.\n\t */\n\tconst loadNewerOrders = async () => {\n\t\ttry {\n\t\t\tsetLoadingMoreOrders(true);\n\t\t\tconst orders = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetCustomerOrders(\n\t\t\t\t\tauthContext.customerToken,\n\t\t\t\t\t`first: 5, after: \"${currPointer}\"`\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tsetHasMore(orders.data.data.customer.orders.pageInfo.hasNextPage);\n\t\t\tsetCurrPointer(\n\t\t\t\torders.data.data.customer.orders.edges[\n\t\t\t\t\torders.data.data.customer.orders.edges.length - 1\n\t\t\t\t].cursor\n\t\t\t);\n\n\t\t\tconst ordersFormatted = formatResults(orders);\n\n\t\t\tdispatch(updateUserOrders(ordersFormatted));\n\t\t\tsetLoadingMoreOrders(false);\n\t\t} catch (err) {\n\t\t\tsetLoadingMoreOrders(false);\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\t/**\n\t * Gets all user orders.\n\t */\n\tconst getOrders = useCallback(async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst orders = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetCustomerOrders(authContext.customerToken)\n\t\t\t);\n\n\t\t\tsetHasMore(orders.data.data.customer.orders.pageInfo.hasNextPage);\n\t\t\tsetCurrPointer(\n\t\t\t\torders.data.data.customer.orders.edges[\n\t\t\t\t\torders.data.data.customer.orders.edges.length - 1\n\t\t\t\t].cursor\n\t\t\t);\n\n\t\t\tconst ordersFormatted = formatResults(orders);\n\n\t\t\tdispatch(setUserOrders(ordersFormatted));\n\t\t\tsetLoading(false);\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\t//console.log(err);\n\t\t}\n\t}, [authContext.customerToken, dispatch]);\n\n\tuseEffect(() => {\n\t\tgetOrders();\n\t}, [getOrders]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='profile'>\n\t\t\t\t<NavbarVertical />\n\t\t\t\t<div className='auth-form'>\n\t\t\t\t\t<div className='auth-form__field-button  auth-form__field-button--with-title'>\n\t\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\t\t\tMy Orders\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t{hasMore && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{!loadingMoreOrders ? (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-small'\n\t\t\t\t\t\t\t\t\t\tonClick={loadNewerOrders}>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price cart__button-text'>\n\t\t\t\t\t\t\t\t\t\t\tLoad Newer Orders\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<LoadingBar\n\t\t\t\t\t\t\t\t\t\tloading={loadingMoreOrders}\n\t\t\t\t\t\t\t\t\t\tmarginTop='3rem'\n\t\t\t\t\t\t\t\t\t\twidth={150}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<LoadingBar\n\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\tmarginTop='5rem'\n\t\t\t\t\t\t\twidth={150}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{user.orders ? (\n\t\t\t\t\t\t\t\tuser.orders.map((order, index) => (\n\t\t\t\t\t\t\t\t\t<OrderCard key={index} order={order} />\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\t\t\t\t\t-- ...you haven't ordered anything yet :(.\n\t\t\t\t\t\t\t\t\t--\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Orders;\n","import React, { useContext, useReducer, useEffect, useState } from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Layout from '../hoc/Layout';\nimport NavbarVertical from '../components/NavbarVertical';\nimport { createCustomerAddress, updateCustomerAddress } from '../graphql';\nimport axiosInstance from '../axios';\nimport { AuthContext } from '../context/authContext';\nimport { updateUserAddress } from '../store/actions/user';\nimport LoadingBar from '../components/LoadingBar';\n\nconst addressFormReducer = (currentFormState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INITIALIZE':\n\t\t\treturn {\n\t\t\t\t...action.address,\n\t\t\t};\n\t\tcase 'SET_FIELD':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\t[action.field]: action.value,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentFormState;\n\t}\n};\n\nconst addressFields = {\n\tfirstName: '',\n\tlastName: '',\n\tcompany: '',\n\taddress1: '',\n\taddress2: '',\n\tcity: '',\n\tcountry: '',\n\tprovince: '',\n\tzip: '',\n};\n\nconst Address = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst user = useSelector(state => state.user);\n\tconst dispatch = useDispatch();\n\n\tconst [addressForm, dispatchAddressForm] = useReducer(addressFormReducer, {\n\t\t...addressFields,\n\t});\n\tconst [loading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (user.mainAddress)\n\t\t\tdispatchAddressForm({\n\t\t\t\ttype: 'INITIALIZE',\n\t\t\t\taddress: user.mainAddress,\n\t\t\t});\n\t}, [user.mainAddress]);\n\n\t/**\n\t * Updates current user address.\n\t * - If the user has not address, it will attempt to create it.\n\t * - If user has an address, then it will be updated.\n\t * - In both cases, the address is then stored in the 'user' reducer.\n\t * @param {Event} event\n\t * @returns null\n\t */\n\tconst updateAddress = async event => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tsetLoading(true);\n\n\t\t\t// CREATE ADDRESS\n\t\t\tif (!user.mainAddress) {\n\t\t\t\tconst customerAddress = await axiosInstance.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tcreateCustomerAddress(\n\t\t\t\t\t\tauthContext.customerToken,\n\t\t\t\t\t\taddressForm\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tconst {\n\t\t\t\t\tid,\n\t\t\t\t} = customerAddress.data.data.customerAddressCreate.customerAddress;\n\n\t\t\t\tsetLoading(false);\n\t\t\t\tdispatch(updateUserAddress({ ...addressForm, id }));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// ELSE UPDATE\n\t\t\tconst addressId = addressForm.id;\n\t\t\tlet addressWithoutId = {\n\t\t\t\t...addressFields,\n\t\t\t};\n\n\t\t\tfor (let key in addressForm)\n\t\t\t\tif (key !== 'id') addressWithoutId[key] = addressForm[key];\n\n\t\t\tawait axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tupdateCustomerAddress(\n\t\t\t\t\tauthContext.customerToken,\n\t\t\t\t\taddressId,\n\t\t\t\t\taddressWithoutId\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tsetLoading(false);\n\t\t\tdispatch(updateUserAddress({ ...addressWithoutId, id: addressId }));\n\t\t} catch (err) {\n\t\t\t// certainly a connection error\n\t\t\tsetLoading(false);\n\t\t\tconsole.log('Err: ', err);\n\t\t}\n\t};\n\n\t/**\n\t * Sets a form field value.\n\t * @param {Event} event\n\t * @param {String} field\n\t */\n\tconst setField = (event, field) => {\n\t\tdispatchAddressForm({\n\t\t\ttype: 'SET_FIELD',\n\t\t\tfield,\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Sets a form dropdown field value.\n\t * @param {String} value\n\t * @param {String} field\n\t */\n\tconst setFieldDropdown = (value, field) => {\n\t\tdispatchAddressForm({ type: 'SET_FIELD', field, value });\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='profile'>\n\t\t\t\t<NavbarVertical />\n\t\t\t\t<div className='auth-form'>\n\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\t\tMy Address\n\t\t\t\t\t</h2>\n\n\t\t\t\t\t<form className='auth-form__form' onSubmit={updateAddress}>\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--side-by-side'>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='first-name'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tFirst Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='first-name'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\t\t\tvalue={addressForm.firstName}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetField(event, 'firstName')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='last-name'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tLast Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='last-name'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\t\t\tvalue={addressForm.lastName}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetField(event, 'lastName')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='company'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tCompany\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='company'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={addressForm.company}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'company')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='address'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tAddress\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='address'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={addressForm.address1}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'address1')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='additional'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tApartment, suite, etc.\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='additional'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={addressForm.address2}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'address2')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tCity\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='city'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={addressForm.city}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'city')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* COUNTRY */}\n\t\t\t\t\t\t{/* STATE/PROVINCE */}\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--side-by-side'>\n\t\t\t\t\t\t\t<div className='auth-form__field auth-form__field--address'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tCountry\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<CountryDropdown\n\t\t\t\t\t\t\t\t\tclasses='input input__select input__select--address'\n\t\t\t\t\t\t\t\t\tvalue={addressForm.country}\n\t\t\t\t\t\t\t\t\tdefaultOptionLabel={addressForm.country}\n\t\t\t\t\t\t\t\t\tpriorityOptions={['US', 'CA', 'GB', 'AU']}\n\t\t\t\t\t\t\t\t\tonChange={val =>\n\t\t\t\t\t\t\t\t\t\tsetFieldDropdown(val, 'country')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='auth-form__field auth-form__field--address'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tProvince/State\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<RegionDropdown\n\t\t\t\t\t\t\t\t\tclasses='input input__select input__select--address'\n\t\t\t\t\t\t\t\t\tcountry={addressForm.country}\n\t\t\t\t\t\t\t\t\tdefaultOptionLabel={addressForm.province}\n\t\t\t\t\t\t\t\t\tvalue={addressForm.province}\n\t\t\t\t\t\t\t\t\tonChange={val =>\n\t\t\t\t\t\t\t\t\t\tsetFieldDropdown(val, 'province')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='zip'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tPostal/ZIP code\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='zip'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={20}\n\t\t\t\t\t\t\t\tvalue={addressForm.zip}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'zip')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\tonClick={() => {}}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tUpdate My Address\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<LoadingBar width={350} loading={loading} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Address;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Settings from './Settings';\nimport Orders from './Orders';\nimport Address from './Address';\n\nconst Profile = props => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path='/me/address'>\n\t\t\t\t<Address />\n\t\t\t</Route>\n\t\t\t<Route path='/me/orders'>\n\t\t\t\t<Orders />\n\t\t\t</Route>\n\t\t\t<Route path='/me/settings'>\n\t\t\t\t<Settings />\n\t\t\t</Route>\n\t\t\t<Redirect from='/me' to='/me/settings' />\n\t\t</Switch>\n\t);\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport validate from 'validate.js';\n\nimport axiosInstance from '../axios';\nimport { recoverCustomerPassword } from '../graphql';\nimport Layout from '../hoc/Layout';\nimport LoadingBar from '../components/LoadingBar';\n\nconst Forget = props => {\n\tconst history = useHistory();\n\n\tconst [email, setEmail] = useState('');\n\tconst [invalidEmailMessage, setInvalidEmailMessage] = useState();\n\tconst [loading, setLoading] = useState(false);\n\n\t/**\n\t * Checks whether the string 'email' is in\n\t * a valid email format.\n\t * @returns boolean value\n\t */\n\tconst validEmail = () => {\n\t\tconst constraints = {\n\t\t\tfrom: { email: true },\n\t\t};\n\n\t\tconst isValid = validate({ from: email }, constraints);\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Resets current user password.\n\t * - Checks if email input is valid.\n\t * - If the email input is valid, proceeds to\n\t * requesting a recovery email message, which,\n\t * in case there is no one registered with that email,\n\t * throws an error.\n\t * - If all went correctly, redirects user to home page.\n\t * @param {Event} event\n\t */\n\tconst resetPassword = async event => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tif (!validEmail()) throw new Error('This email format is invalid.');\n\n\t\t\tsetInvalidEmailMessage(null);\n\n\t\t\tsetLoading(true);\n\n\t\t\tconst user = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\trecoverCustomerPassword(email)\n\t\t\t);\n\n\t\t\tif (user.data.data.customerRecover.customerUserErrors.length > 0)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Sorry, there is something wrong with that email.'\n\t\t\t\t);\n\n\t\t\thistory.replace('/');\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\tsetInvalidEmailMessage(err.message);\n\t\t\t//console.log('Something went terribly wrong! ', err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='auth-form auth-form__box'>\n\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\tReset My Password\n\t\t\t\t</h2>\n\n\t\t\t\t<form className='auth-form__form' onSubmit={resetPassword}>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='email'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={event => setEmail(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{invalidEmailMessage && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t{invalidEmailMessage}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\tonClick={() => {}}>\n\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar loading={loading} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Forget;\n","import React, { memo } from 'react';\n\nimport Card from '../components/Card';\n\nconst Collection = props => {\n\treturn (\n\t\t<div className='home__featured-section'>\n\t\t\t<h2 className='heading-secondary heading-secondary--dark'>\n\t\t\t\tSearched Results\n\t\t\t</h2>\n\n\t\t\t{props.products.length > 0 ? (\n\t\t\t\t<div className='home__featured'>\n\t\t\t\t\t{props.products.map(product => (\n\t\t\t\t\t\t<Card key={product.id} product={product} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\t-- ...nothing was found :(, please try something else. --\n\t\t\t\t</h3>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default memo(Collection);\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Layout from '../hoc/Layout';\nimport { ClientContext } from '../context/clientContext';\nimport SearchedResults from '../components/SearchedResults';\n\nconst Search = props => {\n\tconst [products, setProducts] = useState();\n\tconst clientContext = useContext(ClientContext);\n\tconst search = useSelector(state => state.search);\n\tconst { collections } = clientContext;\n\n\t/**\n\t * Searches through the collections for a product\n\t * handle that matches the search input.\n\t */\n\tconst getMatchingProducts = useCallback(() => {\n\t\tif (collections && search.searchText !== '') {\n\t\t\tconst collectionProducts = collections.map(\n\t\t\t\tcollection => collection.products\n\t\t\t);\n\n\t\t\tlet allProducts = [];\n\n\t\t\tcollectionProducts.forEach(products => {\n\t\t\t\tallProducts = allProducts.concat(products);\n\t\t\t});\n\n\t\t\tlet restructure = search.searchText.split(' ');\n\t\t\trestructure = restructure.join('-');\n\n\t\t\tconst result = [];\n\t\t\tallProducts.forEach(product => {\n\t\t\t\trestructure.split(' ').forEach(word => {\n\t\t\t\t\t//  If typed word is different than -1, it matches.\n\t\t\t\t\tif (\n\t\t\t\t\t\tproduct.handle\n\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.indexOf(word.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tresult.push(product);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsetProducts(result);\n\t\t}\n\t}, [collections, search.searchText]);\n\n\tuseEffect(() => {\n\t\tgetMatchingProducts();\n\t}, [getMatchingProducts]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t{products && (\n\t\t\t\t<section className='home'>\n\t\t\t\t\t<SearchedResults products={products} />\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</Layout>\n\t);\n};\n\nexport default Search;\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ClientContext } from '../context/clientContext';\nimport Layout from '../hoc/Layout';\n\nconst Policies = props => {\n\tconst [htmlBody, setHtmlBody] = useState(null);\n\tconst [currPolicy, setCurrPolicy] = useState(null);\n\tconst { handle } = useParams();\n\tconst clientContext = useContext(ClientContext);\n\n\t/**\n\t * Sets the page content based on the current page\n\t * 'handle' param.\n\t */\n\tconst setContent = useCallback(() => {\n\t\tconst curr = clientContext.shopPolicies.find(\n\t\t\tpolicy => policy.handle === handle\n\t\t);\n\n\t\tsetHtmlBody(curr.body);\n\t\tsetCurrPolicy(curr);\n\t}, [clientContext.shopPolicies, handle]);\n\n\tuseEffect(() => {\n\t\tif (clientContext.shopPolicies) setContent();\n\t}, [clientContext.shopPolicies, setContent]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<section className='home home--terms'>\n\t\t\t\t<div className='home__featured-section'>\n\t\t\t\t\t{currPolicy && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark medium-margin-bottom'>\n\t\t\t\t\t\t\t\t{currPolicy.title}\n\t\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t\t<div className='home__featured home__featured--terms'>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName='card__description-box-description'\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t__html: htmlBody,\n\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</Layout>\n\t);\n};\n\nexport default Policies;\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ClientContext } from '../context/clientContext';\nimport Layout from '../hoc/Layout';\n\nconst Pages = props => {\n\tconst [htmlBody, setHtmlBody] = useState(null);\n\tconst [currPage, setCurrPage] = useState(null);\n\tconst { handle } = useParams();\n\tconst clientContext = useContext(ClientContext);\n\n\t/**\n\t * Sets the page content based on the current page\n\t * 'handle' param.\n\t */\n\tconst setContent = useCallback(() => {\n\t\tconst curr = clientContext.pages.find(\n\t\t\tpolicy => policy.handle === handle\n\t\t);\n\n\t\tsetHtmlBody(curr.body);\n\t\tsetCurrPage(curr);\n\t}, [clientContext.pages, handle]);\n\n\tuseEffect(() => {\n\t\tif (clientContext.pages) setContent();\n\t}, [clientContext.pages, setContent]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<section className='home home--terms'>\n\t\t\t\t<div className='home__featured-section'>\n\t\t\t\t\t{currPage && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark medium-margin-bottom'>\n\t\t\t\t\t\t\t\t{currPage.title}\n\t\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t\t<div className='home__featured home__featured--terms'>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName='card__description-box-description'\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t__html: htmlBody,\n\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</Layout>\n\t);\n};\n\nexport default Pages;\n","import React, { useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport '../styles/main.scss';\n\nimport Home from './Home';\nimport CollectionProducts from './CollectionProducts';\nimport ProductDetails from './ProductDetails';\nimport ProductDetailsMobile from './ProductDetailsMobile';\nimport Cart from './Cart';\nimport SignUp from './SignUp';\nimport Login from './Login';\nimport NotFound from './NotFound';\nimport Profile from './Profile';\nimport Forget from './Forget';\nimport Search from './Search';\nimport Policies from '../containers/Policies';\nimport Pages from '../containers/Pages';\nimport { AuthContext } from '../context/authContext';\n\nfunction App() {\n\tconst authContext = useContext(AuthContext);\n\n\tlet routes = (\n\t\t<Switch>\n\t\t\t<Route path='/pages/:handle'>\n\t\t\t\t<Pages />\n\t\t\t</Route>\n\t\t\t<Route path='/policy/:handle'>\n\t\t\t\t<Policies />\n\t\t\t</Route>\n\n\t\t\t<Route path='/signup'>\n\t\t\t\t<SignUp />\n\t\t\t</Route>\n\t\t\t<Route path='/login'>\n\t\t\t\t<Login />\n\t\t\t</Route>\n\t\t\t<Route path='/forget'>\n\t\t\t\t<Forget />\n\t\t\t</Route>\n\t\t\t<Route path='/search'>\n\t\t\t\t<Search />\n\t\t\t</Route>\n\t\t\t<Route path='/cart'>\n\t\t\t\t<Cart />\n\t\t\t</Route>\n\t\t\t<Route path='/collection/:handle'>\n\t\t\t\t<CollectionProducts />\n\t\t\t</Route>\n\t\t\t<Route path='/product/:handle'>\n\t\t\t\t{window.innerWidth > 1140 ? (\n\t\t\t\t\t<ProductDetails />\n\t\t\t\t) : (\n\t\t\t\t\t<ProductDetailsMobile />\n\t\t\t\t)}\n\t\t\t</Route>\n\t\t\t<Route path='/'>\n\t\t\t\t<Home />\n\t\t\t</Route>\n\t\t\t<Route path='/404'>\n\t\t\t\t<NotFound />\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n\n\tif (authContext.customerToken)\n\t\troutes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path='/pages/:handle'>\n\t\t\t\t\t<Pages />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/policy/:handle'>\n\t\t\t\t\t<Policies />\n\t\t\t\t</Route>\n\n\t\t\t\t<Route path='/me'>\n\t\t\t\t\t<Profile />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/search'>\n\t\t\t\t\t<Search />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/cart'>\n\t\t\t\t\t<Cart />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/collection/:handle'>\n\t\t\t\t\t<CollectionProducts />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/product/:handle'>\n\t\t\t\t\t{window.innerWidth > 1140 ? (\n\t\t\t\t\t\t<ProductDetails />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ProductDetailsMobile />\n\t\t\t\t\t)}\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/'>\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/404'>\n\t\t\t\t\t<NotFound />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t);\n\n\treturn routes;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\tlineItems: [\n\t\t// variant\n\t\t// quantity: 5,\n\t\t// handle\n\t],\n\n\ttotalPrice: 0,\n};\n\nconst addProductToCheckout = (state, action) => {\n\tconst lineItemsCopy = [...state.lineItems];\n\n\tconst alreadyAdded = lineItemsCopy.findIndex(\n\t\tlineItem => lineItem.id === action.variant.id\n\t);\n\n\tif (alreadyAdded !== -1) {\n\t\tlineItemsCopy[alreadyAdded].quantity += action.quantity;\n\t} else\n\t\tlineItemsCopy.push({\n\t\t\t...action.variant,\n\t\t\tquantity: action.quantity,\n\t\t\tproductTitle: action.productTitle,\n\t\t\thandle: action.handle,\n\t\t});\n\n\treturn {\n\t\ttotalPrice: (state.totalPrice +=\n\t\t\taction.quantity * action.variant.price),\n\t\tlineItems: lineItemsCopy,\n\t};\n};\n\nconst updateProductFromCheckout = (state, action) => {\n\tconst lineItemsCopy = [...state.lineItems];\n\tlet price = 0;\n\n\tconst toUpdate = lineItemsCopy.findIndex(\n\t\tlineItem => lineItem.id === action.variant.id\n\t);\n\n\tif (action.fromItself) lineItemsCopy[toUpdate].quantity = action.quantity;\n\telse lineItemsCopy[toUpdate].quantity += action.quantity;\n\n\tlineItemsCopy.forEach(item => (price += item.quantity * item.price));\n\n\treturn {\n\t\ttotalPrice: price,\n\t\tlineItems: lineItemsCopy,\n\t};\n};\n\nconst removeProductFromCheckout = (state, action) => {\n\tconst lineItemsCopy = [...state.lineItems];\n\tlet price = state.totalPrice;\n\n\tconst toRemove = lineItemsCopy.findIndex(\n\t\tlineItem => lineItem.id === action.variant.id\n\t);\n\n\tprice -= lineItemsCopy[toRemove].quantity * lineItemsCopy[toRemove].price;\n\n\tlineItemsCopy.splice(toRemove, 1);\n\n\treturn {\n\t\ttotalPrice: price,\n\t\tlineItems: lineItemsCopy,\n\t};\n};\n\nconst removeAllProducts = () => {\n\treturn {\n\t\tlineItems: [],\n\t\ttotalPrice: 0,\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_PRODUCT_TO_CHECKOUT:\n\t\t\treturn addProductToCheckout(state, action);\n\t\tcase actionTypes.REMOVE_PRODUCT_FROM_CHECKOUT:\n\t\t\treturn removeProductFromCheckout(state, action);\n\t\tcase actionTypes.UPDATE_PRODUCT_FROM_CHECKOUT:\n\t\t\treturn updateProductFromCheckout(state, action);\n\t\tcase actionTypes.REMOVE_ALL_PRODUCTS_FROM_CHECKOUT:\n\t\t\treturn removeAllProducts();\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\tfirstName: '',\n\tlastName: '',\n\temail: '',\n\tmainAddress: null,\n\torders: null,\n};\n\nconst initializeUserDetails = action => {\n\treturn {\n\t\tfirstName: action.firstName,\n\t\tlastName: action.lastName,\n\t\temail: action.email,\n\t\tmainAddress: action.mainAddress,\n\t};\n};\n\nconst updateUserAddress = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tmainAddress: action.mainAddress,\n\t};\n};\n\nconst updateUserDetails = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tfirstName: action.firstName,\n\t\tlastName: action.lastName,\n\t\temail: action.email,\n\t};\n};\n\nconst setUserOrders = (state, action) => {\n\treturn {\n\t\t...state,\n\t\torders: action.orders.sort((a, b) => {\n\t\t\tconst dateA = new Date(a.processedAt);\n\t\t\tconst dateB = new Date(b.processedAt);\n\n\t\t\treturn dateA < dateB;\n\t\t}),\n\t};\n};\n\nconst updateUserOrders = (state, action) => {\n\treturn {\n\t\t...state,\n\t\torders: state.orders.concat(action.orders).sort((a, b) => {\n\t\t\tconst dateA = new Date(a.processedAt);\n\t\t\tconst dateB = new Date(b.processedAt);\n\n\t\t\treturn dateA < dateB;\n\t\t}),\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.INITIALIZE_USER_DETAILS:\n\t\t\treturn initializeUserDetails(action);\n\t\tcase actionTypes.UPDATE_USER_ADDRESS:\n\t\t\treturn updateUserAddress(state, action);\n\t\tcase actionTypes.UPDATE_USER_DETAILS:\n\t\t\treturn updateUserDetails(state, action);\n\t\tcase actionTypes.SET_USER_ORDERS:\n\t\t\treturn setUserOrders(state, action);\n\t\tcase actionTypes.UPDATE_USER_ORDERS:\n\t\t\treturn updateUserOrders(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\tsearchText: '',\n};\n\nconst setSearchText = action => {\n\treturn {\n\t\tsearchText: action.searchText,\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.SET_SEARCHED_TEXT:\n\t\t\treturn setSearchText(action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\ttoggle: false,\n};\n\nconst toggleMenu = state => {\n\treturn {\n\t\ttoggle: !state.toggle,\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.TOGGLE_MENU:\n\t\t\treturn toggleMenu(state);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nimport ClientContextProvider from './context/clientContext';\nimport AuthContextProvider from './context/authContext';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport checkoutReducer from './store/reducers/checkout';\nimport userReducer from './store/reducers/user';\nimport searchReducer from './store/reducers/search';\nimport menuReducer from './store/reducers/menu';\n\nconst rootReducers = combineReducers({\n\tcheckout: checkoutReducer,\n\tuser: userReducer,\n\tsearch: searchReducer,\n\tmenu: menuReducer,\n});\n\nconst store = createStore(rootReducers);\n\nconst app = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<AuthContextProvider>\n\t\t\t\t<ClientContextProvider>\n\t\t\t\t\t<App />\n\t\t\t\t</ClientContextProvider>\n\t\t\t</AuthContextProvider>\n\t\t</BrowserRouter>\n\t</Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.a170f855.png\";","module.exports = __webpack_public_path__ + \"static/media/Rotating_Product_Banner_Finals_1.fd5134d8.png\";","module.exports = __webpack_public_path__ + \"static/media/Rotating_Product_Banner_Finals_2.27b28cc7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Rotating_Product_Banner_Finals_3.96d424c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Rotating_Product_Banner_Finals_4.b6831e09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sprite.afcd1ab0.svg\";"],"sourceRoot":""}