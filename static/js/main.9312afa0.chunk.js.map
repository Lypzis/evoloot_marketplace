{"version":3,"sources":["graphql.js","axios.js","context/clientContext.js","store/actions/user.js","store/actions/actionTypes.js","context/authContext.js","components/Navbar.js","components/NavbarSticky.js","store/actions/search.js","components/Select.js","store/actions/checkout.js","components/QuantityInput.js","components/LineProduct.js","components/LineProducts.js","components/LoadingBar.js","components/CartDropdown.js","components/Header.js","components/HeaderMobile.js","store/actions/menu.js","components/Footer.js","components/BluredBackground.js","components/CartPanel.js","components/BackToTopButton.js","components/MenuPanel.js","hoc/Layout.js","components/Card.js","components/Carousel.js","components/Collection.js","components/BannerCarousel.js","containers/Home.js","containers/CollectionProducts.js","components/Thumbnail.js","components/Description.js","containers/ProductDetails.js","containers/ProductDetailsMobile.js","components/ShippingCalculator.js","containers/Cart.js","containers/SignUp.js","containers/Login.js","containers/NotFound.js","components/NavbarVertical.js","containers/Settings.js","components/OrderCard.js","containers/Orders.js","containers/Address.js","containers/Profile.js","containers/Forget.js","components/SearchedResults.js","containers/Search.js","containers/Policies.js","containers/Pages.js","containers/App.js","serviceWorker.js","store/reducers/checkout.js","store/reducers/user.js","store/reducers/search.js","store/reducers/menu.js","index.js","assets/images/logo.png","assets/images/Rotating_Product_Banner_Finals_1.png","assets/images/Rotating_Product_Banner_Finals_2.jpg","assets/images/Rotating_Product_Banner_Finals_3.jpg","assets/images/Rotating_Product_Banner_Finals_4.jpg","assets/icons/sprite.svg"],"names":["getCustomerToken","email","password","query","variables","input","updateCustomer","customerAccessToken","firstName","lastName","customer","updateCustomerPassword","recoverCustomerPassword","updateCustomerAddress","addressId","address","id","createCustomerCheckout","lineItems","shippingAddress","allowPartialAddresses","getAvailableShippingRates","updateCheckoutShippingAddress","checkoutId","updateCheckoutEmail","getCustomerOrders","groupBy","getCollectionProducts","handle","queryParam","instance","axios","create","baseURL","process","headers","client","Client","buildClient","storefrontAccessToken","domain","ClientContext","React","createContext","collections","shopPolicies","shopCurrency","currencyRate","code","value","changeCurrency","currency","loadMoreCollectionProducts","pages","ClientContextProvider","props","useState","setCollections","setShopPolicies","setShopCurrency","setPages","currencyRates","setCurrencyRates","setCurrencyRate","history","useHistory","getShopPagesData","a","axiosInstance","post","arr","data","edges","map","el","node","console","log","getCurrencyRate","localCurrencyRate","savedCurrencyRates","localStorage","getItem","dateNow","Math","round","Date","getTime","dateYesterday","JSON","parse","dateAtTime","rates","get","currencies","setItem","stringify","getShopCurrencyData","shop","paymentSettings","currencyCode","getShopPoliciesData","key","policies","push","getAllCollectionsWithProducts","useCallback","treatedCollections","collection","forEach","products","treatCollectionProducts","i","tags","j","k","findIndex","tag","length","reverse","replace","newProducts","e","index","cursor","images","image","altText","src","originalSrc","variants","variant","title","available","availableForSale","price","priceV2","amount","productsArr","collectionByHandle","collectionToAdd","productsTreated","collectionsCopy","Object","assign","concat","useEffect","Provider","children","updateUserDetails","type","updateUserAddress","mainAddress","setUserOrders","orders","updateUserOrders","AuthContext","customerToken","loginError","login","token","logout","userIsOnline","refreshToken","AuthContextProvider","userToken","setUserToken","dispatch","useDispatch","getUserInformation","accessToken","userInfo","defaultAddress","isUserOnline","shopifyCustomerToken","date","expiresAt","logoutHandler","removeItem","loginHandler","customerAccessTokenCreate","memo","authContext","useContext","navTitles","setNavTitles","candidateNewMenu","setCandidateNewMenu","menu","setMenu","clientContext","vertical","hide","changeMenuName","getCollections","col","goToMyAccount","turnToMenu","turnToSubMenu","menuSelected","generatedMenu","className","to","onClick","generateMenu","navTitle","activeClassName","xlinkHref","sprite","setSearchText","searchText","Select","showList","toggleShowList","role","aria-label","selected","setSelected","onButtonClick","prevState","changeSelection","identifier","currentOption","checked","readOnly","htmlFor","onOptionClick","addProductToCheckout","productTitle","quantity","updateProductFromCheckout","fromItself","QuantityInput","productQuantity","setQuantity","inputSize","small","labelSize","inputContainer","inputContainerBig","big","inputContainerFinal","split","join","validateNumber","number","trim","isNaN","onChange","event","target","floor","LineProduct","product","cardCheckout","cardCheckoutImageBox","cardCheckoutImage","cardCheckoutRemoveButton","cardCheckoutRemoveButtonIcon","cardCheckoutDetails","cardTitle","alt","toFixed","checkout","useSelector","state","item","LoadingBar","override","css","style","marginTop","height","width","color","loading","addressFields","company","address1","address2","city","country","province","zip","user","setLoading","createQuickCheckout","variantId","newCheckout","axiosInstace","addressWithoutId","addLineItems","checkoutWithProducts","window","open","webUrl","totalPrice","disabled","search","pathname","useLocation","isSticky","setSticky","element","useRef","handleScroll","current","scrollY","getBoundingClientRect","bottom","addEventListener","removeEventListener","ref","logo","autoFocus","placeholder","preventDefault","goBack","reduce","b","filter","page","policy","href","rel","getFullYear","BluredBackground","menuState","defaultChecked","for","BackToTopButton","goToTop","menuName","setMenuName","hideMenu","changeMenuNameHeader","name","link","customFunction","toggle","Layout","innerWidth","isDesktop","setIsDesktop","handleResize","isMouseOverButton","setIsMouseOverButton","onClickHandler","productVariant","addToCart","noEffect","productDetails","onMouseOver","onMouseOut","addButtons","setAddButtons","naturalSlideWidth","naturalSlideHeight","totalSlides","visibleSlides","isPlaying","orientation","infinite","step","header","innerClassName","queryTag","URLSearchParams","featured","slice","displayedProducts","setDisplayedProducts","setCursor","currArrLength","setCurrArrLength","carouselHeight","setCarouselHeight","carouselWidth","setCarouselWidth","numberOfSlides","setNumberOfSlides","renderProducts","loadMoreProducts","newCursor","adjustElementToScreenSizeChange","renderProductsSorted","productsFormated","sort","publishedAt","filteredProducts","description","sorted","parseFloat","localeCompare","image01","image02","image03","image04","bannerSize","setBannerSize","changeHeight","interval","homeCollections","setHomeCollections","getFeaturedProducts","renderHomeCollections","CollectionProducts","setCollection","useParams","getCollection","incomingCollection","setImage","isVariant","currentSelection","isThereADescription","dangerouslySetInnerHTML","__html","productReducer","currentProductState","action","imageSrc","imageId","relatedProducts","viewed","ProductDetails","useReducer","productChosen","dispatchProduct","retrieveRelatedProducts","currentProduct","productType","saveViewed","newViewed","undefined","find","addedProduct","unshift","retrieveViewed","getProduct","productSelected","Error","setImageSelected","ReactImageMagnify","imageClassName","enlargedImageContainerClassName","enlargedImagePosition","smallImage","isFluidWidth","largeImage","descriptionHtml","ProductDetailsMobile","changeNumberOfSlides","shippingFormReducer","currentFormState","calcLoading","calculateError","trialsCount","availableShippingRates","shippingWasCalculated","field","ShippingCalculator","shippingForm","dispatchShippingForm","calculateShipping","wasItLoaded","shippingRates","lastIncompleteCheckout","setFieldDropdown","classes","priorityOptions","defaultOptionLabel","val","maxLength","setField","rate","Cart","textAreaValue","setTextAreaValue","textAreaCols","setTextAreaCols","createCheckout","customAttributes","updateAttributes","cols","rows","signupFormReducer","username","passwordConfirm","signupFormErrorReducer","passwordIsWithError","emailIsWithError","usernameTaken","emailIsTaken","emailPending","SignUp","signupForm","dispatchSignupForm","passwordError","emailError","emailTakenError","emailPendingError","userNameTakenError","signupFormError","dispatchSignupFormError","validEmail","isValid","validate","from","equalPassword","confirmPassword","equality","validateFields","isEmailValid","isPasswordValid","createdUser","customerCreate","customerUserErrors","errorMessage","message","error","onSubmit","required","minLength","Login","setEmail","setPassword","setLoginError","NotFound","NavbarVertical","isBiggerWindow","setIsBiggerWindow","isSmallerWindow","setIsSmallerWindow","Settings","distpatch","setLastName","setFirstName","setPasswordConfirm","passwordNotEqual","setPasswordNotEqual","emailNotValid","setEmailNotValid","emailTaken","setEmailTaken","loadingSettings","setLoadingSettings","loadingPassword","setLoadingPassword","retrieveCustomerData","updatePassword","res","customerUpdate","updateSettings","OrderCard","order","processedAt","toLocaleDateString","weekday","year","month","day","toLocaleTimeString","lineItem","sku","subtotalPriceV2","totalShippingPriceV2","totalTaxV2","totalRefundedV2","totalPriceV2","Orders","currPointer","setCurrPointer","hasMore","setHasMore","loadingMoreOrders","setLoadingMoreOrders","formatResults","ordersFormatted","formattedLineItems","loadNewerOrders","pageInfo","hasNextPage","getOrders","addressFormReducer","Address","addressForm","dispatchAddressForm","updateAddress","customerAddress","customerAddressCreate","Profile","path","Forget","invalidEmailMessage","setInvalidEmailMessage","resetPassword","customerRecover","Search","setProducts","getMatchingProducts","collectionProducts","allProducts","restructure","result","word","toLowerCase","indexOf","SearchedResults","Policies","htmlBody","setHtmlBody","currPolicy","setCurrPolicy","setContent","curr","body","Pages","currPage","setCurrPage","App","routes","Boolean","location","hostname","match","initialState","lineItemsCopy","alreadyAdded","toUpdate","removeProductFromCheckout","toRemove","splice","reducer","initializeUserDetails","toggleMenu","rootReducers","combineReducers","checkoutReducer","userReducer","searchReducer","menuReducer","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.9312afa0.chunk.js","sourcesContent":["/**\n * Creates a graphql query for Creating a new user.\n * @param {String} firstName\n * @param {String} lastName\n * @param {String} email\n * @param {String} password\n * @returns graphql query body\n */\nexport const createUser = (firstName, lastName, email, password) => {\n  return {\n    query: `\n\t\t\t\t\tmutation customerCreate($input: CustomerCreateInput!) {\n\t\t\t\t\t\tcustomerCreate(input: $input) {\n\t\t\t\t\t\t\tcustomer {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n    variables: {\n      input: {\n        firstName,\n        lastName,\n        email,\n        password,\n      },\n    },\n  };\n};\n\n/**\n * Creates a graphql query to get the current user token.\n * @param {String} email\n * @param {String} password\n * @returns graphql query body\n */\nexport const getCustomerToken = (email, password) => {\n  return {\n    query: `\n\t\t\t\t\tmutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {\n\t\t\t\t\t\tcustomerAccessTokenCreate(input: $input) {\n\t\t\t\t\t\t\tcustomerAccessToken {\n\t\t\t\t\t\t\t\taccessToken\n\t\t\t\t\t\t\t\texpiresAt\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n    variables: {\n      input: {\n        email,\n        password,\n      },\n    },\n  };\n};\n\n/**\n * Creates a graphql query to update the current user data.\n * - It does not update password.\n * @param {String} customerAccessToken\n * @param {String} firstName\n * @param {String} lastName\n * @param {String} email\n * @returns graphql query body\n */\nexport const updateCustomer = (\n  customerAccessToken,\n  firstName,\n  lastName,\n  email\n) => {\n  return {\n    query: `\n\t\t\t\t\tmutation customerUpdate($customerAccessToken: String!, $customer: CustomerUpdateInput!) {\n\t\t\t\t\t\tcustomerUpdate(customerAccessToken: $customerAccessToken, customer: $customer) {\n\t\t\t\t\t\t\tcustomer {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerAccessToken {\n\t\t\t\t\t\t\t\taccessToken\n\t\t\t\t\t\t\t\texpiresAt\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n    variables: {\n      customerAccessToken,\n      customer: {\n        firstName,\n        lastName,\n        email,\n      },\n    },\n  };\n};\n\n/**\n * Creates a graphql query to update current user password.\n * @param {String} customerAccessToken\n * @param {String} password\n * @returns graphql query body\n */\nexport const updateCustomerPassword = (customerAccessToken, password) => {\n  return {\n    query: `\n\t\t\t\t\tmutation customerUpdate($customerAccessToken: String!, $customer: CustomerUpdateInput!) {\n\t\t\t\t\t\tcustomerUpdate(customerAccessToken: $customerAccessToken, customer: $customer) {\n\t\t\t\t\t\t\tcustomer {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerAccessToken {\n\t\t\t\t\t\t\t\taccessToken\n\t\t\t\t\t\t\t\texpiresAt\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n    variables: {\n      customerAccessToken,\n      customer: {\n        password,\n      },\n    },\n  };\n};\n\n/**\n * Creates a graphql query for recovering user password.\n * @param {String} email\n * @returns graphql query body\n */\nexport const recoverCustomerPassword = email => {\n  return {\n    query: `\n\t\t\t\t\tmutation customerRecover($email: String!) {\n\t\t\t\t\t\tcustomerRecover(email: $email) {\n\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n    variables: {\n      email,\n    },\n  };\n};\n\n/**\n * Creates a graphql query for retrieving user information.\n * @param {String} customerAccessToken\n * @returns graphql query body\n */\nexport const getUserSettings = customerAccessToken => {\n  return {\n    query: `\n\t\t\t\t\t{\n\t\t\t\t\t\tcustomer (customerAccessToken: \"${customerAccessToken}\"){\n\t\t\t\t\t\t\tfirstName\n\t\t\t\t\t\t\tlastName\n\t\t\t\t\t\t\temail\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n  };\n};\n\n/**\n * Creates a graphql query for retrieving user information\n * along with his default address.\n * @param {String} customerAccessToken\n * @returns graphql query body\n */\nexport const getUserSettingsAndAddress = customerAccessToken => {\n  return {\n    query: `\n\t\t\t\t\t{\n\t\t\t\t\t\tcustomer (customerAccessToken: \"${customerAccessToken}\"){\n\t\t\t\t\t\t\tfirstName\n\t\t\t\t\t\t\tlastName\n\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\tdefaultAddress{\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tfirstName\n\t\t\t\t\t\t\t\tlastName\n\t\t\t\t\t\t\t\tcompany\n\t\t\t\t\t\t\t\taddress1\n\t\t\t\t\t\t\t\taddress2\n\t\t\t\t\t\t\t\tcity\n\t\t\t\t\t\t\t\tcountry\n\t\t\t\t\t\t\t\tprovince\n\t\t\t\t\t\t\t\tzip\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n  };\n};\n\n/**\n * Creates a graphql query to create user address.\n * @param {String} customerAccessToken\n * @param {Object} address\n * @returns graphql query body\n */\nexport const createCustomerAddress = (customerAccessToken, address) => {\n  return {\n    query: `\n\t\t\t\t\tmutation customerAddressCreate($customerAccessToken: String!, $address: MailingAddressInput!) {\n\t\t\t\t\t\tcustomerAddressCreate(customerAccessToken: $customerAccessToken, address: $address) {\n\t\t\t\t\t\t\tcustomerAddress {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n    variables: {\n      customerAccessToken,\n      address,\n    },\n  };\n};\n\n/**\n * Creates a graphql query for updating the user default address.\n * @param {String} customerAccessToken\n * @param {String} addressId\n * @param {Object} address\n * @returns graphql query body\n */\nexport const updateCustomerAddress = (\n  customerAccessToken,\n  addressId,\n  address\n) => {\n  return {\n    query: `\n\t\t\t\t\tmutation customerAddressUpdate($customerAccessToken: String!, $id: ID!, $address: MailingAddressInput!) {\n\t\t\t\t\t\tcustomerAddressUpdate(customerAccessToken: $customerAccessToken, id: $id, address: $address) {\n\t\t\t\t\t\t\tcustomerAddress {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcustomerUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n    variables: {\n      customerAccessToken,\n      id: addressId,\n      address,\n    },\n  };\n};\n\n/**\n * Creates a graphql query for the checkout.\n * @param {Array} lineItems\n * @param {Object} shippingAddress\n * @param {String} email\n * @returns graphql query body\n */\nexport const createCustomerCheckout = (lineItems, shippingAddress, email) => {\n  return {\n    query: `\t \n\t\t\t\tmutation checkoutCreate($input: CheckoutCreateInput!) {\n\t\t\t\t\tcheckoutCreate(input: $input) {\n\t\t\t\t\tcheckout {\n\t\t\t\t\t\tid\n\t\t\t\t\t}\n\t\t\t\t\tcheckoutUserErrors {\n\t\t\t\t\t\tcode\n\t\t\t\t\t\tfield\n\t\t\t\t\t\tmessage\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n    variables: {\n      input: {\n        allowPartialAddresses: true,\n        email,\n        lineItems,\n        shippingAddress,\n      },\n    },\n  };\n};\n\n/**\n * Creates a graphql query to retrieve available shipping rates\n * for the last created checkout.\n * @param {String} customerAccessToken\n * @returns graphql query body\n */\nexport const getAvailableShippingRates = customerAccessToken => {\n  return {\n    query: `\t \n\t\t\t\t{\n\t\t\t\t\tcustomer (customerAccessToken: \"${customerAccessToken}\"){\n\t\t\t\t\t\tlastIncompleteCheckout {\n\t\t\t\t\t\t\tavailableShippingRates {\n\t\t\t\t\t\t\t\tready\n\t\t\t\t\t\t\t\tshippingRates {\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tpriceV2 {\n\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n  };\n};\n\n/**\n * Creates a graphql query for updating a checkout shipping address.\n * @param {Object} shippingAddress\n * @param {String} checkoutId\n * @returns graphql query body\n */\nexport const updateCheckoutShippingAddress = (shippingAddress, checkoutId) => {\n  return {\n    query: `\n\t\t\t\t\tmutation checkoutShippingAddressUpdateV2($shippingAddress: MailingAddressInput!, $checkoutId: ID!) {\n\t\t\t\t\t\tcheckoutShippingAddressUpdateV2(shippingAddress: $shippingAddress, checkoutId: $checkoutId) {\n\t\t\t\t\t\t\tcheckout {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcheckoutUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n    variables: {\n      shippingAddress,\n      checkoutId,\n    },\n  };\n};\n\n/**\n * Creates a graphql query for updating a checkout email.\n * @param {String} email\n * @param {String} checkoutId\n * @returns graphql query body\n */\nexport const updateCheckoutEmail = (email, checkoutId) => {\n  return {\n    query: `\n\t\t\t\t\tmutation checkoutEmailUpdateV2($checkoutId: ID!, $email: String!) {\n\t\t\t\t\t\tcheckoutEmailUpdateV2(checkoutId: $checkoutId, email: $email) {\n\t\t\t\t\t\t\tcheckout {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcheckoutUserErrors {\n\t\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                `,\n    variables: {\n      email,\n      checkoutId,\n    },\n  };\n};\n\n/**\n * Creates a graphql query to get the user orders.\n * @param {String} customerAccessToken\n * @param {String} groupBy graphql connections\n * @returns graphql query body\n */\nexport const getCustomerOrders = (\n  customerAccessToken,\n  groupBy = 'first: 5'\n) => {\n  return {\n    query: `\n\t\t\t\t\t{\n\t\t\t\t\t\tcustomer (customerAccessToken: \"${customerAccessToken}\"){\n\t\t\t\t\t\t\torders(${groupBy}) {\n\t\t\t\t\t\t\t\tpageInfo { \n\t\t\t\t\t\t\t\t\thasNextPage \n\t\t\t\t\t\t\t\t\thasPreviousPage\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\tprocessedAt\n\t\t\t\t\t\t\t\t\t\tsuccessfulFulfillments{\n\t\t\t\t\t\t\t\t\t\t\tfulfillmentLineItems(first:100){\n\t\t\t\t\t\t\t\t\t\t        edges {\n\t\t\t\t\t\t\t\t\t\t            node {\n\t\t\t\t\t\t\t\t\t\t                quantity\n\t\t\t\t\t\t\t\t\t\t            }\n\t\t\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t\t\ttrackingInfo{\n\t\t\t\t\t\t\t\t\t\t\t\tnumber\n\t\t\t\t\t\t\t\t\t\t\t\turl\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlineItems(first: 100) {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsku\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tproduct{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpriceV2{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tquantity\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsubtotalPriceV2{\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttotalShippingPriceV2 {\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttotalPriceV2{\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttotalRefundedV2 {\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttotalTaxV2 {\n\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t`,\n  };\n};\n\n/**\n * Creates a graphql query to get the shop policies.\n * @returns graphql query body\n */\nexport const getShopPolicies = () => {\n  return {\n    query: `\n\t\t\t\t\t{\n\t\t\t\t\t\tshop {\n\t\t\t\t\t\t\tprivacyPolicy {\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trefundPolicy {\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttermsOfService{\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t`,\n  };\n};\n\n/**\n * Creates a graphql query to get the shop currency.\n * @returns graphql query body\n */\nexport const getShopCurrency = () => {\n  return {\n    query: `\n\t\t\t\t\t{\n\t\t\t\t\t\tshop {\n\t\t\t\t\t\t\tpaymentSettings {\n\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t`,\n  };\n};\n\n/**\n * Creates a graphql query to get the shop pages.\n * @returns graphql query body\n */\nexport const getShopPages = () => {\n  return {\n    query: `\t \n\t\t\t\t\t{\n\t\t\t\t\t\tpages(first:100) {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t`,\n  };\n};\n\n/**\n * Creates a graphql query to get products from a collection.\n * @param {String} handle\n * @param {String} queryParam e.g first:20, after: \"eyJsYXN0X2lkIjo1ODUxODk5NDYxNzk0LCJsYXN0X3ZhbHVlIjoiMCJ9\"\n * default is 'first: 20'\n * @returns graphql query body\n */\nexport const getCollectionProducts = (handle, queryParam) => {\n  return {\n    query: `\n\t\t\t\t{ \n\t\t\t\t\tcollectionByHandle (handle: \"${handle}\") {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tproducts(${queryParam ? queryParam : 'first: 20'}) {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tavailableForSale\n\t\t\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\t\t\tpublishedAt\n\t\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\t\tdescriptionHtml\n\t\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\t\tonlineStoreUrl\n\t\t\t\t\t\t\t\t\tproductType\n\t\t\t\t\t\t\t\t\ttags\n\t\t\t\t\t\t\t\t\timages(first: 100) {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\toptions {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\tvalues\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvariants(first: 100) {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\tavailableForSale\n\t\t\t\t\t\t\t\t\t\t\t\trequiresShipping\n\t\t\t\t\t\t\t\t\t\t\t\tsku\n\t\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tpriceV2 {\n\t\t\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n  };\n};\n\n/**\n * Creates a graphql query to get all collection along with some of their products.\n * @returns graphql query body\n */\nexport const getAllCollectionsAndProducts = () => {\n  return {\n    query: `\n\t\t\t\t{ \n\t\t\t\t\tcollections(first:100)  {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\tdescriptionHtml\n\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\t\t\timage{\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tproducts(first: 20) {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\tavailableForSale\n\t\t\t\t\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\t\t\t\t\tpublishedAt\n\t\t\t\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\t\t\t\tdescriptionHtml\n\t\t\t\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\t\t\t\tonlineStoreUrl\n\t\t\t\t\t\t\t\t\t\t\tproductType\n\t\t\t\t\t\t\t\t\t\t\ttags\n\t\t\t\t\t\t\t\t\t\t\timages(first: 100) {\n\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\toptions {\n\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t\tvalues\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvariants(first: 100) {\n\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tavailableForSale\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequiresShipping\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsku\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toriginalSrc\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpriceV2 {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n  };\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  // store url\n  baseURL: process.env.REACT_APP_STORE_URL,\n  // key\n  headers: {\n    'X-Shopify-Storefront-Access-Token': process.env.REACT_APP_STORE_KEY,\n  },\n});\n\nexport default instance;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Client from 'shopify-buy';\nimport { useHistory } from 'react-router-dom';\nimport {\n  getShopPolicies,\n  getShopPages,\n  getShopCurrency,\n  getCollectionProducts,\n  getAllCollectionsAndProducts,\n} from '../graphql';\nimport axiosInstance from '../axios';\n\nconst client = Client.buildClient({\n  storefrontAccessToken: '22244a0434741a7f12f81ea49a794d3b',\n  domain: 'evoloot-marketplace-dev.myshopify.com',\n});\n\nexport const ClientContext = React.createContext({\n  client: null,\n  collections: null,\n  shopPolicies: null,\n  shopCurrency: null,\n  currencyRate: { code: 'USD', value: 1 },\n  changeCurrency: currency => {},\n  loadMoreCollectionProducts: () => {},\n  pages: null,\n});\n\nconst ClientContextProvider = props => {\n  const [collections, setCollections] = useState(null);\n  const [shopPolicies, setShopPolicies] = useState(null);\n  const [shopCurrency, setShopCurrency] = useState(null);\n  const [pages, setPages] = useState(null);\n  const [currencyRates, setCurrencyRates] = useState(null);\n  const [currencyRate, setCurrencyRate] = useState({ code: 'USD', value: 1 });\n  const history = useHistory();\n\n  /**\n   * Get the shop pages.\n   */\n  const getShopPagesData = async () => {\n    try {\n      const pages = await axiosInstance.post(\n        '/api/graphql.json',\n        getShopPages()\n      );\n\n      const arr = pages.data.data.pages.edges.map(el => {\n        return { ...el.node };\n      });\n\n      setPages(arr);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /**\n   * Get currency rates.\n   * - Will attempt to get from local storage first, verifying if it is not older\n   * than 1 day, in which case, will request for the today's rates, and replace them.\n   */\n  const getCurrencyRate = async () => {\n    try {\n      let localCurrencyRate = null;\n      let currencies;\n\n      const savedCurrencyRates = localStorage.getItem('currencyRates');\n\n      const dateNow = Math.round(new Date().getTime() / 1000);\n      const dateYesterday = dateNow - 24 * 3600;\n\n      if (savedCurrencyRates)\n        localCurrencyRate = JSON.parse(savedCurrencyRates);\n\n      if (\n        localCurrencyRate &&\n        localCurrencyRate.dateAtTime >= dateYesterday &&\n        localCurrencyRate.rates\n      ) {\n        console.log('currency up to date');\n\n        setCurrencyRates(localCurrencyRate.rates);\n      } else {\n        currencies = await axiosInstance.get(\n          'https://proxy.cors.sh/https://open.exchangerate-api.com/v6/latest'\n        );\n\n        console.log(currencies);\n\n        const rates = currencies?.data?.rates ?? '';\n\n        localCurrencyRate = {\n          dateAtTime: dateNow,\n          rates,\n        };\n\n        localStorage.setItem(\n          'currencyRates',\n          JSON.stringify(localCurrencyRate)\n        );\n\n        setCurrencyRates(rates);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /**\n   * Changes the current active currency.\n   * @param {String} currency\n   */\n  const changeCurrency = currency => {\n    setCurrencyRate({ code: currency, value: currencyRates[currency] });\n  };\n\n  const getShopCurrencyData = async () => {\n    try {\n      const currency = await axiosInstance.post(\n        '/api/graphql.json',\n        getShopCurrency()\n      );\n\n      setShopCurrency(currency.data.data.shop.paymentSettings.currencyCode);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /**\n   * Gets the shop policies.\n   */\n  const getShopPoliciesData = async () => {\n    try {\n      const arr = [];\n\n      const policies = await axiosInstance.post(\n        '/api/graphql.json',\n        getShopPolicies()\n      );\n\n      for (let key in policies.data.data.shop) {\n        arr.push(policies.data.data.shop[key]);\n      }\n\n      setShopPolicies(arr);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /**\n   * Get all the collections along with some of their products.\n   * - default amount of products is 20.\n   */\n  const getAllCollectionsWithProducts = useCallback(async () => {\n    try {\n      const collections = await axiosInstance.post(\n        '/api/graphql.json',\n        getAllCollectionsAndProducts()\n      );\n\n      const treatedCollections = collections.data.data.collections.edges.map(\n        collection => collection.node\n      );\n\n      treatedCollections.forEach(collection => {\n        collection.products = treatCollectionProducts(\n          collection.products.edges\n        );\n      });\n\n      // Get available tags from products and place them into the collection\n      for (let i = 0; i < treatedCollections.length; ++i) {\n        treatedCollections[i].tags = [];\n\n        for (let j = 0; j < treatedCollections[i].products.length; ++j) {\n          for (\n            let k = 0;\n            k < treatedCollections[i].products[j].tags.length;\n            ++k\n          ) {\n            const alreadyThere = treatedCollections[i].tags.findIndex(\n              tag => tag === treatedCollections[i].products[j].tags[k]\n            );\n\n            if (alreadyThere === -1) {\n              treatedCollections[i].tags.push(\n                treatedCollections[i].products[j].tags[k]\n              );\n            }\n          }\n        }\n      }\n\n      setCollections(treatedCollections.reverse());\n    } catch (err) {\n      history.replace('/*');\n    }\n  }, [history]);\n\n  /**\n   * Reestructures the products array data.\n   * @param {Array} products\n   * @returns Array of products\n   */\n  const treatCollectionProducts = products => {\n    const newProducts = products.map((e, index) => {\n      e.node.cursor = products[products.length - 1].cursor;\n\n      return e.node;\n    });\n\n    // treat images\n    newProducts.forEach(e => {\n      const images = e.images.edges.map(image => {\n        return {\n          id: image.node.id,\n          altText: image.node?.altText,\n          src: image.node?.originalSrc,\n        };\n      });\n\n      e.images = images;\n    });\n\n    // treat variants\n    newProducts.forEach(e => {\n      const variants = e.variants.edges.map(variant => {\n        return {\n          id: variant.node.id,\n          title: variant.node?.title,\n          available: variant.node?.availableForSale,\n          price: variant.node.priceV2?.amount,\n          image: {\n            id: variant.node.image?.id,\n            altText: variant.node.image?.altText,\n            src: variant.node.image?.originalSrc,\n          },\n        };\n      });\n\n      e.variants = variants;\n    });\n\n    return newProducts;\n  };\n\n  /**\n   * Add more products to a collection, if available.\n   * @param {String} handle\n   * @param {String} queryParam\n   * @returns cursor of the last product brought.\n   */\n  const loadMoreCollectionProducts = async (handle, queryParam = null) => {\n    try {\n      const products = await axiosInstance.post(\n        '/api/graphql.json',\n        getCollectionProducts(handle, queryParam)\n      );\n\n      const productsArr = products.data.data.collectionByHandle.products.edges;\n\n      if (productsArr.length > 0) {\n        const cursor =\n          productsArr[\n            products.data.data.collectionByHandle.products.edges.length - 1\n          ].cursor;\n\n        const collectionToAdd = collections.findIndex(e => e.handle === handle);\n\n        const productsTreated = treatCollectionProducts(productsArr);\n\n        let collectionsCopy = Object.assign(collections);\n\n        if (!queryParam) {\n          collectionsCopy = Object.assign(collections);\n\n          collectionsCopy[collectionToAdd].products =\n            collectionsCopy[collectionToAdd].products.concat(productsTreated);\n\n          setCollections(collectionsCopy);\n        } else {\n          collectionsCopy = Object.assign(collections);\n\n          collectionsCopy[collectionToAdd].products =\n            collectionsCopy[collectionToAdd].products.concat(productsTreated);\n\n          setCollections(collectionsCopy);\n        }\n\n        return { cursor, length: productsArr.length };\n      }\n\n      return null;\n    } catch (err) {\n      history.replace('/*');\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    getAllCollectionsWithProducts();\n    getShopPoliciesData();\n    getShopPagesData();\n    getShopCurrencyData();\n    getCurrencyRate();\n  }, [getAllCollectionsWithProducts]);\n\n  return (\n    <ClientContext.Provider\n      value={{\n        client,\n        collections,\n        pages,\n        shopPolicies,\n        shopCurrency,\n        currencyRate,\n        changeCurrency,\n        loadMoreCollectionProducts,\n      }}\n    >\n      {props.children}\n    </ClientContext.Provider>\n  );\n};\n\nexport default ClientContextProvider;\n","import * as actionTypes from './actionTypes';\n\nexport const initializeUserDetails = (\n\tfirstName,\n\tlastName,\n\temail,\n\tmainAddress\n) => {\n\treturn {\n\t\ttype: actionTypes.INITIALIZE_USER_DETAILS,\n\t\tfirstName,\n\t\tlastName,\n\t\temail,\n\t\tmainAddress,\n\t};\n};\n\nexport const updateUserDetails = (firstName, lastName, email) => {\n\treturn {\n\t\ttype: actionTypes.UPDATE_USER_DETAILS,\n\t\tfirstName,\n\t\tlastName,\n\t\temail,\n\t};\n};\n\nexport const updateUserAddress = mainAddress => {\n\treturn {\n\t\ttype: actionTypes.UPDATE_USER_ADDRESS,\n\t\tmainAddress,\n\t};\n};\n\nexport const setUserOrders = orders => {\n\treturn {\n\t\ttype: actionTypes.SET_USER_ORDERS,\n\t\torders,\n\t};\n};\n\nexport const updateUserOrders = orders => {\n\treturn {\n\t\ttype: actionTypes.UPDATE_USER_ORDERS,\n\t\torders,\n\t};\n};\n","export const ADD_PRODUCT_TO_CHECKOUT = 'ADD_PRODUCT_TO_CHECKOUT';\nexport const REMOVE_PRODUCT_FROM_CHECKOUT = 'REMOVE_PRODUCT_FROM_CHECKOUT';\nexport const UPDATE_PRODUCT_FROM_CHECKOUT = 'UPDATE_PRODUCT_FROM_CHECKOUT';\nexport const REMOVE_ALL_PRODUCTS_FROM_CHECKOUT =\n\t'REMOVE_ALL_PRODUCTS_FROM_CHECKOUT';\n\nexport const INITIALIZE_USER_DETAILS = 'INITIALIZE_USER_DETAILS';\nexport const UPDATE_USER_DETAILS = 'UPDATE_USER_DETAILS';\nexport const UPDATE_USER_ADDRESS = 'UPDATE_USER_ADDRESS';\nexport const SET_USER_ORDERS = 'SET_USER_ORDERS';\nexport const UPDATE_USER_ORDERS = 'UPDATE_USER_ORDERS';\n\nexport const SET_SEARCHED_TEXT = 'SET_SEARCHED_TEXT';\n\nexport const TOGGLE_MENU = 'TOGGLE_MENU';\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { getUserSettingsAndAddress } from '../graphql';\nimport axiosInstance from '../axios';\nimport { initializeUserDetails } from '../store/actions/user';\n\nexport const AuthContext = React.createContext({\n\tcustomerToken: null,\n\tloginError: false,\n\tlogin: async token => {},\n\tlogout: async () => {},\n\tuserIsOnline: () => {},\n\trefreshToken: customerToken => {},\n});\n\nconst AuthContextProvider = props => {\n\tconst [userToken, setUserToken] = useState();\n\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\n\t/**\n\t * Gets current user information and stores\n\t * it at the reducer.\n\t */\n\tconst getUserInformation = useCallback(\n\t\tasync accessToken => {\n\t\t\ttry {\n\t\t\t\tconst userInfo = await axiosInstance.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tgetUserSettingsAndAddress(accessToken)\n\t\t\t\t);\n\n\t\t\t\tconst { customer } = userInfo.data.data;\n\n\t\t\t\tdispatch(\n\t\t\t\t\tinitializeUserDetails(\n\t\t\t\t\t\tcustomer.firstName,\n\t\t\t\t\t\tcustomer.lastName,\n\t\t\t\t\t\tcustomer.email,\n\t\t\t\t\t\tcustomer.defaultAddress\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\t/**\n\t * Retrieve user token and get user information.\n\t * - verifies if the token is stored at the local storage.\n\t * - If there is a token, verify its expiration date.\n\t * - If both token and expiration date are ok, set user token and\n\t * retrieve his information.\n\t */\n\tconst isUserOnline = useCallback(async () => {\n\t\tlet token = null;\n\n\t\tconst shopifyCustomerToken = localStorage.getItem(\n\t\t\t'shopifyCustomerToken'\n\t\t);\n\n\t\tif (shopifyCustomerToken) token = JSON.parse(shopifyCustomerToken);\n\n\t\tif (token) {\n\t\t\tconst date = new Date();\n\t\t\tconst expiresAt = new Date(token.expiresAt);\n\n\t\t\tif (!(date > expiresAt)) {\n\t\t\t\tsetUserToken(token.accessToken);\n\n\t\t\t\t// ALSO GET AND FILL REDUCER WITH CUSTOMER ADDRESS AND DETAILS\n\t\t\t\tawait getUserInformation(token.accessToken);\n\t\t\t}\n\t\t}\n\t}, [getUserInformation]);\n\n\tuseEffect(() => {\n\t\tisUserOnline();\n\t}, [isUserOnline]);\n\n\t/**\n\t * Logs the user out.\n\t * - Deletes stored user token and sends user to home page.\n\t */\n\tconst logoutHandler = async () => {\n\t\tsetUserToken(null);\n\t\tlocalStorage.removeItem('shopifyCustomerToken');\n\t\thistory.replace('/');\n\t};\n\n\t/**\n\t * Replace or create a new user token.\n\t * @param {Object} customerToken\n\t */\n\tconst refreshToken = customerToken => {\n\t\tconst {\n\t\t\tcustomerAccessToken,\n\t\t} = customerToken.data.data.customerAccessTokenCreate;\n\n\t\tlocalStorage.setItem(\n\t\t\t'shopifyCustomerToken',\n\t\t\tJSON.stringify(customerAccessToken)\n\t\t);\n\n\t\tsetUserToken(customerAccessToken.accessToken);\n\t};\n\n\t/**\n\t * Logs in user.\n\t * - set current token then retrieves user information.\n\t * @param {String} token\n\t */\n\tconst loginHandler = async token => {\n\t\ttry {\n\t\t\tsetUserToken(token);\n\t\t\tawait getUserInformation(token);\n\t\t} catch (err) {\n\t\t\t//console.log(err);\n\t\t\t// else connection error\n\t\t}\n\t};\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\tcustomerToken: userToken,\n\t\t\t\trefreshToken,\n\t\t\t\tlogin: loginHandler,\n\t\t\t\tlogout: logoutHandler,\n\t\t\t\tuserIsOnline: isUserOnline,\n\t\t\t}}>\n\t\t\t{props.children}\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport default AuthContextProvider;\n","import React, {\n  Fragment,\n  memo,\n  useContext,\n  useEffect,\n  useCallback,\n  useState,\n} from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { ClientContext } from '../context/clientContext';\nimport sprite from '../assets/icons/sprite.svg';\nimport { AuthContext } from '../context/authContext';\n\nconst Navbar = props => {\n  const authContext = useContext(AuthContext);\n  const [navTitles, setNavTitles] = useState([]);\n  const [candidateNewMenu, setCandidateNewMenu] = useState([]);\n  const [menu, setMenu] = useState([]);\n  const clientContext = useContext(ClientContext);\n  const { collections } = clientContext;\n  const history = useHistory();\n  const { vertical, hide, changeMenuName } = props;\n\n  const getCollections = useCallback(() => {\n    if (collections) {\n      const navTitles = collections.map(col => {\n        return { title: col.title, handle: col.handle, tags: col.tags };\n      });\n\n      setNavTitles(navTitles);\n    }\n  }, [collections]);\n\n  const logout = async () => {\n    try {\n      props.hide();\n      await authContext.logout();\n    } catch (err) {\n      // connection error\n      console.log('D:', err);\n    }\n  };\n\n  const goToMyAccount = async () => {\n    props.hide();\n    history.push('/me');\n  };\n\n  const turnToMenu = useCallback(() => {\n    getCollections();\n    changeMenuName();\n  }, [getCollections, changeMenuName]);\n\n  const turnToSubMenu = useCallback(\n    menuSelected => {\n      changeMenuName(\n        menuSelected.title,\n        `/collection/${menuSelected.handle}`,\n        turnToMenu\n      );\n\n      const generatedMenu = menuSelected.tags.map((tag, index) => (\n        <li className='navbar__list-item' key={index}>\n          <div className='navbar__title-container'>\n            <NavLink\n              to={`/collection/${menuSelected.handle}?tag=${tag}`}\n              className='paragraph navbar-vertical__link navbar-vertical__link--menu menu__link'\n              onClick={hide}\n            >\n              {tag}\n            </NavLink>\n          </div>\n        </li>\n      ));\n\n      setCandidateNewMenu(generatedMenu);\n    },\n    [changeMenuName, hide, turnToMenu]\n  );\n\n  // menu needs to become state\n  const generateMenu = useCallback(\n    (menu = navTitles) => {\n      const generatedMenu = menu.map((navTitle, index) => {\n        return (\n          <li className='navbar__list-item' key={index}>\n            {vertical ? (\n              <div className='navbar__title-container'>\n                {navTitle.tags.length > 0 ? (\n                  <p\n                    className='paragraph navbar-vertical__link navbar-vertical__link--menu menu__link'\n                    onClick={() => turnToSubMenu(navTitle)}\n                  >\n                    {navTitle.title}\n                  </p>\n                ) : (\n                  <NavLink\n                    to={`/collection/${navTitle.handle}`}\n                    className='paragraph navbar-vertical__link navbar-vertical__link--menu menu__link'\n                    activeClassName=' navbar-vertical__link--active menu__link'\n                    onClick={hide}\n                  >\n                    {navTitle.title}\n                  </NavLink>\n                )}\n                {/* <button>{'>'}</button> */}\n                <ol className='navbar__link-hidden-list'>\n                  {navTitle.tags.map(tag => {\n                    return (\n                      <li\n                        key={tag}\n                        className='navbar__link-hidden-list-item'\n                        onClick={hide}\n                      >\n                        <NavLink\n                          to={`/collection/${navTitle.handle}?tag=${tag}`}\n                          className={'paragraph navbar__link'}\n                        >\n                          {tag}\n                        </NavLink>\n                      </li>\n                    );\n                  })}\n                </ol>\n              </div>\n            ) : (\n              <Fragment>\n                <NavLink\n                  to={`/collection/${navTitle.handle}`}\n                  className='paragraph  navbar__link '\n                  activeClassName=' navbar__link--active '\n                >\n                  {navTitle.title}\n                </NavLink>\n                {/* little button on vertical to open submenus */}\n                <ol className='navbar__link-hidden-list'>\n                  {navTitle.tags.map(tag => {\n                    return (\n                      <li key={tag} className='navbar__link-hidden-list-item'>\n                        <NavLink\n                          to={`/collection/${navTitle.handle}?tag=${tag}`}\n                          className={'paragraph navbar__link'}\n                        >\n                          {tag}\n                        </NavLink>\n                      </li>\n                    );\n                  })}\n                </ol>\n              </Fragment>\n            )}\n          </li>\n        );\n      });\n\n      setMenu(generatedMenu);\n    },\n    [navTitles, vertical, hide, turnToSubMenu]\n  );\n\n  useEffect(() => {\n    getCollections();\n  }, [clientContext, getCollections]);\n\n  useEffect(() => {\n    generateMenu();\n  }, [generateMenu]);\n\n  useEffect(() => {\n    setMenu(candidateNewMenu);\n  }, [candidateNewMenu]);\n\n  return (\n    <Fragment>\n      <span className='navbar-line'></span>\n      {navTitles.length > 0 && (\n        <nav\n          className={` ${\n            props.vertical\n              ? 'navbar-vertical navbar-vertical--no-background'\n              : 'navbar'\n          }`}\n        >\n          <ul\n            className={` ${\n              props.vertical ? 'navbar-vertical__list' : 'navbar__list'\n            }`}\n          >\n            {menu}\n            <span className='navbar-line navbar-line--thicc'></span>\n            {props.vertical && (\n              <li className='navbar-vertical__list-item navbar-vertical__list-item--menu'>\n                {!authContext.customerToken ? (\n                  <div className='header__loged-out'>\n                    <button\n                      className='button button__black button__black--account button__black--account button__black--account-menu-panel '\n                      onClick={() => history.push('/login')}\n                    >\n                      <svg className='button__icon'>\n                        <use xlinkHref={`${sprite}#icon-profile`}></use>\n                      </svg>\n                      <p className='paragraph menu__link'>Account</p>\n                    </button>\n                    {/* <button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--login'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-enter`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>log in</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--signup'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/signup')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-clipboard`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>sign up</p>\n\t\t\t\t\t\t\t\t\t\t</button> */}\n                  </div>\n                ) : (\n                  <div className='header__loged-out'>\n                    <button\n                      className='button button__black button__black--profile'\n                      onClick={goToMyAccount}\n                    >\n                      <svg className='button__icon'>\n                        <use xlinkHref={`${sprite}#icon-profile`}></use>\n                      </svg>\n                      <p className='paragraph menu__link'>My Account</p>\n                    </button>\n                    <button\n                      className='button button__black button__black--logout'\n                      onClick={logout}\n                    >\n                      <svg className='button__icon'>\n                        <use xlinkHref={`${sprite}#icon-exit`}></use>\n                      </svg>\n                      <p className='paragraph menu__link'>Log out</p>\n                    </button>\n                  </div>\n                )}\n              </li>\n            )}\n          </ul>\n        </nav>\n      )}\n    </Fragment>\n  );\n};\n\nexport default memo(Navbar);\n","import React, {\n\tmemo,\n\tuseContext,\n\tuseEffect,\n\tuseCallback,\n\tuseState,\n} from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { ClientContext } from '../context/clientContext';\nimport sprite from '../assets/icons/sprite.svg';\nimport { AuthContext } from '../context/authContext';\n\nconst NavbarSticky = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst [navTitles, setNavTitles] = useState([]);\n\tconst clientContext = useContext(ClientContext);\n\tconst { collections } = clientContext;\n\n\tconst getCollections = useCallback(async () => {\n\t\tif (collections) {\n\t\t\tconst navTitles = collections.map(col => {\n\t\t\t\treturn { title: col.title, handle: col.handle, tags: col.tags };\n\t\t\t});\n\n\t\t\tsetNavTitles(navTitles);\n\t\t}\n\t}, [collections]);\n\n\tconst history = useHistory();\n\n\tconst logout = async () => {\n\t\ttry {\n\t\t\tawait authContext.logout();\n\t\t} catch (err) {\n\t\t\t// connection error\n\t\t\tconsole.log('D:', err);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetCollections();\n\t}, [clientContext, getCollections]);\n\n\treturn (\n\t\t<div className='navbar-sticky'>\n\t\t\t<span className='navbar-line'></span>\n\t\t\t{navTitles.length > 0 && (\n\t\t\t\t<nav\n\t\t\t\t\tclassName={` ${\n\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t? 'navbar-vertical navbar-vertical--no-background'\n\t\t\t\t\t\t\t: 'navbar'\n\t\t\t\t\t}`}>\n\t\t\t\t\t<ul\n\t\t\t\t\t\tclassName={` ${\n\t\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t\t? 'navbar-vertical__list'\n\t\t\t\t\t\t\t\t: 'navbar__list'\n\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t{navTitles.map((navTitle, index) => (\n\t\t\t\t\t\t\t<li className='navbar__list-item' key={index}>\n\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\tto={`/collection/${navTitle.handle}`}\n\t\t\t\t\t\t\t\t\tclassName={`paragraph  ${\n\t\t\t\t\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t\t\t\t\t? ' navbar-vertical__link navbar-vertical__link--menu'\n\t\t\t\t\t\t\t\t\t\t\t: ' navbar__link '\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\tactiveClassName={\n\t\t\t\t\t\t\t\t\t\tprops.vertical\n\t\t\t\t\t\t\t\t\t\t\t? ' navbar-vertical__link--active'\n\t\t\t\t\t\t\t\t\t\t\t: ' navbar__link--active '\n\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t{navTitle.title}\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t<ol className='navbar__link-hidden-list'>\n\t\t\t\t\t\t\t\t\t{navTitle.tags.map(tag => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\tkey={tag}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='navbar__link-hidden-list-item'>\n\t\t\t\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/collection/${navTitle.handle}?tag=${tag}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'paragraph navbar__link'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<span className='navbar-line navbar-line--thicc'></span>\n\t\t\t\t\t\t{props.vertical && (\n\t\t\t\t\t\t\t<li className='navbar-vertical__list-item navbar-vertical__list-item--menu'>\n\t\t\t\t\t\t\t\t{!authContext.customerToken ? (\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--account button__black--account button__black--account-menu-panel '\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>Account</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--login'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-enter`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>log in</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--signup'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/signup')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-clipboard`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>sign up</p>\n\t\t\t\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--profile'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => history.push('/me')}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\tMy Account\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--logout'\n\t\t\t\t\t\t\t\t\t\t\tonClick={logout}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-exit`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>Log out</p>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default memo(NavbarSticky);\n","import * as actionTypes from './actionTypes';\n\nexport const setSearchText = searchText => {\n\treturn {\n\t\ttype: actionTypes.SET_SEARCHED_TEXT,\n\t\tsearchText,\n\t};\n};\n","import React, { useState, useEffect, useCallback } from 'react';\n\nconst Select = props => {\n  const [showList, toggleShowList] = useState(false);\n\n  const [selected, setSelected] = useState(\n    <span role='img' aria-label={'flag'}>\n      &#127482;&#127480; USD\n    </span>\n  );\n\n  const onButtonClick = () => {\n    toggleShowList(prevState => !prevState);\n  };\n\n  const changeSelection = useCallback(identifier => {\n    switch (identifier) {\n      case 'USD':\n        setSelected(\n          <span role='img' aria-label={'flag'}>\n            &#127482;&#127480; USD\n          </span>\n        );\n        break;\n      case 'CAD':\n        setSelected(\n          <span role='img' aria-label={'Canadian flag'}>\n            &#127464;&#127462; CAD\n          </span>\n        );\n        break;\n      case 'EUR':\n        setSelected(\n          <span role='img' aria-label={'EU flag'}>\n            &#127466;&#127482; EUR\n          </span>\n        );\n        break;\n      case 'GBP':\n        setSelected(\n          <span role='img' aria-label={'UK flag'}>\n            &#127468;&#127463; GBP\n          </span>\n        );\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  useEffect(() => {\n    changeSelection(props.currentOption);\n  }, [changeSelection, props.currentOption]);\n\n  return (\n    <div className='input__select-header-container'>\n      <input\n        checked={showList}\n        readOnly\n        type='checkbox'\n        className='input__select-checkbox'\n        id='select-toggle'\n      />\n      <label\n        htmlFor='select-toggle'\n        className='input input--black input__select input__select--header'\n        onClick={onButtonClick}\n      >\n        {selected}\n      </label>\n      <ul className='input__selection-list'>\n        <li\n          className='paragraph input__selection-list-item'\n          onClick={() => {\n            onButtonClick();\n            changeSelection('USD');\n            props.onOptionClick('USD');\n          }}\n        >\n          <span role='img' aria-label={'USA flag'}>\n            &#127482;&#127480; USD\n          </span>\n        </li>\n        <li\n          className='paragraph input__selection-list-item'\n          onClick={() => {\n            onButtonClick();\n            changeSelection('CAD');\n            props.onOptionClick('CAD');\n          }}\n        >\n          <span role='img' aria-label={'Canadian flag'}>\n            &#127464;&#127462; CAD\n          </span>\n        </li>\n        <li\n          className='paragraph input__selection-list-item'\n          onClick={() => {\n            onButtonClick();\n            changeSelection('EUR');\n            props.onOptionClick('EUR');\n          }}\n        >\n          <span role='img' aria-label={'EU flag'}>\n            &#127466;&#127482; EUR\n          </span>\n        </li>\n        <li\n          className='paragraph input__selection-list-item'\n          onClick={() => {\n            onButtonClick();\n            changeSelection('GBP');\n            props.onOptionClick('GBP');\n          }}\n        >\n          <span role='img' aria-label={'UK flag'}>\n            &#127468;&#127463; GBP\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Select;\n","import * as actionTypes from './actionTypes';\n\nexport const addProductToCheckout = (\n\tvariant,\n\tproductTitle,\n\tquantity,\n\thandle\n) => {\n\treturn {\n\t\ttype: actionTypes.ADD_PRODUCT_TO_CHECKOUT,\n\t\tvariant,\n\t\tproductTitle,\n\t\tquantity,\n\t\thandle,\n\t};\n};\n\nexport const removeProductFromCheckout = variant => {\n\treturn {\n\t\ttype: actionTypes.REMOVE_PRODUCT_FROM_CHECKOUT,\n\t\tvariant,\n\t};\n};\n\nexport const updateProductFromCheckout = (\n\tvariant,\n\tquantity,\n\tfromItself = false\n) => {\n\treturn {\n\t\ttype: actionTypes.UPDATE_PRODUCT_FROM_CHECKOUT,\n\t\tvariant,\n\t\tquantity,\n\t\tfromItself,\n\t};\n};\n\nexport const removeAllProductsFromCheckout = () => {\n\treturn {\n\t\ttype: actionTypes.REMOVE_ALL_PRODUCTS_FROM_CHECKOUT,\n\t};\n};\n","import React from 'react';\n\nconst QuantityInput = props => {\n\tlet { productQuantity, setQuantity } = props;\n\n\tconst inputSize = props.small ? 'input input--small' : 'input';\n\tconst labelSize = props.small\n\t\t? 'paragraph paragraph--black input__container-paragraph-small'\n\t\t: 'paragraph paragraph--black';\n\n\tconst inputContainer = props.small\n\t\t? 'input__container input__container--small'\n\t\t: 'input__container';\n\n\tconst inputContainerBig = props.big ? 'input__container--big' : '';\n\n\tconst inputContainerFinal = [\n\t\t...inputContainer.split(' '),\n\t\tinputContainerBig,\n\t].join(' ');\n\n\tconst addToQuantity = () => {\n\t\tsetQuantity(++productQuantity);\n\t};\n\n\tconst subtractFromQuantity = () => {\n\t\tif (productQuantity > 1) setQuantity(--productQuantity);\n\t};\n\n\tconst addFromTextInput = event => {\n\t\tvalidateNumber(event.target.value) &&\n\t\t\tsetQuantity(Math.floor(event.target.value) * 1);\n\t};\n\n\tconst validateNumber = number => {\n\t\tif (number.trim() === '') return true;\n\n\t\tif (isNaN(number)) return false;\n\n\t\tif (number.trim() <= 0) return false;\n\n\t\treturn true;\n\t};\n\n\treturn (\n\t\t<div className={inputContainerFinal}>\n\t\t\t<p className={labelSize}>Quantity:</p>\n\n\t\t\t<div className='input__quantity-buttons'>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`button ${inputSize}  input__quantity input__quantity--left`}\n\t\t\t\t\tonClick={subtractFromQuantity}>\n\t\t\t\t\t<p className='paragraph'>-</p>\n\t\t\t\t</button>\n\t\t\t\t<input\n\t\t\t\t\tclassName={`${inputSize} input__quantity`}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tonChange={addFromTextInput}\n\t\t\t\t\tvalue={productQuantity}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`button ${inputSize} input__quantity input__quantity--right`}\n\t\t\t\t\tonClick={addToQuantity}>\n\t\t\t\t\t<p className='paragraph'>+</p>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default QuantityInput;\n","import React, { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport {\n\tremoveProductFromCheckout,\n\tupdateProductFromCheckout,\n} from '../store/actions/checkout';\nimport QuantityInput from './QuantityInput';\nimport { ClientContext } from '../context/clientContext';\n\nconst LineProduct = props => {\n\tconst dispatch = useDispatch();\n\tconst clientContext = useContext(ClientContext);\n\tconst { product } = props;\n\n\tconst cardCheckout = props.big\n\t\t? 'card card--checkout card--checkout-big'\n\t\t: 'card card--checkout';\n\n\tconst cardCheckoutImageBox = props.big\n\t\t? 'card__image-box card__image-box--checkout card__image-box--checkout-big'\n\t\t: 'card__image-box card__image-box--checkout';\n\n\tconst cardCheckoutImage = props.big\n\t\t? 'card__image'\n\t\t: 'card__image card__image--checkout';\n\n\tconst cardCheckoutRemoveButton = props.big\n\t\t? 'button button__small-circle button__big-circle'\n\t\t: 'button button__small-circle button__small-circle--checkout';\n\n\tconst cardCheckoutRemoveButtonIcon = props.big\n\t\t? 'button__icon button__icon--card-cart-big'\n\t\t: 'button__icon button__icon--card';\n\n\tconst cardCheckoutDetails = props.big\n\t\t? 'card__checkout-details card__checkout-details--big'\n\t\t: 'card__checkout-details';\n\n\tconst cardTitle = props.big\n\t\t? 'heading-tertiary card__title card__title--big'\n\t\t: 'heading-tertiary card__title card__title--checkout';\n\n\tconst removeProduct = () => {\n\t\tdispatch(removeProductFromCheckout(product));\n\t};\n\n\tconst updateQuantity = quantity => {\n\t\tdispatch(updateProductFromCheckout(product, quantity, true));\n\t};\n\n\treturn (\n\t\t<li key={product.id} className={cardCheckout}>\n\t\t\t<div className={cardCheckoutImageBox}>\n\t\t\t\t<img\n\t\t\t\t\tclassName={cardCheckoutImage}\n\t\t\t\t\tsrc={product.image.src}\n\t\t\t\t\talt={\n\t\t\t\t\t\tproduct.image.altText\n\t\t\t\t\t\t\t? product.image.altText\n\t\t\t\t\t\t\t: product.productTitle\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className={cardCheckoutDetails}>\n\t\t\t\t<Link className='card__link' to={`/product/${product.handle}`}>\n\t\t\t\t\t<h3 className={cardTitle}>{product.productTitle}</h3>\n\t\t\t\t</Link>\n\n\t\t\t\t<QuantityInput\n\t\t\t\t\tproductQuantity={product.quantity}\n\t\t\t\t\tsetQuantity={updateQuantity}\n\t\t\t\t\tsmall={props.small}\n\t\t\t\t\tbig={props.big}\n\t\t\t\t/>\n\n\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t{product.quantity}x $\n\t\t\t\t\t{(product.price * clientContext.currencyRate.value).toFixed(\n\t\t\t\t\t\t2\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tclassName={cardCheckoutRemoveButton}\n\t\t\t\tonClick={removeProduct}>\n\t\t\t\t<svg className={cardCheckoutRemoveButtonIcon}>\n\t\t\t\t\t<use xlinkHref={`${sprite}#icon-cross`}></use>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</li>\n\t);\n};\n\nexport default LineProduct;\n","import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport LineProduct from './LineProduct';\n\nconst LineProducts = props => {\n\tconst checkout = useSelector(state => state.checkout);\n\n\treturn (\n\t\t<ul>\n\t\t\t{checkout.lineItems.length > 0 ? (\n\t\t\t\tcheckout.lineItems.map(item => (\n\t\t\t\t\t<LineProduct\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\tproduct={item}\n\t\t\t\t\t\tsmall={props.small}\n\t\t\t\t\t\tbig={props.big}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\t-- ...is empty. --\n\t\t\t\t</h3>\n\t\t\t)}\n\t\t</ul>\n\t);\n};\n\nexport default memo(LineProducts);\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport BarLoader from 'react-spinners/BarLoader';\n\nconst LoadingBar = props => {\n\tconst override = css`\n\t\tmargin: auto;\n\t\tborder-radius: 5rem;\n\t`;\n\n\treturn (\n\t\t<div style={{ marginTop: props.marginTop ? props.marginTop : 0 }}>\n\t\t\t<div className='sweet-loading'>\n\t\t\t\t<BarLoader\n\t\t\t\t\tcss={override}\n\t\t\t\t\theight={props.height ? props.height : 5}\n\t\t\t\t\twidth={props.width ? props.width : 300}\n\t\t\t\t\tcolor={props.color ? props.color : '#54cd00'}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default LoadingBar;\n","import React, { Fragment, memo, useContext, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport LineProducts from './LineProducts';\nimport { ClientContext } from '../context/clientContext';\nimport { removeAllProductsFromCheckout } from '../store/actions/checkout';\nimport { updateCheckoutShippingAddress, updateCheckoutEmail } from '../graphql';\nimport axiosInstace from '../axios';\nimport LoadingBar from './LoadingBar';\n\nconst addressFields = {\n\tfirstName: '',\n\tlastName: '',\n\tcompany: '',\n\taddress1: '',\n\taddress2: '',\n\tcity: '',\n\tcountry: '',\n\tprovince: '',\n\tzip: '',\n};\n\nconst CartDropdown = props => {\n\tconst checkout = useSelector(state => state.checkout);\n\tconst user = useSelector(state => state.user);\n\tconst dispatch = useDispatch();\n\tconst clientContext = useContext(ClientContext);\n\tconst history = useHistory();\n\tconst [loading, setLoading] = useState(false);\n\n\t/**\n\t * Creates a checkout.\n\t * - Treat user products chosen.\n\t * - Creates a new shopify checkout.\n\t * - Adds user's email to checkout(if logged in).\n\t * - Adds user's main address to chekout(if there is one).\n\t * - Finally, adds products to checkout, opening a new tab\n\t * where the user can complete or edit his checkout.\n\t */\n\tconst createQuickCheckout = async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst lineItems = checkout.lineItems.map(product => {\n\t\t\t\treturn {\n\t\t\t\t\tvariantId: product.id,\n\t\t\t\t\tquantity: product.quantity,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst newCheckout = await clientContext.client.checkout.create();\n\n\t\t\tif (user.email)\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutEmail(user.email, newCheckout.id)\n\t\t\t\t);\n\n\t\t\tif (user.mainAddress) {\n\t\t\t\tconst addressWithoutId = { ...addressFields };\n\n\t\t\t\tfor (let key in user.mainAddress)\n\t\t\t\t\tif (key !== 'id')\n\t\t\t\t\t\taddressWithoutId[key] = user.mainAddress[key];\n\n\t\t\t\t//const checkoutWithAddress =\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutShippingAddress(\n\t\t\t\t\t\taddressWithoutId,\n\t\t\t\t\t\tnewCheckout.id\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// const errors =\n\t\t\t\t// \tcheckoutWithAddress.data.data\n\t\t\t\t// \t\t.checkoutShippingAddressUpdateV2.checkoutUserErrors;\n\n\t\t\t\t// if (errors.length > 0) throw new Error(errors[0].message);\n\t\t\t}\n\n\t\t\tconst checkoutWithProducts = await clientContext.client.checkout.addLineItems(\n\t\t\t\tnewCheckout.id,\n\t\t\t\tlineItems\n\t\t\t);\n\n\t\t\twindow.open(checkoutWithProducts.webUrl);\n\t\t\tsetLoading(false);\n\n\t\t\tdispatch(removeAllProductsFromCheckout());\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\tconsole.log('Something terrible happened ', err);\n\t\t}\n\t};\n\n\tif (checkout.lineItems.length > 0)\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='cart cart--dropdown'>\n\t\t\t\t\t<div className='cart__panel'>\n\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary no-margin'>\n\t\t\t\t\t\t\tShopping Cart:\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t{/* LIST OF LINE PRODUCTS */}\n\t\t\t\t\t\t<LineProducts small={true} />\n\n\t\t\t\t\t\t<span className='navbar-line small-margin-top'></span>\n\n\t\t\t\t\t\t<div className='cart__total'>\n\t\t\t\t\t\t\t<p className='paragraph'>Total: </p>\n\t\t\t\t\t\t\t<div className='product__price'>\n\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\tcheckout.totalPrice *\n\t\t\t\t\t\t\t\t\t\tclientContext.currencyRate.value\n\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\tdisabled={checkout.totalPrice === 0}\n\t\t\t\t\t\t\t\t\tonClick={createQuickCheckout}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tcheckout\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big small-margin-top'\n\t\t\t\t\t\t\t\t\tonClick={() => history.push('/cart')}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tview cart\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar marginTop='3rem' />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<p>&emsp;</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\n\treturn null;\n};\n\nexport default memo(CartDropdown);\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, {\n\tFragment,\n\tmemo,\n\tuseContext,\n\tuseState,\n\tuseEffect,\n\tuseRef,\n\tuseCallback,\n} from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Navbar from './Navbar';\nimport NavbarSticky from './NavbarSticky';\nimport sprite from '../assets/icons/sprite.svg';\nimport logo from '../assets/images/logo.png';\nimport { AuthContext } from '../context/authContext';\nimport { ClientContext } from '../context/clientContext';\nimport { setSearchText } from '../store/actions/search';\nimport Select from '../components/Select';\nimport CartDropdown from '../components/CartDropdown';\n\nconst Header = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst clientContext = useContext(ClientContext);\n\tconst checkout = useSelector(state => state.checkout);\n\tconst search = useSelector(state => state.search);\n\tconst dispatch = useDispatch();\n\t// const [callToActionOpen, setCallToActionOpen] = useState(true);\n\n\tconst history = useHistory();\n\tconst { pathname } = useLocation();\n\n\t// const logout = async () => {\n\t// \ttry {\n\t// \t\tawait authContext.logout();\n\t// \t} catch (err) {\n\t// \t\t// connection error\n\t// \t\tconsole.log('D:', err);\n\t// \t}\n\t// };\n\n\t/**\n\t * On text change, set the current value to 'searchInput'\n\t * @param {String} text text input value\n\t */\n\tconst handleSearchTextChanged = event => {\n\t\tevent.preventDefault();\n\n\t\tdispatch(setSearchText(event.target.value));\n\n\t\t// or go to home?\n\t\tif (event.target.value.trim() === '') history.goBack();\n\t\telse if (pathname === '/search') history.replace('/search');\n\t\telse history.push('/search');\n\t};\n\n\tconst handleChangeCurrency = currency => {\n\t\tclientContext.changeCurrency(currency);\n\t};\n\n\t// const renderCallToAction = () => {\n\t// \tconst callToAction = clientContext.pages.filter(\n\t// \t\tpage => page.title === 'Call-To-Action'\n\t// \t);\n\n\t// \tif (callToAction !== undefined) {\n\t// \t\treturn (\n\t// \t\t\t<Fragment>\n\t// \t\t\t\t{callToActionOpen && (\n\t// \t\t\t\t\t<div className='call-to-action'>\n\t// \t\t\t\t\t\t<div\n\t// \t\t\t\t\t\t\tclassName='card__description-box-description'\n\t// \t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t// \t\t\t\t\t\t\t\t__html: callToAction[0].body,\n\t// \t\t\t\t\t\t\t}}></div>\n\n\t// \t\t\t\t\t\t<button\n\t// \t\t\t\t\t\t\tclassName='button button__small-circle'\n\t// \t\t\t\t\t\t\tonClick={() => setCallToActionOpen(false)}>\n\t// \t\t\t\t\t\t\t<svg className='button__icon'>\n\t// \t\t\t\t\t\t\t\t<use\n\t// \t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-cross`}></use>\n\t// \t\t\t\t\t\t\t</svg>\n\t// \t\t\t\t\t\t</button>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t)}\n\t// \t\t\t</Fragment>\n\t// \t\t);\n\t// \t}\n\t// };\n\n\tconst [isSticky, setSticky] = useState(false);\n\tconst element = useRef(null);\n\n\t/**\n\t * When the user scrolls, it checks whether window.scrollY is superior\n\t * or not to stickyRef.current.getBoundingClientRect().bottom and then\n\t * handles the isSticky state consequently\n\t */\n\tconst handleScroll = useCallback(() => {\n\t\tif (element.current)\n\t\t\twindow.scrollY / 3 > element.current.getBoundingClientRect().bottom\n\t\t\t\t? setSticky(true)\n\t\t\t\t: setSticky(false);\n\t}, []);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('scroll', handleScroll);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', () => handleScroll());\n\t\t};\n\t}, [handleScroll]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<header className='header'>\n\t\t\t\t{/* NEEDS TO STAY CLOSED FOR LIFE */}\n\t\t\t\t{/* {clientContext.pages && renderCallToAction()} */}\n\n\t\t\t\t<div className='header__body' ref={element}>\n\t\t\t\t\t<div className='header__content'>\n\t\t\t\t\t\t<Link className='header__logo' to='/'>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='header__logo-image'\n\t\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\t\talt='Evoloot Marketplace Logo'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className='header__buttons'>\n\t\t\t\t\t\t\t<div className='header__container'>\n\t\t\t\t\t\t\t\t<div className='header__search-form'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tautoFocus={pathname === '/search'}\n\t\t\t\t\t\t\t\t\t\ttype='search'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Search'\n\t\t\t\t\t\t\t\t\t\tclassName='input input__search'\n\t\t\t\t\t\t\t\t\t\tvalue={search.searchText}\n\t\t\t\t\t\t\t\t\t\tonChange={handleSearchTextChanged}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tclassName='button button__search'>\n\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-search`}></use>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className='header__user'>\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--cart'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/cart')\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-cart`}></use>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<div className='button__quantity'>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{checkout.lineItems.length >\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? checkout.lineItems\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tel =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tel.quantity\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.reduce(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(a, b) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta + b\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 0}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<CartDropdown />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tonOptionClick={handleChangeCurrency}\n\t\t\t\t\t\t\t\t\t\t\tcurrentOption={\n\t\t\t\t\t\t\t\t\t\t\t\tclientContext.currencyRate.code\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{!authContext.customerToken ? (\n\t\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--account'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAccount\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--login'\n\t\t\t\t\t\t\t\t\t\tonClick={() => history.push('/login')}>\n\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-enter`}></use>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>log in</p>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--signup'\n\t\t\t\t\t\t\t\t\t\tonClick={() => history.push('/signup')}>\n\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-clipboard`}></use>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>sign up</p>\n\t\t\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className='header__loged-out'>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--profile'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push('/me')\n\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-profile`}></use>\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tMy Account\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--logout'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={logout}>\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-exit`}></use>\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tLog out\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{isSticky ? <NavbarSticky /> : <Navbar />}\n\t\t\t</header>\n\t\t</Fragment>\n\t);\n};\n\nexport default memo(Header);\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { Fragment, memo, useContext } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport logo from '../assets/images/logo.png';\nimport { toggleMenu } from '../store/actions/menu';\nimport { setSearchText } from '../store/actions/search';\nimport { ClientContext } from '../context/clientContext';\n\nconst HeaderMobile = props => {\n\tconst clientContext = useContext(ClientContext);\n\tconst search = useSelector(state => state.search);\n\tconst dispatch = useDispatch();\n\t// const [callToActionOpen, setCallToActionOpen] = useState(true);\n\n\tconst history = useHistory();\n\tconst { pathname } = useLocation();\n\n\t/**\n\t * On text change, set the current value to 'searchInput'\n\t * @param {String} text text input value\n\t */\n\tconst handleSearchTextChanged = event => {\n\t\tevent.preventDefault();\n\n\t\tdispatch(setSearchText(event.target.value));\n\n\t\t// or go to home?\n\t\tif (event.target.value.trim() === '') history.goBack();\n\t\telse if (pathname === '/search') history.replace('/search');\n\t\telse history.push('/search');\n\t};\n\n\tconst handleChangeCurrency = event => {\n\t\tclientContext.changeCurrency(event.target.value);\n\t};\n\n\t// const renderCallToAction = () => {\n\t// \tconst callToAction = clientContext.pages.filter(\n\t// \t\tpage => page.title === 'Call-To-Action'\n\t// \t);\n\n\t// \tif (callToAction !== undefined) {\n\t// \t\treturn (\n\t// \t\t\t<Fragment>\n\t// \t\t\t\t{callToActionOpen && (\n\t// \t\t\t\t\t<div className='call-to-action'>\n\t// \t\t\t\t\t\t<div\n\t// \t\t\t\t\t\t\tclassName='call-to-action__description'\n\t// \t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t// \t\t\t\t\t\t\t\t__html: callToAction[0].body,\n\t// \t\t\t\t\t\t\t}}></div>\n\n\t// \t\t\t\t\t\t<button\n\t// \t\t\t\t\t\t\tclassName='button button__small-circle'\n\t// \t\t\t\t\t\t\tonClick={() => setCallToActionOpen(false)}>\n\t// \t\t\t\t\t\t\t<svg className='button__icon'>\n\t// \t\t\t\t\t\t\t\t<use\n\t// \t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-cross`}></use>\n\t// \t\t\t\t\t\t\t</svg>\n\t// \t\t\t\t\t\t</button>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t)}\n\t// \t\t\t</Fragment>\n\t// \t\t);\n\t// \t}\n\t// };\n\n\tconst showMenu = () => {\n\t\tdispatch(toggleMenu());\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<header className='header header--mobile'>\n\t\t\t\t{/* NEEDS TO STAY CLOSED FOR LIFE */}\n\t\t\t\t{/* {clientContext.pages && renderCallToAction()} */}\n\t\t\t\t<div className='header__body header__body--mobile'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='button menu__button menu__button--real'\n\t\t\t\t\t\tonClick={showMenu}>\n\t\t\t\t\t\t<svg className='button__icon menu__button-icon menu__button-icon--real'>\n\t\t\t\t\t\t\t<use xlinkHref={`${sprite}#icon-menu`}></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<div className='header__content header__content--mobile'>\n\t\t\t\t\t\t<Link className='header__logo' to='/'>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='header__logo-image'\n\t\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\t\talt='Evoloot Marketplace Logo'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className='header__buttons header__buttons--mobile'>\n\t\t\t\t\t\t\t<div className='header__user'>\n\t\t\t\t\t\t\t\t<div className='header__search-form  header__search-form--mobile'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tautoFocus={pathname === '/search'}\n\t\t\t\t\t\t\t\t\t\ttype='search'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Search'\n\t\t\t\t\t\t\t\t\t\tclassName='input input__search  input__search--mobile'\n\t\t\t\t\t\t\t\t\t\tvalue={search.searchText}\n\t\t\t\t\t\t\t\t\t\tonChange={handleSearchTextChanged}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tclassName='button button__search'>\n\t\t\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-search`}></use>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\n\t\t\t<div className='header__mobile-currency-button'>\n\t\t\t\t<select\n\t\t\t\t\tclassName='input input--black input__select input__select--header'\n\t\t\t\t\tonChange={handleChangeCurrency}\n\t\t\t\t\tvalue={clientContext.currencyRate.code}>\n\t\t\t\t\t<option className='paragraph' value='USD'>\n\t\t\t\t\t\t&#127482;&#127480; USD\n\t\t\t\t\t</option>\n\t\t\t\t\t<option className='paragraph' value='CAD'>\n\t\t\t\t\t\t&#127464;&#127462; CAD\n\t\t\t\t\t</option>\n\t\t\t\t\t<option className='paragraph' value='EUR'>\n\t\t\t\t\t\t&#127466;&#127482; EUR\n\t\t\t\t\t</option>\n\t\t\t\t\t<option className='paragraph' value='GBP'>\n\t\t\t\t\t\t&#127468;&#127463; GBP\n\t\t\t\t\t</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default memo(HeaderMobile);\n","import * as actionTypes from './actionTypes';\n\nexport const toggleMenu = () => {\n\treturn {\n\t\ttype: actionTypes.TOGGLE_MENU,\n\t};\n};\n","import React, { memo, useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport logo from '../assets/images/logo.png';\nimport { ClientContext } from '../context/clientContext';\n\n// TO-DO: ALTERNATIVE FOOTER AT ~730 WINDOW WIDTH\n\nconst Footer = props => {\n\tconst clientContext = useContext(ClientContext);\n\n\treturn (\n\t\t<footer className='footer'>\n\t\t\t<div className='footer__body'>\n\t\t\t\t<div className='footer__links'>\n\t\t\t\t\t<div className='footer__links-partition'>\n\t\t\t\t\t\t<Link className='footer__logo' to='/'>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='header__logo-image'\n\t\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\t\talt='Evoloot Marketplace Logo'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='footer__links-partition'>\n\t\t\t\t\t\t<h3 className='heading-fourtiary'>\n\t\t\t\t\t\t\tSocial Media Thingies\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<div className='footer__icons'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--small-circle'\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\twindow.open(\n\t\t\t\t\t\t\t\t\t\t'https://www.facebook.com/kumonekojp'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-facebook`}></use>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--small-circle'\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\twindow.open(\n\t\t\t\t\t\t\t\t\t\t'https://twitter.com/kumonekojp'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-twitter`}></use>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--small-circle'\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\twindow.open(\n\t\t\t\t\t\t\t\t\t\t'https://www.instagram.com/kumonekojp/'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t\t\t\t<use\n\t\t\t\t\t\t\t\t\t\txlinkHref={`${sprite}#icon-instagram`}></use>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='footer__links-partition'>\n\t\t\t\t\t\t<h3 className='heading-fourtiary'>Who We Are</h3>\n\n\t\t\t\t\t\t<div className='footer__links-partition-content footer__links-partition-content--always-column'>\n\t\t\t\t\t\t\t{clientContext.pages &&\n\t\t\t\t\t\t\t\tclientContext.pages\n\t\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t\tpage => page.title !== 'Call-To-Action'\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.map(page => (\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tkey={page.handle}\n\t\t\t\t\t\t\t\t\t\t\tto={`/pages/${page.handle}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName='footer__link'>\n\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t\t{page.title}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='footer__links-partition'>\n\t\t\t\t\t\t<h3 className='heading-fourtiary'>The Details</h3>\n\n\t\t\t\t\t\t<div className='footer__links-partition-content footer__links-partition-content--always-column'>\n\t\t\t\t\t\t\t{clientContext.shopPolicies &&\n\t\t\t\t\t\t\t\tclientContext.shopPolicies.map(policy => (\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tkey={policy.handle}\n\t\t\t\t\t\t\t\t\t\tto={`/policy/${policy.handle}`}\n\t\t\t\t\t\t\t\t\t\tclassName='footer__link'>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t\t\t{policy.title}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<span className='navbar-line'></span>\n\t\t\t<div className='footer__copyright'>\n\t\t\t\t<p className='paragraph'>\n\t\t\t\t\tCreated with{' '}\n\t\t\t\t\t<span role='img' aria-label={'heart'}>\n\t\t\t\t\t\t&#128150;\n\t\t\t\t\t</span>{' '}\n\t\t\t\t\tby{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='paragraph footer__author'\n\t\t\t\t\t\thref='https://lypzistech.pro/'\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\tLypzis\n\t\t\t\t\t</a>\n\t\t\t\t\t.\n\t\t\t\t</p>\n\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t© Kumoneko - Evoloot Marketplace {new Date().getFullYear()}.\n\t\t\t\t\tAll rights reserved.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</footer>\n\t);\n};\n\nexport default memo(Footer);\n","import React, { Fragment } from 'react';\n\nconst BluredBackground = props => {\n\treturn (\n\t\t<Fragment>\n\t\t\t{props.menuState && (\n\t\t\t\t<label className='blured' onClick={props.hide}></label>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default BluredBackground;\n","import React, { Fragment, memo, useContext, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport LineProducts from './LineProducts';\nimport BluredBackground from './BluredBackground';\nimport { ClientContext } from '../context/clientContext';\nimport { removeAllProductsFromCheckout } from '../store/actions/checkout';\nimport { updateCheckoutShippingAddress, updateCheckoutEmail } from '../graphql';\nimport axiosInstace from '../axios';\nimport LoadingBar from './LoadingBar';\n\nconst addressFields = {\n\tfirstName: '',\n\tlastName: '',\n\tcompany: '',\n\taddress1: '',\n\taddress2: '',\n\tcity: '',\n\tcountry: '',\n\tprovince: '',\n\tzip: '',\n};\n\n// OBS: NOT component, needs to be moved to container\n\nconst CartPanel = props => {\n\tconst checkout = useSelector(state => state.checkout);\n\tconst user = useSelector(state => state.user);\n\tconst dispatch = useDispatch();\n\tconst clientContext = useContext(ClientContext);\n\tconst history = useHistory();\n\tconst [loading, setLoading] = useState(false);\n\n\t/**\n\t * Creates a checkout.\n\t * - Treat user products chosen.\n\t * - Creates a new shopify checkout.\n\t * - Adds user's email to checkout(if logged in).\n\t * - Adds user's main address to chekout(if there is one).\n\t * - Finally, adds products to checkout, opening a new tab\n\t * where the user can complete or edit his checkout.\n\t */\n\tconst createQuickCheckout = async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst lineItems = checkout.lineItems.map(product => {\n\t\t\t\treturn {\n\t\t\t\t\tvariantId: product.id,\n\t\t\t\t\tquantity: product.quantity,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst newCheckout = await clientContext.client.checkout.create();\n\n\t\t\tif (user.email)\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutEmail(user.email, newCheckout.id)\n\t\t\t\t);\n\n\t\t\tif (user.mainAddress) {\n\t\t\t\tconst addressWithoutId = { ...addressFields };\n\n\t\t\t\tfor (let key in user.mainAddress)\n\t\t\t\t\tif (key !== 'id')\n\t\t\t\t\t\taddressWithoutId[key] = user.mainAddress[key];\n\n\t\t\t\t//const checkoutWithAddress =\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tupdateCheckoutShippingAddress(\n\t\t\t\t\t\taddressWithoutId,\n\t\t\t\t\t\tnewCheckout.id\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// const errors =\n\t\t\t\t// \tcheckoutWithAddress.data.data\n\t\t\t\t// \t\t.checkoutShippingAddressUpdateV2.checkoutUserErrors;\n\n\t\t\t\t// if (errors.length > 0) throw new Error(errors[0].message);\n\t\t\t}\n\n\t\t\tconst checkoutWithProducts =\n\t\t\t\tawait clientContext.client.checkout.addLineItems(\n\t\t\t\t\tnewCheckout.id,\n\t\t\t\t\tlineItems\n\t\t\t\t);\n\n\t\t\twindow.open(checkoutWithProducts.webUrl);\n\t\t\tsetLoading(false);\n\n\t\t\tdispatch(removeAllProductsFromCheckout());\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\tconsole.log('Something terrible happened ', err);\n\t\t}\n\t};\n\n\tif (checkout.lineItems.length > 0)\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<input\n\t\t\t\t\tdefaultChecked={true}\n\t\t\t\t\ttype='checkbox'\n\t\t\t\t\tclassName='cart__checkbox'\n\t\t\t\t\tid='cart-toggle'\n\t\t\t\t/>\n\n\t\t\t\t<label\n\t\t\t\t\thtmlFor='cart-toggle'\n\t\t\t\t\tclassName='button button__black button__black--login cart__button'>\n\t\t\t\t\t<div className='button__arrow'>\n\t\t\t\t\t\t<p className='button__arrow-text'>&raquo;</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<svg className='button__icon'>\n\t\t\t\t\t\t<use xlinkHref={`${sprite}#icon-cart`}></use>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<div className='button__quantity'>\n\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t{checkout.lineItems\n\t\t\t\t\t\t\t\t.map(el => el.quantity)\n\t\t\t\t\t\t\t\t.reduce((a, b) => a + b)}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\n\t\t\t\t<BluredBackground for={'cart-toggle'} />\n\n\t\t\t\t<div className='cart'>\n\t\t\t\t\t<div className='cart__panel'>\n\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary no-margin'>\n\t\t\t\t\t\t\tShopping Cart:\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t{/* LIST OF LINE PRODUCTS */}\n\t\t\t\t\t\t<LineProducts small={true} />\n\n\t\t\t\t\t\t<span className='navbar-line small-margin-top'></span>\n\n\t\t\t\t\t\t<div className='cart__total'>\n\t\t\t\t\t\t\t<p className='paragraph'>Total: </p>\n\t\t\t\t\t\t\t<div className='product__price'>\n\t\t\t\t\t\t\t\t<p className='paragraph'>\n\t\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\tcheckout.totalPrice *\n\t\t\t\t\t\t\t\t\t\tclientContext.currencyRate.value\n\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\tdisabled={checkout.totalPrice === 0}\n\t\t\t\t\t\t\t\t\tonClick={createQuickCheckout}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tcheckout\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big small-margin-top'\n\t\t\t\t\t\t\t\t\tonClick={() => history.push('/cart')}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tview cart\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar marginTop='3rem' />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<p>&emsp;</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\n\treturn null;\n};\n\nexport default memo(CartPanel);\n","import React from 'react';\nimport { goToTop } from 'react-scrollable-anchor';\n\nconst BackToTopButton = props => {\n\treturn (\n\t\t<div className='back-to-top'>\n\t\t\t{/* {isSticky && ( */}\n\t\t\t<button\n\t\t\t\tclassName='button button__black button__black--login back-to-top__button'\n\t\t\t\tonClick={() => goToTop()}>\n\t\t\t\t^\n\t\t\t</button>\n\t\t\t{/* )} */}\n\t\t</div>\n\t);\n};\n\nexport default BackToTopButton;\n","import React, { Fragment, memo, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport BluredBackground from './BluredBackground';\nimport Navbar from './Navbar';\nimport { toggleMenu } from '../store/actions/menu';\nimport { NavLink } from 'react-router-dom';\n\n// OBS: NOT a component, needs to be moved to container\n\nconst MenuPanel = props => {\n\tconst [menuName, setMenuName] = useState('Menu');\n\tconst menuState = useSelector(state => state.menu);\n\tconst dispatch = useDispatch();\n\n\tconst hideMenu = () => {\n\t\tchangeMenuNameHeader();\n\t\tdispatch(toggleMenu());\n\t};\n\n\tconst changeMenuNameHeader = (\n\t\tname = 'Menu',\n\t\tlink = null,\n\t\tcustomFunction = null\n\t) => {\n\t\tif (link)\n\t\t\tsetMenuName(\n\t\t\t\t<div className='navbar-vertical__submenu-title-box'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='button button__black button__black--login back-to-top__button back-to-top__button--return'\n\t\t\t\t\t\tonClick={customFunction}>\n\t\t\t\t\t\t{'<'}\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* width to 100% */}\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tto={link}\n\t\t\t\t\t\tclassName='paragraph navbar-vertical__link navbar-vertical__link--menu menu__link menu__link--title'\n\t\t\t\t\t\tonClick={hideMenu}>\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>\n\t\t\t);\n\t\telse setMenuName(name);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{menuState.toggle && (\n\t\t\t\t<div>\n\t\t\t\t\t<BluredBackground\n\t\t\t\t\t\tfor={'menu-toggle'}\n\t\t\t\t\t\tclassName='blured--menu'\n\t\t\t\t\t\tmenuState={menuState.toggle}\n\t\t\t\t\t\thide={hideMenu}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className='menu'>\n\t\t\t\t\t\t<div className='cart__panel'>\n\t\t\t\t\t\t\t<h3 className='heading-tertiary menu__header no-margin'>\n\t\t\t\t\t\t\t\t{menuName}\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<span className='navbar-line small-margin-top'></span>\n\n\t\t\t\t\t\t\t<Navbar\n\t\t\t\t\t\t\t\tvertical={true}\n\t\t\t\t\t\t\t\thide={hideMenu}\n\t\t\t\t\t\t\t\tchangeMenuName={changeMenuNameHeader}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default memo(MenuPanel);\n","import React, { useState, useEffect } from 'react';\n\nimport Header from '../components/Header';\nimport HeaderMobile from '../components/HeaderMobile';\nimport Footer from '../components/Footer';\nimport CartPanel from '../components/CartPanel';\nimport BackToTopButton from '../components/BackToTopButton';\nimport MenuPanel from '../components/MenuPanel';\n\nconst Layout = props => {\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 1140);\n\n  const handleResize = () => setIsDesktop(window.innerWidth > 1140);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <div className='container__parent'>\n      {isDesktop ? <Header /> : <HeaderMobile />}\n\n      <CartPanel />\n\n      {/* access to store */}\n      <MenuPanel />\n\n      {/* back to top button */}\n      {isDesktop && <BackToTopButton />}\n\n      <div className='container__background'>\n        <main className='container'>{props.children}</main>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { memo, useState, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport {\n  addProductToCheckout,\n  updateProductFromCheckout,\n} from '../store/actions/checkout';\nimport { ClientContext } from '../context/clientContext';\n\nconst Card = props => {\n  const [isMouseOverButton, setIsMouseOverButton] = useState(false);\n  const dispatch = useDispatch();\n  const checkout = useSelector(state => state.checkout);\n  const history = useHistory();\n  const clientContext = useContext(ClientContext);\n\n  /**\n   * Adds product to cart.\n   */\n  const addToCart = () => {\n    const variant = props.product.variants[0];\n\n    const title = props.product.title;\n\n    const quantity = 1;\n\n    const handle = props.product.handle;\n\n    if (\n      checkout.lineItems.findIndex(\n        productVariant => productVariant.id === variant.id\n      ) !== -1\n    )\n      dispatch(updateProductFromCheckout(variant, quantity));\n    else dispatch(addProductToCheckout(variant, title, quantity, handle));\n  };\n\n  /**\n   * Redirects to the product details page.\n   */\n  const goToProduct = () => {\n    history.push(`/product/${props.product.handle}`);\n  };\n\n  /**\n   * On click, if product has variants, redirects to product details,\n   * else, directly adds to cart.\n   */\n  const onClickHandler = () => {\n    if (props.product.variants.length === 1) return addToCart();\n    goToProduct();\n  };\n\n  return (\n    <div\n      className={[\n        props.noEffect ? 'card card--raw' : 'card',\n        props.productDetails ? 'card card--raw card--raw-product-details' : '',\n      ].join(' ')}\n    >\n      <Link className='card__link' to={`/product/${props.product.handle}`}>\n        <div\n          className={\n            props.productDetails\n              ? 'card__image-box card__image-box--product-details'\n              : 'card__image-box'\n          }\n        >\n          <img\n            className={\n              props.productDetails\n                ? 'card__image card__image--product-details'\n                : 'card__image'\n            }\n            src={props.product.images[0] && props.product.images[0].src}\n            alt={props.product.images[0] && props.product.images[0].altText}\n          />\n        </div>\n\n        <h3 className='heading-tertiary card__title'>{props.product.title}</h3>\n      </Link>\n      <span className='navbar-line'></span>\n      {props.product.variants[0].available ? (\n        <button\n          className='button button__black button__black--card'\n          onMouseOver={() => setIsMouseOverButton(true)}\n          onMouseOut={() => setIsMouseOverButton(false)}\n          onClick={onClickHandler}\n        >\n          {isMouseOverButton ? (\n            <div className='button__icon-container'>\n              <svg className='button__icon button__icon--card'>\n                <use xlinkHref={`${sprite}#icon-cart`}></use>\n              </svg>\n              <p className='paragraph card__price'>\n                {props.product.variants.length === 1 ? 'Add' : 'Options'}\n              </p>\n            </div>\n          ) : (\n            <p className='paragraph card__price'>\n              $\n              {(\n                props.product.variants[0].price *\n                clientContext.currencyRate.value\n              ).toFixed(2)}\n            </p>\n          )}\n        </button>\n      ) : (\n        <button\n          className='button button__black button__black--card'\n          onMouseOver={() => setIsMouseOverButton(true)}\n          onMouseOut={() => setIsMouseOverButton(false)}\n          disabled\n          onClick={onClickHandler}\n        >\n          <div className='button__icon-container'>\n            <p className='paragraph  card__price card__price--white'>\n              sold out\n            </p>\n          </div>\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Card);\n","import React, { Fragment, memo, useState, useEffect } from 'react';\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext,\n} from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nimport Card from './Card';\n\nconst Carousel = props => {\n  const [addButtons, setAddButtons] = useState(window.innerWidth > 850);\n\n  const handleResize = () => setAddButtons(window.innerWidth > 850);\n\n  useEffect(() => {\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <Fragment>\n      {props.products.length > 0 && (\n        <CarouselProvider\n          naturalSlideWidth={props.naturalSlideWidth}\n          naturalSlideHeight={props.naturalSlideHeight}\n          totalSlides={props.products.length}\n          visibleSlides={props.visibleSlides}\n          isPlaying={props.isPlaying}\n          orientation='horizontal'\n          className={\n            props.productDetails\n              ? 'product__carousel-body product__carousel-body--product-detail '\n              : 'product__carousel-body'\n          }\n          infinite={true}\n          step={props.step} // needs to be dinamic\n        >\n          <div\n            className={`product__carousel-controllers ${\n              !props.productDetails ? 'product__carousel-controllers--home' : ''\n            }`}\n          >\n            <div className='product__carousel-controllers-header'>\n              {props.header}\n            </div>\n          </div>\n          {addButtons && (\n            <ButtonBack className='button button__black button__black--arrow button__black--arrow-right'>\n              &lt;\n            </ButtonBack>\n          )}\n          <Slider className='product__carousel-slider'>\n            {props.products.map((product, index) => {\n              return (\n                <Slide\n                  key={product.id}\n                  index={index}\n                  innerClassName='product__carousel-container'\n                >\n                  <Card\n                    product={product}\n                    noEffect={true}\n                    productDetails={props.productDetails}\n                  />\n                </Slide>\n              );\n            })}\n          </Slider>\n          {addButtons && (\n            <ButtonNext className='button button__black button__black--arrow button__black--arrow-left'>\n              &gt;\n            </ButtonNext>\n          )}\n        </CarouselProvider>\n      )}\n    </Fragment>\n  );\n};\n\nexport default memo(Carousel);\n","import React, {\n  memo,\n  useState,\n  useEffect,\n  useContext,\n  useCallback,\n} from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nimport Card from '../components/Card';\nimport Carousel from '../components/Carousel';\n\n// import { getCustomerOrders } from '../graphql';\n// import axiosInstance from '../axios';\nimport { ClientContext } from '../context/clientContext';\n\nconst Collection = props => {\n  const { products } = props.collection;\n\n  const clientContext = useContext(ClientContext);\n  const { loadMoreCollectionProducts } = clientContext;\n  const query = new URLSearchParams(useLocation().search);\n  const queryTag = query.get('tag');\n\n  const [displayedProducts, setDisplayedProducts] = useState(\n    props.featured\n      ? products.slice(0, 4).map(product => {\n          return <Card key={product.id} product={product} />;\n        })\n      : products.map(product => {\n          return <Card key={product.id} product={product} />;\n        })\n  );\n\n  const [cursor, setCursor] = useState(products[0].cursor);\n  const [currArrLength, setCurrArrLength] = useState(products.length);\n  const [carouselHeight, setCarouselHeight] = useState(120);\n  const [carouselWidth, setCarouselWidth] = useState(100);\n  const [numberOfSlides, setNumberOfSlides] = useState(4);\n\n  /**\n   * Sort cards filter.\n   * @param {Event} event\n   */\n  const sortBy = event => {\n    event.preventDefault();\n\n    let sorted;\n\n    switch (event.target.value) {\n      case 'featured':\n        sorted = [...products].sort(\n          (a, b) => new Date(b.publishedAt) - new Date(a.publishedAt)\n        );\n        break;\n      case 'priceLowToHigh':\n        sorted = [...products].sort(\n          (a, b) =>\n            parseFloat(a.variants[0].price) - parseFloat(b.variants[0].price)\n        );\n        break;\n      case 'priceHighToLow':\n        sorted = [...products].sort(\n          (a, b) =>\n            parseFloat(b.variants[0].price) - parseFloat(a.variants[0].price)\n        );\n        break;\n      case 'alphabeticallyAToZ':\n        sorted = [...products].sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case 'alphabeticallyZToA':\n        sorted = [...products].sort((a, b) => b.title.localeCompare(a.title));\n        break;\n      case 'dateOldToNew':\n        sorted = [...products].sort(\n          (a, b) => new Date(a.publishedAt) - new Date(b.publishedAt)\n        );\n        break;\n      case 'dateNewToOld':\n        sorted = [...products].sort(\n          (a, b) => new Date(b.publishedAt) - new Date(a.publishedAt)\n        );\n        break;\n      default:\n        sorted = [...products].sort(\n          (a, b) => new Date(b.publishedAt) - new Date(a.publishedAt)\n        );\n    }\n\n    renderProducts(sorted);\n  };\n\n  /**\n   * Renders 'Card' blocks.\n   * @param {Array} arr\n   */\n  const renderProducts = arr => {\n    setDisplayedProducts(\n      arr.map(product => {\n        return <Card key={product.id} product={product} />;\n      })\n    );\n  };\n\n  /**\n   * Loads more 20 products to the page.\n   */\n  const loadMoreProducts = async () => {\n    const newCursor = await loadMoreCollectionProducts(\n      props.collection.handle,\n      `first: 20, after: \"${cursor}\"`\n    );\n\n    if (newCursor) {\n      setCursor(newCursor.cursor);\n      setCurrArrLength(newCursor.length);\n    }\n  };\n\n  /**\n   * Changes carousel width based on window width.\n   * @returns number\n   */\n  const changeCarouselWidth = () =>\n    setCarouselWidth(window.innerWidth <= 850 ? 110 : 100);\n  /**\n   * Changes carousel height based on window height.\n   * @returns number\n   */\n  const changeCarouselHeight = () =>\n    setCarouselHeight(window.innerWidth <= 850 ? 130 : 120);\n  /**\n   * Changes the number of slides based on window width.\n   * @returns number\n   */\n  const changeNumberOfSlides = () => {\n    if (window.innerWidth <= 600) setNumberOfSlides(2);\n    else if (window.innerWidth <= 850) setNumberOfSlides(3);\n    else setNumberOfSlides(4);\n  };\n\n  const adjustElementToScreenSizeChange = useCallback(() => {\n    changeCarouselWidth();\n    changeCarouselHeight();\n    changeNumberOfSlides();\n  }, []);\n\n  const renderProductsSorted = arr => {\n    const productsFormated = arr\n      .sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt))\n      .map(product => {\n        return <Card key={product.id} product={product} />;\n      });\n\n    setDisplayedProducts(productsFormated);\n  };\n\n  useEffect(() => {\n    const productsFormated = products\n      .sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt))\n      .map(product => {\n        return <Card key={product.id} product={product} />;\n      });\n\n    setDisplayedProducts(productsFormated);\n  }, [products, props.featured]);\n\n  useEffect(() => {\n    const filteredProducts = [];\n\n    if (queryTag && typeof queryTag !== 'undefined') {\n      for (let i = 0; i < products.length; ++i) {\n        const doesItBelong = products[i].tags.findIndex(\n          tag => tag === queryTag\n        );\n\n        if (doesItBelong !== -1) filteredProducts.push(products[i]);\n      }\n\n      renderProductsSorted(filteredProducts);\n    } else {\n      renderProductsSorted(products);\n    }\n  }, [queryTag, products]);\n\n  useEffect(() => {\n    adjustElementToScreenSizeChange();\n\n    window.addEventListener('resize', adjustElementToScreenSizeChange);\n\n    return () =>\n      window.removeEventListener('resize', adjustElementToScreenSizeChange);\n  }, [adjustElementToScreenSizeChange]);\n\n  return (\n    <div className='home__featured-section' key={props.collection.id}>\n      <h2 className='heading-secondary heading-secondary--dark'>\n        {props.collection.title}\n      </h2>\n      <h3 className='heading-tertiary heading-tertiary--dark'>\n        {props.collection.description}\n      </h3>\n      {!props.featured && (\n        <div className='card card--collection'>\n          <div className='input__container input__container--collection'>\n            <p className='paragraph'>sort by: </p>\n            <select\n              // input--black\n              className='input input__select input__select--collection'\n              onChange={sortBy}\n            >\n              <option value='featured'>Featured</option>\n              <option value='priceLowToHigh'>Price, low to high</option>\n              <option value='priceHighToLow'>Price, high to low</option>\n              <option value='alphabeticallyAToZ'>Alphabetically, A-Z</option>\n              <option value='alphabeticallyZToA'>Alphabetically, Z-A</option>\n              <option value='dateOldToNew'>Date, old to new</option>\n              <option value='dateNewToOld'>Date, new to old</option>\n            </select>\n          </div>\n        </div>\n      )}\n      <div className='home__featured'>\n        {props.featured ? (\n          <div className='home__container'>\n            <Carousel\n              products={products}\n              naturalSlideWidth={carouselWidth}\n              naturalSlideHeight={carouselHeight}\n              visibleSlides={numberOfSlides}\n              isPlaying={false}\n              step={4}\n            />\n          </div>\n        ) : (\n          displayedProducts\n        )}\n      </div>\n      {props.featured ? (\n        <Link\n          to={`/collection/${props.collection.handle}`}\n          className='button button__black button__black--show-more'\n        >\n          <p className='paragraph'>show more</p>\n        </Link>\n      ) : (\n        <div>\n          {currArrLength === 20 && (\n            <button\n              onClick={() => loadMoreProducts()}\n              className='button button__black button__black--show-more'\n            >\n              <p className='paragraph'>load more</p>\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Collection);\n","import React, { memo, useState, useEffect } from 'react';\nimport { CarouselProvider, Slider, Slide } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nimport image01 from '../assets/images/Rotating_Product_Banner_Finals_1.png';\nimport image02 from '../assets/images/Rotating_Product_Banner_Finals_2.jpg';\nimport image03 from '../assets/images/Rotating_Product_Banner_Finals_3.jpg';\nimport image04 from '../assets/images/Rotating_Product_Banner_Finals_4.jpg';\n\nconst images = [image01, image02, image03, image04];\n\nconst BannerCarousel = props => {\n  const [bannerSize, setBannerSize] = useState(38);\n\n  const changeHeight = () => {\n    if (window.innerWidth <= 600) setBannerSize(40);\n    else if (window.innerWidth <= 850) setBannerSize(50);\n    else setBannerSize(38);\n  };\n\n  useEffect(() => {\n    changeHeight();\n\n    window.addEventListener('resize', changeHeight);\n\n    return () => window.removeEventListener('resize', changeHeight);\n  }, []);\n\n  return (\n    <CarouselProvider\n      naturalSlideWidth={100}\n      naturalSlideHeight={bannerSize}\n      totalSlides={images.length}\n      visibleSlides={1}\n      isPlaying={true}\n      orientation='horizontal'\n      className='banner'\n      interval={6000}\n      infinite={true}\n    >\n      <Slider>\n        {images.map(image => (\n          <Slide key={image} innerClassName='banner__slide'>\n            <div className='banner__container'>\n              <div className='banner__card'>\n                <img className='banner__image' src={image} alt='promo banner' />\n              </div>\n            </div>\n          </Slide>\n        ))}\n      </Slider>\n    </CarouselProvider>\n  );\n};\n\nexport default memo(BannerCarousel);\n","import React, {\n\tmemo,\n\tuseContext,\n\tuseEffect,\n\tuseCallback,\n\tuseState,\n} from 'react';\n\nimport Layout from '../hoc/Layout';\nimport { ClientContext } from '../context/clientContext';\nimport Collection from '../components/Collection';\nimport LoadingBar from '../components/LoadingBar';\nimport BannerCarousel from '../components/BannerCarousel';\n\nconst Home = props => {\n\tconst [homeCollections, setHomeCollections] = useState();\n\tconst [loading, setLoading] = useState(true);\n\tconst clientContext = useContext(ClientContext);\n\tconst { collections } = clientContext;\n\n\t/**\n\t * Get all collection products for display.\n\t */\n\tconst getFeaturedProducts = useCallback(() => {\n\t\tif (collections) {\n\t\t\tsetHomeCollections([...collections]);\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [collections]);\n\n\tuseEffect(() => {\n\t\tgetFeaturedProducts();\n\t}, [getFeaturedProducts]);\n\n\t/**\n\t * Renders a 'Collection' block.\n\t */\n\tconst renderHomeCollections = useCallback(() => {\n\t\treturn homeCollections.map(collection => (\n\t\t\t<Collection\n\t\t\t\tkey={collection.id}\n\t\t\t\tcollection={collection}\n\t\t\t\tfeatured={true}\n\t\t\t/>\n\t\t));\n\t}, [homeCollections]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t{homeCollections ? (\n\t\t\t\t<section className='home'>\n\t\t\t\t\t{<BannerCarousel />}\n\t\t\t\t\t{renderHomeCollections()}\n\t\t\t\t</section>\n\t\t\t) : (\n\t\t\t\t<LoadingBar loading={loading} marginTop={'18rem'} />\n\t\t\t)}\n\t\t</Layout>\n\t);\n};\n\nexport default memo(Home);\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Layout from '../hoc/Layout';\nimport { ClientContext } from '../context/clientContext';\nimport Collection from '../components/Collection';\n\nconst CollectionProducts = props => {\n\tconst [collection, setCollection] = useState();\n\tconst { handle } = useParams();\n\tconst clientContext = useContext(ClientContext);\n\tconst { collections } = clientContext;\n\n\t/**\n\t * Get a collection based on the\n\t * current page 'params' which is going\n\t * to be one of the collections 'handles'.\n\t */\n\tconst getCollection = useCallback(() => {\n\t\tif (collections) {\n\t\t\tconst incomingCollection = collections.filter(\n\t\t\t\tcollection => collection.handle === handle\n\t\t\t);\n\n\t\t\tsetCollection(incomingCollection[0]);\n\t\t}\n\t}, [collections, handle]);\n\n\tuseEffect(() => {\n\t\tgetCollection();\n\t}, [getCollection]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t{collection && (\n\t\t\t\t<section className='home'>\n\t\t\t\t\t<Collection collection={collection} />\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</Layout>\n\t);\n};\n\nexport default CollectionProducts;\n","import React, { memo } from 'react';\n\nconst Thumbnail = props => {\n\tconst setImage = () => {\n\t\tif (props.isVariant)\n\t\t\tprops.setImage(\n\t\t\t\tprops.product.variants[props.index].image.id,\n\t\t\t\tprops.product.variants[props.index].image.src,\n\t\t\t\tprops.index\n\t\t\t);\n\t\telse\n\t\t\tprops.setImage(\n\t\t\t\tprops.product.images[props.index].id,\n\t\t\t\tprops.product.images[props.index].src\n\t\t\t);\n\t};\n\n\treturn (\n\t\t<li key={props.image.src} className='product__image-variant-list-item'>\n\t\t\t<input\n\t\t\t\treadOnly\n\t\t\t\tclassName='input__radio-image'\n\t\t\t\tchecked={props.currentSelection === props.image.id}\n\t\t\t\tvalue={props.image.id}\n\t\t\t\tid={props.image.id}\n\t\t\t\tname='image'\n\t\t\t\ttype='radio'\n\t\t\t/>\n\t\t\t<label\n\t\t\t\tclassName={\n\t\t\t\t\tprops.currentSelection === props.image.id\n\t\t\t\t\t\t? 'button button__white  button__white--image-active'\n\t\t\t\t\t\t: 'button button__white button__white--image'\n\t\t\t\t}\n\t\t\t\thtmlFor={props.image.id}\n\t\t\t\tonClick={setImage}\n\t\t\t\tonMouseOver={setImage}>\n\t\t\t\t<img\n\t\t\t\t\tclassName='product__image product__image--variant'\n\t\t\t\t\tsrc={props.image.src}\n\t\t\t\t\talt={\n\t\t\t\t\t\tprops.image.altText\n\t\t\t\t\t\t\t? props.image.altText\n\t\t\t\t\t\t\t: props.product.title\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t</li>\n\t);\n};\n\nexport default memo(Thumbnail);\n","import React, { memo } from 'react';\n\nconst Description = ({ description, isThereADescription }) => {\n\tif (!isThereADescription) return null;\n\n\treturn (\n\t\t<div className='card product__card product__card--description'>\n\t\t\t<div className='card__details'>\n\t\t\t\t<h3 className='heading-tertiary small-margin'>Description:</h3>\n\n\t\t\t\t<div className='card__description-box'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='card__description-box-description'\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: description,\n\t\t\t\t\t\t}}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default memo(Description);\n","import React, { useContext, useEffect, useCallback, useReducer } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ReactImageMagnify from 'react-image-magnify';\nimport { goToTop } from 'react-scrollable-anchor';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ClientContext } from '../context/clientContext';\nimport sprite from '../assets/icons/sprite.svg';\nimport Layout from '../hoc/Layout';\nimport Thumbnail from '../components/Thumbnail';\nimport Description from '../components/Description';\nimport Carousel from '../components/Carousel';\nimport {\n  addProductToCheckout,\n  updateProductFromCheckout,\n} from '../store/actions/checkout';\nimport QuantityInput from '../components/QuantityInput';\n\nconst productReducer = (currentProductState, action) => {\n  switch (action.type) {\n    case 'INITIALIZE':\n      return {\n        product: action.product,\n        quantity: action.quantity,\n        imageSrc: action.imageSrc,\n        imageId: action.imageId,\n        variant: action.variant,\n        relatedProducts: action.relatedProducts,\n        viewed: action.viewed,\n      };\n    case 'SET_PRODUCT':\n      return { ...currentProductState, product: action.product };\n    case 'SET_QUANTITY':\n      return { ...currentProductState, quantity: action.quantity };\n    case 'SET_SELECTION':\n      return {\n        ...currentProductState,\n        imageSrc: action.imageSrc,\n        imageId: action.imageId,\n      };\n    case 'SET_SELECTION_WITH_VARIANT':\n      return {\n        ...currentProductState,\n        imageSrc: action.imageSrc,\n        imageId: action.imageId,\n        variant: action.variant,\n      };\n    default:\n      return currentProductState;\n  }\n};\n\nconst ProductDetails = props => {\n  const { handle } = useParams();\n  const history = useHistory();\n  const clientContext = useContext(ClientContext);\n  const dispatch = useDispatch();\n  const checkout = useSelector(state => state.checkout);\n\n  const [productChosen, dispatchProduct] = useReducer(productReducer);\n\n  /**\n   * Retrieve related products based on the type of\n   * the current displayed product.\n   * - Takes care to not retrieve the same product.\n   * @returns array of products.\n   */\n  const retrieveRelatedProducts = useCallback(\n    currentProduct => {\n      let products = [];\n\n      clientContext.collections.forEach(collection => {\n        products = [...products, ...collection.products].filter(\n          product =>\n            product.productType === currentProduct.productType &&\n            product.handle !== handle\n        );\n      });\n\n      return products;\n    },\n    [handle, clientContext.collections]\n  );\n\n  /**\n   * Saves a viewed product to the local storage\n   * if it isn't there already.\n   * - Default of saved products is 10.\n   * @param {Object} product\n   * @returns null\n   */\n  const saveViewed = product => {\n    const viewed = localStorage.getItem('viewed');\n\n    if (!viewed) {\n      localStorage.setItem('viewed', JSON.stringify([product]));\n      return;\n    }\n\n    const convertedViewed = JSON.parse(viewed);\n\n    const newViewed = convertedViewed.slice(0, 10);\n\n    const alreadyAdded = newViewed.find(\n      addedProduct => addedProduct.handle === product.handle\n    );\n\n    if (alreadyAdded === undefined) newViewed.unshift(product);\n\n    localStorage.setItem('viewed', JSON.stringify(newViewed));\n  };\n\n  /**\n   * Retrieves viewed products from local storage.\n   * - Does not retrieve the current one being displayed.\n   * @param {Object} currentProduct\n   * @returns\n   */\n  const retrieveViewed = currentProduct => {\n    const viewed = localStorage.getItem('viewed');\n\n    const viewedConverted = JSON.parse(viewed);\n\n    return viewedConverted.filter(\n      product => product.handle !== currentProduct.handle\n    );\n  };\n\n  /**\n   * Get a product by its handle, which will be the same as the page param.\n   */\n  const getProduct = useCallback(async () => {\n    try {\n      let productSelected = {};\n\n      // TO-DO: rewrite this using GraphQl query\n      for (const collection of clientContext.collections) {\n        for (const product of collection.products) {\n          if (product.handle === handle) {\n            productSelected = product;\n            break;\n          }\n        }\n      }\n\n      // Doesn't work\n      // const product = await clientContext.client.product.fetchByHandle(handle);\n\n      if (!productSelected) {\n        throw new Error('No product with that handle');\n      }\n\n      saveViewed(productSelected);\n      const viewed = retrieveViewed(productSelected);\n\n      let imageSrc, imageId;\n\n      if (productSelected.variants.length > 1) {\n        imageSrc = productSelected.variants[0].image.src;\n        imageId = productSelected.variants[0].image.id;\n      } else {\n        imageSrc = productSelected.images[0].src;\n        imageId = productSelected.images[0].id;\n      }\n\n      const relatedProducts = retrieveRelatedProducts(productSelected);\n\n      dispatchProduct({\n        type: 'INITIALIZE',\n        product: productSelected,\n        quantity: 1,\n        imageSrc,\n        imageId,\n        variant: productSelected.variants[0],\n        relatedProducts,\n        viewed,\n      });\n\n      goToTop();\n    } catch (err) {\n      //console.error('Error fetching product:', err.message);\n      history.replace('/*');\n    }\n  }, [handle, history, clientContext.collections, retrieveRelatedProducts]);\n\n  /**\n   * Sets a new main image from the product to display.\n   * @param {String} imageId\n   * @param {String} imageSrc\n   * @param {Number} index\n   */\n  const setImageSelected = (imageId, imageSrc, index = 0) => {\n    if (productChosen.product.variants.length > 1)\n      dispatchProduct({\n        type: 'SET_SELECTION_WITH_VARIANT',\n        imageSrc,\n        imageId,\n        variant: productChosen.product.variants[index],\n      });\n    else\n      dispatchProduct({\n        type: 'SET_SELECTION',\n        imageSrc,\n        imageId,\n      });\n  };\n\n  /**\n   * Sets a variant selection.\n   * @param {Event} event\n   */\n  const setVariantSelected = event => {\n    const variant = JSON.parse(event.target.value);\n\n    dispatchProduct({\n      type: 'SET_SELECTION_WITH_VARIANT',\n      imageSrc: variant.image.src,\n      imageId: variant.image.id,\n      variant,\n    });\n  };\n\n  /**\n   * Render products images as side thumbnails.\n   * - If product has variants, their image will be set.\n   * - If product has no variants, its images will be set.\n   * @returns Thumbnail block.\n   */\n  const renderThumbnails = () => {\n    if (productChosen.product.variants.length > 1)\n      return productChosen.product.variants.map((variant, index) => (\n        <Thumbnail\n          key={index}\n          isVariant={true}\n          product={productChosen.product}\n          image={variant.image}\n          index={index}\n          currentSelection={productChosen.imageId}\n          setImage={setImageSelected}\n        />\n      ));\n\n    return productChosen.product.images.map((image, index) => (\n      <Thumbnail\n        key={index}\n        isVariant={false}\n        product={productChosen.product}\n        image={image}\n        index={index}\n        currentSelection={productChosen.imageId}\n        setImage={setImageSelected}\n      />\n    ));\n  };\n\n  /**\n   * Render product variants names as options.\n   * @returns option block.\n   */\n  const renderVariants = () => {\n    return productChosen.product.variants.map(variant => (\n      <option key={variant.id} value={JSON.stringify(variant)}>\n        {variant.title}\n      </option>\n    ));\n  };\n\n  /**\n   * Updates the quantity value.\n   * @param {Number} quantity\n   */\n  const updateQuantity = quantity => {\n    dispatchProduct({\n      type: 'SET_QUANTITY',\n      quantity,\n    });\n  };\n\n  /**\n   * Adds the current displayed product to cart.\n   */\n  const addToCart = () => {\n    const variant = productChosen.variant;\n\n    const title =\n      productChosen.product.variants.length > 1\n        ? `${productChosen.product.title} - ${productChosen.variant.title}`\n        : productChosen.product.title;\n\n    const quantity = productChosen.quantity;\n\n    const handle = productChosen.product.handle;\n\n    if (\n      checkout.lineItems.findIndex(\n        productVariant => productVariant.id === variant.id\n      ) !== -1\n    )\n      dispatch(updateProductFromCheckout(variant, quantity));\n    else dispatch(addProductToCheckout(variant, title, quantity, handle));\n  };\n\n  useEffect(() => {\n    if (clientContext.collections) getProduct();\n  }, [clientContext.collections, getProduct]);\n\n  return (\n    <Layout>\n      {productChosen && (\n        <section className='product'>\n          <h2 className='heading-secondary heading-secondary--dark product__title'>\n            {productChosen.product.variants.length > 1\n              ? `${productChosen.product.title} - ${productChosen.variant.title}`\n              : productChosen.product.title}\n          </h2>\n          <div className='product__details'>\n            <ul className='product__image-variant-list'>\n              {renderThumbnails()}\n            </ul>\n            <div className='product__image'>\n              <figure className='product__image-container'>\n                <ReactImageMagnify\n                  imageClassName='product__image '\n                  enlargedImageContainerClassName='product__image '\n                  enlargedImagePosition='over'\n                  {...{\n                    smallImage: {\n                      alt: productChosen.product.images[0].altText\n                        ? productChosen.product.images[0].altText\n                        : productChosen.product.title,\n                      isFluidWidth: true,\n                      src: productChosen.imageSrc,\n                    },\n                    largeImage: {\n                      src: productChosen.imageSrc,\n                      width: 900, // HERE ???\n                      height: 900,\n                    },\n                  }}\n                />\n              </figure>\n\n              {/* TO-DO the product card should probably be here */}\n\n              <Description\n                description={productChosen.product.descriptionHtml}\n                isThereADescription={\n                  productChosen.product.description.trim() !== ''\n                }\n              />\n\n              <span className='navbar-line big-margin-top'></span>\n\n              <h3 className='heading-tertiary heading-tertiary--dark  medium-margin-top-no-bottom'>\n                You may also like:\n              </h3>\n              <Carousel\n                products={productChosen.relatedProducts}\n                naturalSlideWidth={100}\n                naturalSlideHeight={140}\n                visibleSlides={3}\n                step={3}\n                isPlaying={false}\n                productDetails={true}\n              />\n\n              <span className='navbar-line big-margin-top'></span>\n\n              <h3 className='heading-tertiary heading-tertiary--dark  medium-margin-top-no-bottom'>\n                Recently Viewed:\n              </h3>\n              <Carousel\n                products={productChosen.viewed}\n                naturalSlideWidth={100}\n                naturalSlideHeight={140}\n                visibleSlides={3}\n                step={3}\n                isPlaying={false}\n                productDetails={true}\n              />\n            </div>\n\n            {/* TO-DO needs to be a standalone component */}\n            <div className='card product__card'>\n              <div className='card__details'>\n                <div className='input__container'>\n                  <p className='paragraph paragraph--black paragraph--capitalized'>\n                    Availability:{' '}\n                    {productChosen.variant.available\n                      ? 'in stock'\n                      : 'out of stock'}\n                  </p>\n                </div>\n                {productChosen.product.variants.length > 1 && (\n                  <div className='input__container'>\n                    <p className='paragraph paragraph--black'>Variant: </p>\n                    <select\n                      className='input input__select'\n                      onChange={setVariantSelected}\n                    >\n                      {renderVariants()}\n                    </select>\n                  </div>\n                )}\n\n                <QuantityInput\n                  productQuantity={productChosen.quantity}\n                  setQuantity={updateQuantity}\n                />\n\n                <span className='navbar-line'></span>\n\n                <div className='product__price'>\n                  <p className='paragraph paragraph--black'>\n                    $\n                    {(\n                      productChosen.variant.price *\n                      productChosen.quantity *\n                      clientContext.currencyRate.value\n                    ).toFixed(2)}\n                  </p>\n                </div>\n\n                <button\n                  className='button button__black button__black--card-big'\n                  onClick={addToCart}\n                  disabled={\n                    productChosen.quantity === 0 ||\n                    !productChosen.variant.available\n                  }\n                >\n                  {productChosen.quantity === 0 ||\n                  !productChosen.variant.available ? (\n                    <div className='button__icon-container button__icon-container--big'>\n                      <p className='paragraph card__price card__price--big'>\n                        Sold Out\n                      </p>\n                    </div>\n                  ) : (\n                    <div className='button__icon-container button__icon-container--big'>\n                      <svg className='button__icon button__icon--card-big '>\n                        <use xlinkHref={`${sprite}#icon-cart`}></use>\n                      </svg>\n                      <p className='paragraph card__price card__price--big'>\n                        Add To Cart\n                      </p>\n                    </div>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n    </Layout>\n  );\n};\n\nexport default ProductDetails;\n","import React, {\n  useContext,\n  useEffect,\n  useCallback,\n  useReducer,\n  useState,\n} from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ReactImageMagnify from 'react-image-magnify';\nimport { goToTop } from 'react-scrollable-anchor';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ClientContext } from '../context/clientContext';\nimport sprite from '../assets/icons/sprite.svg';\nimport Layout from '../hoc/Layout';\nimport Thumbnail from '../components/Thumbnail';\nimport Description from '../components/Description';\nimport Carousel from '../components/Carousel';\nimport {\n  addProductToCheckout,\n  updateProductFromCheckout,\n} from '../store/actions/checkout';\nimport QuantityInput from '../components/QuantityInput';\n\nconst productReducer = (currentProductState, action) => {\n  switch (action.type) {\n    case 'INITIALIZE':\n      return {\n        product: action.product,\n        quantity: action.quantity,\n        imageSrc: action.imageSrc,\n        imageId: action.imageId,\n        variant: action.variant,\n        relatedProducts: action.relatedProducts,\n        viewed: action.viewed,\n      };\n    case 'SET_PRODUCT':\n      return { ...currentProductState, product: action.product };\n    case 'SET_QUANTITY':\n      return { ...currentProductState, quantity: action.quantity };\n    case 'SET_SELECTION':\n      return {\n        ...currentProductState,\n        imageSrc: action.imageSrc,\n        imageId: action.imageId,\n      };\n    case 'SET_SELECTION_WITH_VARIANT':\n      return {\n        ...currentProductState,\n        imageSrc: action.imageSrc,\n        imageId: action.imageId,\n        variant: action.variant,\n      };\n    default:\n      return currentProductState;\n  }\n};\n\nconst ProductDetailsMobile = props => {\n  const { handle } = useParams();\n  const history = useHistory();\n  const clientContext = useContext(ClientContext);\n  const dispatch = useDispatch();\n  const checkout = useSelector(state => state.checkout);\n  const [numberOfSlides, setNumberOfSlides] = useState(4);\n\n  const [productChosen, dispatchProduct] = useReducer(productReducer);\n\n  /**\n   * Retrieve related products based on the type of\n   * the current displayed product.\n   * - Takes care to not retrieve the same product.\n   * @returns array of products.\n   */\n  const retrieveRelatedProducts = useCallback(\n    currentProduct => {\n      let products = [];\n\n      clientContext.collections.forEach(collection => {\n        products = [...products, ...collection.products].filter(\n          product =>\n            product.productType === currentProduct.productType &&\n            product.handle !== handle\n        );\n      });\n\n      return products;\n    },\n    [handle, clientContext]\n  );\n\n  /**\n   * Saves a viewed product to the local storage\n   * if it isn't there already.\n   * - Default of saved products is 10.\n   * @param {Object} product\n   * @returns null\n   */\n  const saveViewed = product => {\n    const viewed = localStorage.getItem('viewed');\n\n    if (!viewed) {\n      localStorage.setItem('viewed', JSON.stringify([product]));\n      return;\n    }\n\n    const convertedViewed = JSON.parse(viewed);\n\n    const newViewed = convertedViewed.slice(0, 10);\n\n    const alreadyAdded = newViewed.find(\n      addedProduct => addedProduct.handle === product.handle\n    );\n\n    if (alreadyAdded === undefined) newViewed.unshift(product);\n\n    localStorage.setItem('viewed', JSON.stringify(newViewed));\n  };\n\n  /**\n   * Retrieves viewed products from local storage.\n   * - Does not retrieve the current one being displayed.\n   * @param {Object} currentProduct\n   * @returns\n   */\n  const retrieveViewed = currentProduct => {\n    const viewed = localStorage.getItem('viewed');\n\n    const viewedConverted = JSON.parse(viewed);\n\n    return viewedConverted.filter(\n      product => product.handle !== currentProduct.handle\n    );\n  };\n\n  /**\n   * Get a product by its handle, which will be the same as the page param.\n   */\n  const getProduct = useCallback(async () => {\n    try {\n      let productSelected = {};\n\n      // TO-DO: rewrite this using GraphQl query\n      for (const collection of clientContext.collections) {\n        for (const product of collection.products) {\n          if (product.handle === handle) {\n            productSelected = product;\n            break;\n          }\n        }\n      }\n\n      // Doesn't work\n      // const product = await clientContext.client.product.fetchByHandle(handle);\n\n      if (!productSelected) {\n        throw new Error('No product with that handle');\n      }\n\n      saveViewed(productSelected);\n      const viewed = retrieveViewed(productSelected);\n\n      let imageSrc, imageId;\n\n      if (productSelected.variants.length > 1) {\n        imageSrc = productSelected.variants[0].image.src;\n        imageId = productSelected.variants[0].image.id;\n      } else {\n        imageSrc = productSelected.images[0].src;\n        imageId = productSelected.images[0].id;\n      }\n\n      const relatedProducts = retrieveRelatedProducts(productSelected);\n\n      dispatchProduct({\n        type: 'INITIALIZE',\n        product: productSelected,\n        quantity: 1,\n        imageSrc,\n        imageId,\n        variant: productSelected.variants[0],\n        relatedProducts,\n        viewed,\n      });\n\n      goToTop();\n    } catch (err) {\n      // console.error('Error fetching product:', err.message);\n      history.replace('/*');\n    }\n  }, [handle, history, clientContext, retrieveRelatedProducts]);\n\n  /**\n   * Sets a new main image from the product to display.\n   * @param {String} imageId\n   * @param {String} imageSrc\n   * @param {Number} index\n   */\n  const setImageSelected = (imageId, imageSrc, index = 0) => {\n    if (productChosen.product.variants.length > 1)\n      dispatchProduct({\n        type: 'SET_SELECTION_WITH_VARIANT',\n        imageSrc,\n        imageId,\n        variant: productChosen.product.variants[index],\n      });\n    else\n      dispatchProduct({\n        type: 'SET_SELECTION',\n        imageSrc,\n        imageId,\n      });\n  };\n\n  /**\n   * Sets a variant selection.\n   * @param {Event} event\n   */\n  const setVariantSelected = event => {\n    const variant = JSON.parse(event.target.value);\n\n    dispatchProduct({\n      type: 'SET_SELECTION_WITH_VARIANT',\n      imageSrc: variant.image.src,\n      imageId: variant.image.id,\n      variant,\n    });\n  };\n\n  /**\n   * Render products images as side thumbnails.\n   * - If product has variants, their image will be set.\n   * - If product has no variants, its images will be set.\n   * @returns Thumbnail block.\n   */\n  const renderThumbnails = () => {\n    if (productChosen.product.variants.length > 1)\n      return productChosen.product.variants.map((variant, index) => (\n        <Thumbnail\n          key={index}\n          isVariant={true}\n          product={productChosen.product}\n          image={variant.image}\n          index={index}\n          currentSelection={productChosen.imageId}\n          setImage={setImageSelected}\n        />\n      ));\n\n    return productChosen.product.images.map((image, index) => (\n      <Thumbnail\n        key={index}\n        isVariant={false}\n        product={productChosen.product}\n        image={image}\n        index={index}\n        currentSelection={productChosen.imageId}\n        setImage={setImageSelected}\n      />\n    ));\n  };\n\n  /**\n   * Render product variants names as options.\n   * @returns option block.\n   */\n  const renderVariants = () => {\n    return productChosen.product.variants.map(variant => (\n      <option key={variant.id} value={JSON.stringify(variant)}>\n        {variant.title}\n      </option>\n    ));\n  };\n\n  /**\n   * Updates the quantity value.\n   * @param {Number} quantity\n   */\n  const updateQuantity = quantity => {\n    dispatchProduct({\n      type: 'SET_QUANTITY',\n      quantity,\n    });\n  };\n\n  /**\n   * Adds the current displayed product to cart.\n   */\n  const addToCart = () => {\n    const variant = productChosen.variant;\n\n    const title =\n      productChosen.product.variants.length > 1\n        ? `${productChosen.product.title} - ${productChosen.variant.title}`\n        : productChosen.product.title;\n\n    const quantity = productChosen.quantity;\n\n    const handle = productChosen.product.handle;\n\n    if (\n      checkout.lineItems.findIndex(\n        productVariant => productVariant.id === variant.id\n      ) !== -1\n    )\n      dispatch(updateProductFromCheckout(variant, quantity));\n    else dispatch(addProductToCheckout(variant, title, quantity, handle));\n  };\n\n  const changeNumberOfSlides = useCallback(() => {\n    if (window.innerWidth <= 600) setNumberOfSlides(2);\n    else if (window.innerWidth <= 800) setNumberOfSlides(3);\n    else setNumberOfSlides(4);\n  }, []);\n\n  useEffect(() => {\n    changeNumberOfSlides();\n\n    window.addEventListener('resize', changeNumberOfSlides);\n\n    return () => window.removeEventListener('resize', changeNumberOfSlides);\n  }, [changeNumberOfSlides]);\n\n  useEffect(() => {\n    if (clientContext.collections) getProduct();\n  }, [clientContext.collections, getProduct]);\n\n  return (\n    <Layout>\n      {productChosen && (\n        <section className='product'>\n          <h2 className='heading-secondary heading-secondary--dark product__title'>\n            {productChosen.product.variants.length > 1\n              ? `${productChosen.product.title} - ${productChosen.variant.title}`\n              : productChosen.product.title}\n          </h2>\n          <div className='product__details'>\n            <div className='product__image'>\n              <figure className='product__image-container'>\n                <ReactImageMagnify\n                  imageClassName='product__image '\n                  enlargedImageContainerClassName='product__image '\n                  enlargedImagePosition='over'\n                  {...{\n                    smallImage: {\n                      alt: productChosen.product.images[0].altText\n                        ? productChosen.product.images[0].altText\n                        : productChosen.product.title,\n                      isFluidWidth: true,\n                      src: productChosen.imageSrc,\n                    },\n                    largeImage: {\n                      src: productChosen.imageSrc,\n                      width: 900, // HERE ???\n                      height: 900,\n                    },\n                  }}\n                />\n              </figure>\n\n              <ul className='product__image-variant-list product__image-variant-list--mobile'>\n                {renderThumbnails()}\n              </ul>\n\n              {/* TO-DO the product card should probably be here */}\n\n              <Description\n                description={productChosen.product.descriptionHtml}\n                isThereADescription={\n                  productChosen.product.description.trim() !== ''\n                }\n              />\n\n              {/* TO-DO needs to be a standalone component */}\n              <div className='card product__card product__card--mobile'>\n                <div className='card__details'>\n                  <div className='input__container'>\n                    <p className='paragraph paragraph--capitalized'>\n                      Availability:{' '}\n                      {productChosen.variant.available\n                        ? 'in stock'\n                        : 'out of stock'}\n                    </p>\n                  </div>\n                  {productChosen.product.variants.length > 1 && (\n                    <div className='input__container'>\n                      <p className='paragraph'>Variant: </p>\n                      <select\n                        className='input input__select  input__select--collection'\n                        onChange={setVariantSelected}\n                      >\n                        {renderVariants()}\n                      </select>\n                    </div>\n                  )}\n\n                  <QuantityInput\n                    productQuantity={productChosen.quantity}\n                    setQuantity={updateQuantity}\n                  />\n\n                  <span className='navbar-line'></span>\n\n                  <div className='product__price'>\n                    <p className='paragraph'>\n                      $\n                      {(\n                        productChosen.variant.price *\n                        productChosen.quantity *\n                        clientContext.currencyRate.value\n                      ).toFixed(2)}\n                    </p>\n                  </div>\n\n                  <button\n                    className='button button__black button__black--card-big'\n                    onClick={addToCart}\n                    disabled={\n                      productChosen.quantity === 0 ||\n                      !productChosen.variant.available\n                    }\n                  >\n                    {productChosen.quantity === 0 ||\n                    !productChosen.variant.available ? (\n                      <div className='button__icon-container button__icon-container--big'>\n                        <p className='paragraph card__price card__price--big'>\n                          Sold Out\n                        </p>\n                      </div>\n                    ) : (\n                      <div className='button__icon-container button__icon-container--big'>\n                        <svg className='button__icon button__icon--card-big '>\n                          <use xlinkHref={`${sprite}#icon-cart`}></use>\n                        </svg>\n                        <p className='paragraph card__price card__price--big'>\n                          Add To Cart\n                        </p>\n                      </div>\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              <span className='navbar-line big-margin-top'></span>\n\n              {/* HERE */}\n              <Carousel\n                header={\n                  <h3 className='heading-tertiary heading-tertiary--dark no-margin'>\n                    You may also like:\n                  </h3>\n                }\n                products={productChosen.relatedProducts}\n                naturalSlideWidth={100}\n                naturalSlideHeight={window.innerWidth <= 800 ? 130 : 145}\n                visibleSlides={numberOfSlides}\n                step={numberOfSlides}\n                isPlaying={false}\n                productDetails={true}\n              />\n\n              <span className='navbar-line big-margin-top'></span>\n\n              {/* HERE */}\n              <Carousel\n                header={\n                  <h3 className='heading-tertiary heading-tertiary--dark no-margin'>\n                    Recently Viewed:\n                  </h3>\n                }\n                products={productChosen.viewed}\n                naturalSlideWidth={100}\n                naturalSlideHeight={window.innerWidth <= 800 ? 130 : 145}\n                visibleSlides={numberOfSlides}\n                step={numberOfSlides}\n                isPlaying={false}\n                productDetails={true}\n              />\n            </div>\n          </div>\n        </section>\n      )}\n    </Layout>\n  );\n};\n\nexport default ProductDetailsMobile;\n","import React, { useContext, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\nimport { AuthContext } from '../context/authContext';\nimport { createCustomerCheckout, getAvailableShippingRates } from '../graphql';\nimport axiosInstace from '../axios';\nimport LoadingBar from '../components/LoadingBar';\nimport { ClientContext } from '../context/clientContext';\n\nconst shippingFormReducer = (currentFormState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_LOADING':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tcalcLoading: action.calcLoading,\n\t\t\t\tcalculateError: false,\n\t\t\t};\n\t\tcase 'SET_ERROR':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tcalculateError: true,\n\t\t\t};\n\t\tcase 'INCREASE_TRIAL_COUNT':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\ttrialsCount: ++currentFormState.trialsCount,\n\t\t\t};\n\t\tcase 'SET_AVAILABLE_SHIPPING_RATES':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tavailableShippingRates: action.availableShippingRates,\n\t\t\t\tshippingWasCalculated: true,\n\t\t\t\ttrialsCount: 0,\n\t\t\t\tcalcLoading: false,\n\t\t\t};\n\t\tcase 'SET_FIELD':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\t[action.field]: action.value,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentFormState;\n\t}\n};\n\nconst ShippingCalculator = props => {\n\tconst checkout = useSelector(state => state.checkout);\n\tconst user = useSelector(state => state.user);\n\tconst authContext = useContext(AuthContext);\n\tconst clientContext = useContext(ClientContext);\n\n\tconst [shippingForm, dispatchShippingForm] = useReducer(\n\t\tshippingFormReducer,\n\t\t{\n\t\t\tcountry: user.mainAddress ? user.mainAddress.country : '',\n\t\t\tprovince: user.mainAddress ? user.mainAddress.province : '',\n\t\t\tzip: user.mainAddress ? user.mainAddress.zip : '',\n\t\t\tavailableShippingRates: [],\n\t\t\ttrialsCount: 0,\n\t\t\tshippingWasCalculated: false,\n\t\t\tcalcLoading: false,\n\t\t\tcalculateError: false,\n\t\t}\n\t);\n\n\t/**\n\t * Recursively tries to retrieve shipping rates based\n\t * on the last user checkout, which it creates before requesting.\n\t * - For it to work, country, province and zip must be available.\n\t * - It will attemp 10 times and in case of failing, will throw\n\t * a respective error, else, the available shipping rates.\n\t * @param {Boolean} wasItLoaded is there a shipping rate already.\n\t * @returns\n\t */\n\tconst calculateShipping = async (wasItLoaded = null) => {\n\t\tconst { country, province, zip } = shippingForm;\n\n\t\tif (country && province && zip)\n\t\t\ttry {\n\t\t\t\tdispatchShippingForm({\n\t\t\t\t\ttype: 'SET_LOADING',\n\t\t\t\t\tcalcLoading: true,\n\t\t\t\t});\n\t\t\t\tconst lineItems = checkout.lineItems.map(product => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvariantId: product.id,\n\t\t\t\t\t\tquantity: product.quantity,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tconst shippingAddress = {\n\t\t\t\t\tcountry,\n\t\t\t\t\tprovince,\n\t\t\t\t\tzip,\n\t\t\t\t\tcity: 'any',\n\t\t\t\t};\n\n\t\t\t\tawait axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tcreateCustomerCheckout(\n\t\t\t\t\t\tlineItems,\n\t\t\t\t\t\tshippingAddress,\n\t\t\t\t\t\tuser.email\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tconst shippingRates = await axiosInstace.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tgetAvailableShippingRates(authContext.customerToken)\n\t\t\t\t);\n\n\t\t\t\tdispatchShippingForm({ type: 'INCREASE_TRIAL_COUNT' });\n\n\t\t\t\twasItLoaded =\n\t\t\t\t\tshippingRates.data.data.customer.lastIncompleteCheckout\n\t\t\t\t\t\t.availableShippingRates.shippingRates;\n\n\t\t\t\tif (!wasItLoaded && shippingForm.trialsCount < 10)\n\t\t\t\t\treturn calculateShipping(wasItLoaded);\n\n\t\t\t\tdispatchShippingForm({\n\t\t\t\t\ttype: 'SET_AVAILABLE_SHIPPING_RATES',\n\t\t\t\t\tavailableShippingRates:\n\t\t\t\t\t\tshippingRates.data.data.customer.lastIncompleteCheckout\n\t\t\t\t\t\t\t.availableShippingRates.shippingRates,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tdispatchShippingForm({\n\t\t\t\t\ttype: 'SET_LOADING',\n\t\t\t\t\tcalcLoading: false,\n\t\t\t\t});\n\t\t\t}\n\t\telse {\n\t\t\tdispatchShippingForm({ type: 'SET_ERROR' });\n\t\t}\n\t};\n\n\t/**\n\t * Sets a form field value.\n\t * @param {Event} event\n\t * @param {String} field\n\t */\n\tconst setField = (event, field) => {\n\t\tdispatchShippingForm({\n\t\t\ttype: 'SET_FIELD',\n\t\t\tfield,\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Sets a form dropdown field value.\n\t * @param {String} value\n\t * @param {String} field\n\t */\n\tconst setFieldDropdown = (value, field) => {\n\t\tdispatchShippingForm({ type: 'SET_FIELD', field, value });\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{authContext.customerToken && checkout.lineItems.length > 0 && (\n\t\t\t\t<div className='shipping'>\n\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\tShipping Estimate:\n\t\t\t\t\t</p>\n\t\t\t\t\t{/* COUNTRY */}\n\t\t\t\t\t{/* STATE/PROVINCE */}\n\t\t\t\t\t<div className='auth-form__field auth-form__field--side-by-side'>\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--address'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tCountry\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<CountryDropdown\n\t\t\t\t\t\t\t\tclasses='input input__select input__select--address'\n\t\t\t\t\t\t\t\tvalue={shippingForm.country}\n\t\t\t\t\t\t\t\tpriorityOptions={['US', 'CA', 'GB', 'AU']}\n\t\t\t\t\t\t\t\tdefaultOptionLabel={shippingForm.country}\n\t\t\t\t\t\t\t\tonChange={val =>\n\t\t\t\t\t\t\t\t\tsetFieldDropdown(val, 'country')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--address'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tProvince/State\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<RegionDropdown\n\t\t\t\t\t\t\t\tclasses='input input__select input__select--address'\n\t\t\t\t\t\t\t\tcountry={shippingForm.country}\n\t\t\t\t\t\t\t\tdefaultOptionLabel={shippingForm.province}\n\t\t\t\t\t\t\t\tvalue={shippingForm.province}\n\t\t\t\t\t\t\t\tonChange={val =>\n\t\t\t\t\t\t\t\t\tsetFieldDropdown(val, 'province')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='zip'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tPostal/ZIP code\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='zip'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={20}\n\t\t\t\t\t\t\tvalue={shippingForm.zip}\n\t\t\t\t\t\t\tonChange={event => setField(event, 'zip')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t{!shippingForm.calcLoading ? (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\tonClick={calculateShipping}>\n\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\tcalculate shipping\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar marginTop='3rem' width={400} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{shippingForm.calculateError && (\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tYou have to fill correctly all the fields!\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{shippingForm.availableShippingRates &&\n\t\t\t\t\tshippingForm.availableShippingRates.length > 0 ? (\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tHere are the available shipping rates to that\n\t\t\t\t\t\t\t\tlocation:\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<ul className='shipping__rate-list'>\n\t\t\t\t\t\t\t\t{shippingForm.availableShippingRates.map(\n\t\t\t\t\t\t\t\t\trate => {\n\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\t\t\t\t//currencyCode,\n\t\t\t\t\t\t\t\t\t\t} = rate.priceV2;\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<li key={rate.title}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{rate.title} at{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientContext\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.currencyRate.code\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t\t\t\t\t\t{parseFloat(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tamount *\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientContext\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.currencyRate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t{shippingForm.shippingWasCalculated && (\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tSorry, shipping is not available to that\n\t\t\t\t\t\t\t\t\tlocation.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ShippingCalculator;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Layout from '../hoc/Layout';\nimport LineProducts from '../components/LineProducts';\nimport { ClientContext } from '../context/clientContext';\nimport { removeAllProductsFromCheckout } from '../store/actions/checkout';\nimport { updateCheckoutShippingAddress, updateCheckoutEmail } from '../graphql';\nimport axiosInstace from '../axios';\nimport LoadingBar from '../components/LoadingBar';\nimport ShippingCalculator from '../components/ShippingCalculator';\n\nconst addressFields = {\n  firstName: '',\n  lastName: '',\n  company: '',\n  address1: '',\n  address2: '',\n  city: '',\n  country: '',\n  province: '',\n  zip: '',\n};\n\nconst Cart = props => {\n  const checkout = useSelector(state => state.checkout);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const clientContext = useContext(ClientContext);\n  const history = useHistory();\n  const [textAreaValue, setTextAreaValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textAreaCols, setTextAreaCols] = useState(\n    window.innerWidth > 600 ? '50' : '30'\n  );\n\n  const handleResize = () =>\n    setTextAreaCols(window.innerWidth > 600 ? '50' : '30');\n\n  useEffect(() => {\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  /**\n   * Creates a checkout.\n   * - Treat user products chosen.\n   * - Creates a new shopify checkout.\n   * - Adds custom attributes, such as, notes.\n   * - Adds user's email to checkout(if logged in).\n   * - Adds user's main address to chekout(if there is one).\n   * - Finally, adds products to checkout, opening a new tab\n   * where the user can complete or edit his checkout.\n   */\n  const createCheckout = async () => {\n    try {\n      setLoading(true);\n      const lineItems = checkout.lineItems.map(product => {\n        return {\n          variantId: product.id,\n          quantity: product.quantity,\n        };\n      });\n\n      const newCheckout = await clientContext.client.checkout.create();\n\n      const input = {\n        customAttributes: [\n          {\n            key: 'note',\n            value:\n              textAreaValue.trim() !== ''\n                ? `Customer Note: ${textAreaValue}`\n                : '',\n          },\n        ],\n      };\n\n      await clientContext.client.checkout.updateAttributes(\n        newCheckout.id,\n        input\n      );\n\n      if (user.email)\n        await axiosInstace.post(\n          '/api/graphql.json',\n          updateCheckoutEmail(user.email, newCheckout.id)\n        );\n\n      if (user.mainAddress) {\n        const addressWithoutId = { ...addressFields };\n\n        for (let key in user.mainAddress)\n          if (key !== 'id') addressWithoutId[key] = user.mainAddress[key];\n\n        // const checkoutWithAddress =\n        await axiosInstace.post(\n          '/api/graphql.json',\n          updateCheckoutShippingAddress(addressWithoutId, newCheckout.id)\n        );\n\n        // TO-DO: needs proper treatment, or trust that user will know\n        // that his info is not getting grabbed because of wrong address information\n        // const errors =\n        // \tcheckoutWithAddress.data.data\n        // \t\t.checkoutShippingAddressUpdateV2.checkoutUserErrors;\n\n        //if (errors.length > 0) throw new Error(errors[0].message);\n      }\n\n      const checkoutWithProducts =\n        await clientContext.client.checkout.addLineItems(\n          newCheckout.id,\n          lineItems\n        );\n\n      window.open(checkoutWithProducts.webUrl);\n      dispatch(removeAllProductsFromCheckout());\n      setLoading(false);\n\n      history.push('/');\n    } catch (err) {\n      setLoading(false);\n      console.log('Something terrible happened ', err);\n    }\n  };\n\n  return (\n    <Layout>\n      <div className='cart--page'>\n        <div>\n          <h2 className='heading-secondary heading-secondary--dark'>My Cart</h2>\n          <LineProducts big={true} />\n        </div>\n\n        <div>\n          <ShippingCalculator />\n\n          {/* NOTE: THIS PLACES COMENTS SOMEWHAT INTO THE WRONG PLACE  */}\n          <p className='paragraph paragraph--black'>Additional Comments:</p>\n\n          <textarea\n            className='input input__text-area'\n            name='notes'\n            id='notes'\n            cols={textAreaCols}\n            maxLength={300}\n            value={textAreaValue}\n            onChange={event => setTextAreaValue(event.target.value)}\n            rows='3'\n          ></textarea>\n          {/* /////////////////////////////// */}\n\n          <span className='navbar-line small-margin-top'></span>\n\n          <div className='cart__total'>\n            <p className='paragraph paragraph--black'>Total: </p>\n            <div className='product__price'>\n              <p className='paragraph paragraph--black'>\n                $\n                {(\n                  checkout.totalPrice * clientContext.currencyRate.value\n                ).toFixed(2)}\n              </p>\n            </div>\n          </div>\n\n          {!loading ? (\n            <button\n              className='button button__black button__black--card-big'\n              disabled={checkout.totalPrice === 0}\n              onClick={createCheckout}\n            >\n              <p className='paragraph card__price card__price--big cart__button-text'>\n                proceed to checkout\n              </p>\n            </button>\n          ) : (\n            <LoadingBar marginTop='3rem' width={400} />\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Cart;\n","import React, { useReducer, useContext, useState } from 'react';\nimport validate from 'validate.js';\nimport { useHistory } from 'react-router-dom';\n\nimport axiosInstance from '../axios';\nimport { createUser, getCustomerToken } from '../graphql';\nimport Layout from '../hoc/Layout';\nimport { AuthContext } from '../context/authContext';\nimport LoadingBar from '../components/LoadingBar';\n\nconst signupFormReducer = (currentFormState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_USERNAME':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tusername: action.username,\n\t\t\t};\n\t\tcase 'SET_FIRST_NAME':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tname: action.name,\n\t\t\t};\n\t\tcase 'SET_LAST_NAME':\n\t\t\treturn { ...currentFormState, lastName: action.lastName };\n\t\tcase 'SET_EMAIL':\n\t\t\treturn { ...currentFormState, email: action.email };\n\t\tcase 'SET_PASSWORD':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tpassword: action.password,\n\t\t\t};\n\t\tcase 'SET_CONFIRM_PASSWORD':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tpasswordConfirm: action.passwordConfirm,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentFormState;\n\t}\n};\n\nconst signupFormErrorReducer = (currentFormState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_PASSWORD_IS_WITH_ERROR':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tpasswordIsWithError: action.passwordIsWithError,\n\t\t\t};\n\t\tcase 'SET_EMAIL_IS_WITH_ERROR':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\temailIsWithError: action.emailIsWithError,\n\t\t\t};\n\t\tcase 'SET_EMAIL_IS_TAKEN':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tusernameTaken: false,\n\t\t\t\temailIsTaken: true,\n\t\t\t\temailPending: false,\n\t\t\t};\n\t\tcase 'SET_USER_IS_TAKEN':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tusernameTaken: true,\n\t\t\t\temailIsTaken: false,\n\t\t\t\temailPending: false,\n\t\t\t};\n\t\tcase 'SET_EMAIL_IS_PENDING':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\tusernameTaken: false,\n\t\t\t\temailIsTaken: false,\n\t\t\t\temailPending: true,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentFormState;\n\t}\n};\n\nconst SignUp = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst history = useHistory();\n\tconst [loading, setLoading] = useState(false);\n\n\tconst [signupForm, dispatchSignupForm] = useReducer(signupFormReducer, {\n\t\tusername: '',\n\t\tname: '',\n\t\tlastName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tpasswordConfirm: '',\n\t});\n\n\tconst [signupFormError, dispatchSignupFormError] = useReducer(\n\t\tsignupFormErrorReducer,\n\t\t{\n\t\t\tpasswordError: \"Passwords don't match.\",\n\t\t\temailError: 'This email format is invalid.',\n\t\t\temailTakenError: 'This email is already in use.',\n\t\t\temailPendingError:\n\t\t\t\t'A verification link was already sent to your email.',\n\t\t\tuserNameTakenError: 'This username already exists.',\n\t\t\tpasswordIsWithError: false,\n\t\t\temailIsWithError: false,\n\t\t\temailIsTaken: false,\n\t\t\tusernameTaken: false,\n\t\t\temailPending: false,\n\t\t}\n\t);\n\n\t/**\n\t * Checks whether the string 'email' is in\n\t * a valid email format.\n\t * - Will set an error message in case of invalidation.\n\t * @returns boolean value\n\t */\n\tconst validEmail = () => {\n\t\tconst constraints = {\n\t\t\tfrom: { email: true },\n\t\t};\n\n\t\tconst isValid = validate({ from: signupForm.email }, constraints);\n\n\t\tif (isValid !== undefined)\n\t\t\tdispatchSignupFormError({\n\t\t\t\ttype: 'SET_EMAIL_IS_WITH_ERROR',\n\t\t\t\temailIsWithError: true,\n\t\t\t});\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Checks whether the passwords are equal.\n\t * - Will set an error message in case of invalidation.\n\t * @returns boolean value\n\t */\n\tconst equalPassword = () => {\n\t\tconst constraints = {\n\t\t\tconfirmPassword: {\n\t\t\t\tequality: 'password',\n\t\t\t},\n\t\t};\n\n\t\tconst isValid = validate(\n\t\t\t{\n\t\t\t\tpassword: signupForm.password,\n\t\t\t\tconfirmPassword: signupForm.passwordConfirm,\n\t\t\t},\n\t\t\tconstraints\n\t\t);\n\n\t\tif (isValid !== undefined)\n\t\t\tdispatchSignupFormError({\n\t\t\t\ttype: 'SET_PASSWORD_IS_WITH_ERROR',\n\t\t\t\tpasswordIsWithError: true,\n\t\t\t});\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Validates input fields and if everything\n\t * is valid, creates an user account along with\n\t * the information give.\n\t * @param {Event} event\n\t */\n\tconst validateFields = async event => {\n\t\tevent.preventDefault();\n\n\t\tconst isEmailValid = validEmail();\n\t\tconst isPasswordValid = equalPassword();\n\n\t\tif (isEmailValid)\n\t\t\tdispatchSignupFormError({\n\t\t\t\ttype: 'SET_EMAIL_IS_WITH_ERROR',\n\t\t\t\temailIsWithError: false,\n\t\t\t});\n\t\tif (isPasswordValid)\n\t\t\tdispatchSignupFormError({\n\t\t\t\ttype: 'SET_PASSWORD_IS_WITH_ERROR',\n\t\t\t\tpasswordIsWithError: false,\n\t\t\t});\n\n\t\ttry {\n\t\t\tif (isEmailValid && isPasswordValid) {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst createdUser = await axiosInstance.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tcreateUser(\n\t\t\t\t\t\tsignupForm.name,\n\t\t\t\t\t\tsignupForm.lastName,\n\t\t\t\t\t\tsignupForm.email,\n\t\t\t\t\t\tsignupForm.password\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\tcreatedUser.data.data.customerCreate.customerUserErrors\n\t\t\t\t\t\t.length > 0\n\t\t\t\t) {\n\t\t\t\t\tconst errorMessage =\n\t\t\t\t\t\tcreatedUser.data.data.customerCreate\n\t\t\t\t\t\t\t.customerUserErrors[0].message;\n\n\t\t\t\t\tthrow new Error(errorMessage);\n\t\t\t\t}\n\n\t\t\t\tconst customerToken = await axiosInstance.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tgetCustomerToken(signupForm.email, signupForm.password)\n\t\t\t\t);\n\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t'shopifyCustomerToken',\n\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\tcustomerToken.data.data.customerAccessTokenCreate\n\t\t\t\t\t\t\t.customerAccessToken\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tsetLoading(false);\n\t\t\t\tauthContext.userIsOnline();\n\n\t\t\t\thistory.replace('/');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\tif (err.message === 'Email has already been taken')\n\t\t\t\tdispatchSignupFormError({ type: 'SET_EMAIL_IS_TAKEN' });\n\n\t\t\tlet error = err.message;\n\t\t\terror = error.split(',');\n\n\t\t\tif (\n\t\t\t\terror.length > 1 &&\n\t\t\t\terror[1] ===\n\t\t\t\t\t' please click the link included to verify your email address.'\n\t\t\t) {\n\t\t\t\tdispatchSignupFormError({ type: 'SET_EMAIL_IS_PENDING' });\n\t\t\t}\n\n\t\t\t// go to connection error page\n\t\t\tconsole.log('Something went terribly wrong! ', err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='auth-form auth-form__box'>\n\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\tCreate My Account\n\t\t\t\t</h2>\n\n\t\t\t\t<form className='auth-form__form' onSubmit={validateFields}>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='email'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={signupForm.email}\n\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\tdispatchSignupForm({\n\t\t\t\t\t\t\t\t\ttype: 'SET_EMAIL',\n\t\t\t\t\t\t\t\t\temail: event.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{signupFormError.emailIsWithError && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t{signupFormError.emailError}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{signupFormError.emailIsTaken && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t{signupFormError.emailTakenError}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{signupFormError.emailPending && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--validation'>\n\t\t\t\t\t\t\t\t{signupFormError.emailPendingError}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='password'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\tminLength={5}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={signupForm.password}\n\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\tdispatchSignupForm({\n\t\t\t\t\t\t\t\t\ttype: 'SET_PASSWORD',\n\t\t\t\t\t\t\t\t\tpassword: event.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='password-retype'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tRetype The Password\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password-retype'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\tminLength={5}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={signupForm.passwordConfirm}\n\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\tdispatchSignupForm({\n\t\t\t\t\t\t\t\t\ttype: 'SET_CONFIRM_PASSWORD',\n\t\t\t\t\t\t\t\t\tpasswordConfirm: event.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{signupFormError.passwordIsWithError && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t{signupFormError.passwordError}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\tonClick={() => {}}>\n\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar loading={loading} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default SignUp;\n","import React, { useContext, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Layout from '../hoc/Layout';\nimport { AuthContext } from '../context/authContext';\nimport LoadingBar from '../components/LoadingBar';\nimport { getCustomerToken } from '../graphql';\nimport axiosInstance from '../axios';\n\nconst Login = props => {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst authContext = useContext(AuthContext);\n\tconst [loading, setLoading] = useState(false);\n\tconst [loginError, setLoginError] = useState(false);\n\tconst history = useHistory();\n\n\t// TO-DO: login attempts limititation functionality by account 5+3\n\t/**\n\t * Logs user in and stores his token.\n\t * - redirects to home page if successfully loged in.\n\t * @param {Event} event\n\t */\n\tconst login = async event => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst customerToken = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetCustomerToken(email, password)\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\tcustomerToken.data.data.customerAccessTokenCreate\n\t\t\t\t\t.customerUserErrors.length > 0\n\t\t\t)\n\t\t\t\tthrow new Error(\n\t\t\t\t\tcustomerToken.data.data.customerAccessTokenCreate.customerUserErrors.message\n\t\t\t\t);\n\n\t\t\tconst { customerAccessToken } =\n\t\t\t\tcustomerToken.data.data.customerAccessTokenCreate;\n\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'shopifyCustomerToken',\n\t\t\t\tJSON.stringify(customerAccessToken)\n\t\t\t);\n\n\t\t\tsetLoginError(false);\n\t\t\tsetLoading(false);\n\t\t\tawait authContext.login(customerAccessToken.accessToken);\n\n\t\t\thistory.replace('/');\n\t\t} catch (err) {\n\t\t\tsetLoginError(true);\n\t\t\tsetLoading(false);\n\t\t\t// else connection error\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='auth-form auth-form__box'>\n\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\tLog In\n\t\t\t\t</h2>\n\n\t\t\t\t<form className='auth-form__form' onSubmit={login}>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='email'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black paragraph--capitalized'>\n\t\t\t\t\t\t\temail\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={event => setEmail(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{loginError && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\tIncorrect email or password.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='password'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black paragraph--capitalized'>\n\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={event => setPassword(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<Link to='/forget' className='auth-form__forget-link'>\n\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tForgot your password?\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\tonClick={() => {}}>\n\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar loading={loading} width={200} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div className='login__footer'>\n\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\tDon't have an account?\n\t\t\t\t</h4>\n\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\tRegister with us for a faster checkout, to track the status\n\t\t\t\t\tof your order and more.\n\t\t\t\t</p>\n\t\t\t\t<button\n\t\t\t\t\tclassName='button button__black button__black--account  button__black--account-big'\n\t\t\t\t\tonClick={() => history.push('/signup')}>\n\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\tcreate my account\n\t\t\t\t\t</p>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Login;\n","import React from 'react';\n\nimport Layout from '../hoc/Layout';\n\n// TO-DO\nconst NotFound = props => {\n\treturn (\n\t\t<Layout>\n\t\t\t<section className='home'>\n\t\t\t\t<h1>There is nothing here</h1>\n\t\t\t</section>\n\t\t</Layout>\n\t);\n};\n\nexport default NotFound;\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\nimport { AuthContext } from '../context/authContext';\n\nconst NavbarVertical = props => {\n  const authContext = useContext(AuthContext);\n\n  const [isBiggerWindow, setIsBiggerWindow] = useState(\n    window.innerWidth > 1140\n  );\n  const [isSmallerWindow, setIsSmallerWindow] = useState(\n    window.innerWidth > 600\n  );\n\n  const handleResize = useCallback(() => {\n    setIsBiggerWindow(window.innerWidth > 1140);\n    setIsSmallerWindow(window.innerWidth > 600);\n  }, []);\n\n  const logout = async () => {\n    try {\n      await authContext.logout();\n    } catch (err) {\n      // connection error\n      console.log('D:', err);\n    }\n  };\n\n  useEffect(() => {\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [handleResize]);\n\n  return (\n    <nav className='navbar-vertical'>\n      <ul className='navbar-vertical__list navbar-vertical__list--profile'>\n        <li className='navbar-vertical__list-item'>\n          <NavLink\n            to={`/me/settings`}\n            className='paragraph navbar-vertical__link'\n            activeClassName='navbar-vertical__link--active'\n          >\n            <svg className='button__icon '>\n              <use xlinkHref={`${sprite}#icon-cog`}></use>\n            </svg>\n            {isSmallerWindow && 'Settings'}\n          </NavLink>\n        </li>\n        <li className='navbar-vertical__list-item'>\n          <NavLink\n            to={`/me/orders`}\n            className='paragraph navbar-vertical__link'\n            activeClassName='navbar-vertical__link--active'\n          >\n            <svg className='button__icon '>\n              <use xlinkHref={`${sprite}#icon-dropbox`}></use>\n            </svg>\n            {isSmallerWindow && 'My Orders'}\n          </NavLink>\n        </li>\n        <li className='navbar-vertical__list-item'>\n          <NavLink\n            to={`/me/address`}\n            className='paragraph navbar-vertical__link'\n            activeClassName='navbar-vertical__link--active'\n          >\n            <svg className='button__icon '>\n              <use xlinkHref={`${sprite}#icon-location2`}></use>\n            </svg>\n            {isSmallerWindow && 'My Address'}\n          </NavLink>\n        </li>\n        {isBiggerWindow && (\n          <li className='navbar-vertical__list-item'>\n            <NavLink\n              to='/'\n              className='paragraph navbar-vertical__link'\n              onClick={logout}\n            >\n              <svg className='button__icon'>\n                <use xlinkHref={`${sprite}#icon-exit`}></use>\n              </svg>\n              <p className='paragraph'>Log out</p>\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavbarVertical;\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport validate from 'validate.js';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Layout from '../hoc/Layout';\nimport NavbarVertical from '../components/NavbarVertical';\nimport { updateCustomer, updateCustomerPassword } from '../graphql';\nimport axiosInstace from '../axios';\nimport { AuthContext } from '../context/authContext';\nimport { updateUserDetails } from '../store/actions/user';\nimport LoadingBar from '../components/LoadingBar';\n\nconst Settings = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst user = useSelector(state => state.user);\n\tconst distpatch = useDispatch();\n\n\tconst [lastName, setLastName] = useState('');\n\tconst [firstName, setFirstName] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [passwordConfirm, setPasswordConfirm] = useState('');\n\tconst [passwordNotEqual, setPasswordNotEqual] = useState(false);\n\tconst [emailNotValid, setEmailNotValid] = useState(false);\n\tconst [emailTaken, setEmailTaken] = useState(false);\n\tconst [loadingSettings, setLoadingSettings] = useState(false);\n\tconst [loadingPassword, setLoadingPassword] = useState(false);\n\n\t/**\n\t * Retrieves user data from the reducer storage.\n\t */\n\tconst retrieveCustomerData = useCallback(() => {\n\t\tsetLastName(user.lastName);\n\t\tsetFirstName(user.firstName);\n\t\tsetEmail(user.email);\n\t}, [user]);\n\n\tuseEffect(() => {\n\t\tretrieveCustomerData();\n\t}, [retrieveCustomerData]);\n\n\t/**\n\t * Checks whether the string 'email' is in\n\t * a valid email format.\n\t * @returns boolean value\n\t */\n\tconst validEmail = () => {\n\t\tconst constraints = {\n\t\t\tfrom: { email: true },\n\t\t};\n\n\t\tconst isValid = validate({ from: email }, constraints);\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Checks whether the passwords are equal.\n\t * @returns boolean value\n\t */\n\tconst equalPassword = () => {\n\t\tconst constraints = {\n\t\t\tconfirmPassword: {\n\t\t\t\tequality: 'password',\n\t\t\t},\n\t\t};\n\n\t\tconst isValid = validate(\n\t\t\t{\n\t\t\t\tpassword: password,\n\t\t\t\tconfirmPassword: passwordConfirm,\n\t\t\t},\n\t\t\tconstraints\n\t\t);\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Updates user password.\n\t * - Only updates if password and its confirmation\n\t * password matches and are greater than 5 characters.\n\t * @returns null\n\t */\n\tconst updatePassword = async () => {\n\t\ttry {\n\t\t\tconst isPasswordValid = equalPassword();\n\n\t\t\tif (\n\t\t\t\t!isPasswordValid ||\n\t\t\t\tpassword.trim() === '' ||\n\t\t\t\tpassword.length < 5\n\t\t\t) {\n\t\t\t\tsetPasswordNotEqual(true);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetPasswordNotEqual(false);\n\t\t\tsetLoadingPassword(true);\n\n\t\t\tconst res = await axiosInstace.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tupdateCustomerPassword(authContext.customerToken, password)\n\t\t\t);\n\n\t\t\tif (res.data.data.customerUpdate.customerUserErrors.length > 0) {\n\t\t\t\tconst errorMessage =\n\t\t\t\t\tres.data.data.customerUpdate.customerUserErrors[0].message;\n\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\t\t\tsetLoadingPassword(false);\n\n\t\t\tauthContext.logout();\n\t\t} catch (err) {\n\t\t\t// CONNECTION ERROR\n\t\t\tsetLoadingPassword(false);\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\t/**\n\t * Updates user settings.\n\t * - Except password.\n\t * @returns\n\t */\n\tconst updateSettings = async () => {\n\t\ttry {\n\t\t\tconst isEmailValid = validEmail();\n\n\t\t\tif (!isEmailValid) {\n\t\t\t\tsetEmailTaken(false);\n\t\t\t\tsetEmailNotValid(true);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetEmailNotValid(false);\n\t\t\tsetEmailTaken(false);\n\t\t\tsetLoadingSettings(true);\n\n\t\t\tconst res = await axiosInstace.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tupdateCustomer(\n\t\t\t\t\tauthContext.customerToken,\n\t\t\t\t\tfirstName.trim(),\n\t\t\t\t\tlastName.trim(),\n\t\t\t\t\temail\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif (res.data.data.customerUpdate.customerUserErrors.length > 0) {\n\t\t\t\tconst errorMessage =\n\t\t\t\t\tres.data.data.customerUpdate.customerUserErrors[0].message;\n\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\n\t\t\tsetLoadingSettings(false);\n\t\t\tdistpatch(\n\t\t\t\tupdateUserDetails(firstName.trim(), lastName.trim(), email)\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tsetEmailTaken(true);\n\t\t\tsetLoadingSettings(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='profile'>\n\t\t\t\t<NavbarVertical />\n\t\t\t\t<div className='auth-form'>\n\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\t\tMy Account\n\t\t\t\t\t</h2>\n\n\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\t\tAccount Details\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<div className='auth-form__form'>\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='email'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={event => setEmail(event.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{emailNotValid && (\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t\tThis Email format is invalid\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{emailTaken && (\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t\tEmail has already been taken.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--side-by-side'>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='first-name'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tFirst Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='first-name'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetFirstName(event.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='last-name'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tLast Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='last-name'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetLastName(event.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t\t{!loadingSettings ? (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\tonClick={updateSettings}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tUpdate My Settings\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<LoadingBar\n\t\t\t\t\t\t\t\t\twidth={350}\n\t\t\t\t\t\t\t\t\tloading={loadingSettings}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark big-margin-top'>\n\t\t\t\t\t\t\tPassword Change\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<div className='auth-form__form'>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='new-password'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tNew Password\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tid='new-password'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\t\tminLength={5}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetPassword(event.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{passwordNotEqual && (\n\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t\t\tPasswords don't match or are too short\n\t\t\t\t\t\t\t\t\t\t(min. 5).\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='retype-password'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tRetype Your New Password\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tid='retype-password'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\t\tminLength={5}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tvalue={passwordConfirm}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetPasswordConfirm(event.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t\t\t{!loadingPassword ? (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\t\tonClick={updatePassword}>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\t\tUpdate My Password\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<LoadingBar\n\t\t\t\t\t\t\t\t\t\twidth={350}\n\t\t\t\t\t\t\t\t\t\tloading={loadingPassword}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Settings;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst OrderCard = props => {\n\tconst { order } = props;\n\n\treturn (\n\t\t<div className='order'>\n\t\t\t<div className='order__header'>\n\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\tOrder {order.name}\n\t\t\t\t</h3>\n\t\t\t\t{/* <span>{switchOrderStatus()}</span> */}\n\t\t\t</div>\n\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\tPlaced on{' '}\n\t\t\t\t{new Date(order.processedAt).toLocaleDateString('en', {\n\t\t\t\t\tweekday: 'long',\n\t\t\t\t\tyear: 'numeric',\n\t\t\t\t\tmonth: 'long',\n\t\t\t\t\tday: 'numeric',\n\t\t\t\t})}{' '}\n\t\t\t\tat {new Date(order.processedAt).toLocaleTimeString('en')}\n\t\t\t</p>\n\t\t\t<div className='order__content'>\n\t\t\t\t<div>\n\t\t\t\t\t{order.lineItems.map(lineItem => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={lineItem.variant.product.handle}\n\t\t\t\t\t\t\tclassName='order__table-row'>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tProduct\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tclassName='card__link order__link'\n\t\t\t\t\t\t\t\t\tto={`/product/${lineItem.variant.product.handle}`}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black order__product-title'>\n\t\t\t\t\t\t\t\t\t\t{lineItem.title}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tSKU\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t{lineItem.variant.sku}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tPrice\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t{lineItem.variant.priceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t\t\t{lineItem.variant.priceV2.amount}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tQuantity\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t{lineItem.quantity}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\t\t\tTotal\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\t{lineItem.variant.priceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\tlineItem.variant.priceV2.amount *\n\t\t\t\t\t\t\t\t\t\tlineItem.quantity\n\t\t\t\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className='navbar-line order__line'></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className='order__table-foot'>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tSubtotal\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.subtotalPriceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.subtotalPriceV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tShipping\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.totalShippingPriceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.totalShippingPriceV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tTaxes\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.totalTaxV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.totalTaxV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tRefund\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.totalRefundedV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.totalRefundedV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='order__table-data'>\n\t\t\t\t\t\t<h4 className='heading-fourtiary heading-fourtiary--dark'>\n\t\t\t\t\t\t\tTotal\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className='paragraph paragraph--black'>\n\t\t\t\t\t\t\t{order.totalPriceV2.currencyCode}${' '}\n\t\t\t\t\t\t\t{order.totalPriceV2.amount}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default OrderCard;\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Layout from '../hoc/Layout';\nimport NavbarVertical from '../components/NavbarVertical';\nimport { getCustomerOrders } from '../graphql';\nimport axiosInstance from '../axios';\nimport { AuthContext } from '../context/authContext';\nimport OrderCard from '../components/OrderCard';\nimport { setUserOrders, updateUserOrders } from '../store/actions/user';\nimport LoadingBar from '../components/LoadingBar';\n\nconst Orders = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst user = useSelector(state => state.user);\n\tconst [currPointer, setCurrPointer] = useState();\n\tconst [hasMore, setHasMore] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst [loadingMoreOrders, setLoadingMoreOrders] = useState(false);\n\tconst dispatch = useDispatch();\n\n\t/**\n\t * Formats an order coming from shopify to\n\t * an easier to manipulate version.\n\t * @param {Object} orders\n\t * @returns treated orders.\n\t */\n\tconst formatResults = orders => {\n\t\tconst ordersFormatted = orders.data.data.customer.orders.edges.map(\n\t\t\tel => el.node\n\t\t);\n\n\t\tfor (let i = 0; i < ordersFormatted.length; ++i) {\n\t\t\tconst formattedLineItems = [];\n\n\t\t\tfor (\n\t\t\t\tlet j = 0;\n\t\t\t\tj < ordersFormatted[i].lineItems.edges.length;\n\t\t\t\t++j\n\t\t\t) {\n\t\t\t\tformattedLineItems.push(\n\t\t\t\t\tordersFormatted[i].lineItems.edges[j].node\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tordersFormatted[i].lineItems = formattedLineItems;\n\t\t}\n\n\t\treturn ordersFormatted;\n\t};\n\n\t/**\n\t * Loads newer orders.\n\t */\n\tconst loadNewerOrders = async () => {\n\t\ttry {\n\t\t\tsetLoadingMoreOrders(true);\n\t\t\tconst orders = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetCustomerOrders(\n\t\t\t\t\tauthContext.customerToken,\n\t\t\t\t\t`first: 5, after: \"${currPointer}\"`\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tsetHasMore(orders.data.data.customer.orders.pageInfo.hasNextPage);\n\t\t\tsetCurrPointer(\n\t\t\t\torders.data.data.customer.orders.edges[\n\t\t\t\t\torders.data.data.customer.orders.edges.length - 1\n\t\t\t\t].cursor\n\t\t\t);\n\n\t\t\tconst ordersFormatted = formatResults(orders);\n\n\t\t\tdispatch(updateUserOrders(ordersFormatted));\n\t\t\tsetLoadingMoreOrders(false);\n\t\t} catch (err) {\n\t\t\tsetLoadingMoreOrders(false);\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\t/**\n\t * Gets all user orders.\n\t */\n\tconst getOrders = useCallback(async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst orders = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tgetCustomerOrders(authContext.customerToken)\n\t\t\t);\n\n\t\t\tsetHasMore(orders.data.data.customer.orders.pageInfo.hasNextPage);\n\t\t\tsetCurrPointer(\n\t\t\t\torders.data.data.customer.orders.edges[\n\t\t\t\t\torders.data.data.customer.orders.edges.length - 1\n\t\t\t\t].cursor\n\t\t\t);\n\n\t\t\tconst ordersFormatted = formatResults(orders);\n\n\t\t\tdispatch(setUserOrders(ordersFormatted));\n\t\t\tsetLoading(false);\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\t//console.log(err);\n\t\t}\n\t}, [authContext.customerToken, dispatch]);\n\n\tuseEffect(() => {\n\t\tgetOrders();\n\t}, [getOrders]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='profile'>\n\t\t\t\t<NavbarVertical />\n\t\t\t\t<div className='auth-form'>\n\t\t\t\t\t<div className='auth-form__field-button  auth-form__field-button--with-title'>\n\t\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\t\t\tMy Orders\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t{hasMore && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{!loadingMoreOrders ? (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-small'\n\t\t\t\t\t\t\t\t\t\tonClick={loadNewerOrders}>\n\t\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price cart__button-text'>\n\t\t\t\t\t\t\t\t\t\t\tLoad Newer Orders\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<LoadingBar\n\t\t\t\t\t\t\t\t\t\tloading={loadingMoreOrders}\n\t\t\t\t\t\t\t\t\t\tmarginTop='3rem'\n\t\t\t\t\t\t\t\t\t\twidth={150}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<LoadingBar\n\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\tmarginTop='5rem'\n\t\t\t\t\t\t\twidth={150}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{user.orders ? (\n\t\t\t\t\t\t\t\tuser.orders.map((order, index) => (\n\t\t\t\t\t\t\t\t\t<OrderCard key={index} order={order} />\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\t\t\t\t\t-- ...you haven't ordered anything yet :(.\n\t\t\t\t\t\t\t\t\t--\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Orders;\n","import React, { useContext, useReducer, useEffect, useState } from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Layout from '../hoc/Layout';\nimport NavbarVertical from '../components/NavbarVertical';\nimport { createCustomerAddress, updateCustomerAddress } from '../graphql';\nimport axiosInstance from '../axios';\nimport { AuthContext } from '../context/authContext';\nimport { updateUserAddress } from '../store/actions/user';\nimport LoadingBar from '../components/LoadingBar';\n\nconst addressFormReducer = (currentFormState, action) => {\n\tswitch (action.type) {\n\t\tcase 'INITIALIZE':\n\t\t\treturn {\n\t\t\t\t...action.address,\n\t\t\t};\n\t\tcase 'SET_FIELD':\n\t\t\treturn {\n\t\t\t\t...currentFormState,\n\t\t\t\t[action.field]: action.value,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn currentFormState;\n\t}\n};\n\nconst addressFields = {\n\tfirstName: '',\n\tlastName: '',\n\tcompany: '',\n\taddress1: '',\n\taddress2: '',\n\tcity: '',\n\tcountry: '',\n\tprovince: '',\n\tzip: '',\n};\n\nconst Address = props => {\n\tconst authContext = useContext(AuthContext);\n\tconst user = useSelector(state => state.user);\n\tconst dispatch = useDispatch();\n\n\tconst [addressForm, dispatchAddressForm] = useReducer(addressFormReducer, {\n\t\t...addressFields,\n\t});\n\tconst [loading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (user.mainAddress)\n\t\t\tdispatchAddressForm({\n\t\t\t\ttype: 'INITIALIZE',\n\t\t\t\taddress: user.mainAddress,\n\t\t\t});\n\t}, [user.mainAddress]);\n\n\t/**\n\t * Updates current user address.\n\t * - If the user has not address, it will attempt to create it.\n\t * - If user has an address, then it will be updated.\n\t * - In both cases, the address is then stored in the 'user' reducer.\n\t * @param {Event} event\n\t * @returns null\n\t */\n\tconst updateAddress = async event => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tsetLoading(true);\n\n\t\t\t// CREATE ADDRESS\n\t\t\tif (!user.mainAddress) {\n\t\t\t\tconst customerAddress = await axiosInstance.post(\n\t\t\t\t\t'/api/graphql.json',\n\t\t\t\t\tcreateCustomerAddress(\n\t\t\t\t\t\tauthContext.customerToken,\n\t\t\t\t\t\taddressForm\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tconst {\n\t\t\t\t\tid,\n\t\t\t\t} = customerAddress.data.data.customerAddressCreate.customerAddress;\n\n\t\t\t\tsetLoading(false);\n\t\t\t\tdispatch(updateUserAddress({ ...addressForm, id }));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// ELSE UPDATE\n\t\t\tconst addressId = addressForm.id;\n\t\t\tlet addressWithoutId = {\n\t\t\t\t...addressFields,\n\t\t\t};\n\n\t\t\tfor (let key in addressForm)\n\t\t\t\tif (key !== 'id') addressWithoutId[key] = addressForm[key];\n\n\t\t\tawait axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\tupdateCustomerAddress(\n\t\t\t\t\tauthContext.customerToken,\n\t\t\t\t\taddressId,\n\t\t\t\t\taddressWithoutId\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tsetLoading(false);\n\t\t\tdispatch(updateUserAddress({ ...addressWithoutId, id: addressId }));\n\t\t} catch (err) {\n\t\t\t// certainly a connection error\n\t\t\tsetLoading(false);\n\t\t\tconsole.log('Err: ', err);\n\t\t}\n\t};\n\n\t/**\n\t * Sets a form field value.\n\t * @param {Event} event\n\t * @param {String} field\n\t */\n\tconst setField = (event, field) => {\n\t\tdispatchAddressForm({\n\t\t\ttype: 'SET_FIELD',\n\t\t\tfield,\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Sets a form dropdown field value.\n\t * @param {String} value\n\t * @param {String} field\n\t */\n\tconst setFieldDropdown = (value, field) => {\n\t\tdispatchAddressForm({ type: 'SET_FIELD', field, value });\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='profile'>\n\t\t\t\t<NavbarVertical />\n\t\t\t\t<div className='auth-form'>\n\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\t\tMy Address\n\t\t\t\t\t</h2>\n\n\t\t\t\t\t<form className='auth-form__form' onSubmit={updateAddress}>\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--side-by-side'>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='first-name'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tFirst Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='first-name'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\t\t\tvalue={addressForm.firstName}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetField(event, 'firstName')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='last-name'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tLast Name\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tid='last-name'\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\tmaxLength={100}\n\t\t\t\t\t\t\t\t\tvalue={addressForm.lastName}\n\t\t\t\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\t\t\t\tsetField(event, 'lastName')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='company'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tCompany\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='company'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={addressForm.company}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'company')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='address'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tAddress\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='address'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={addressForm.address1}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'address1')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='additional'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tApartment, suite, etc.\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='additional'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={addressForm.address2}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'address2')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tCity\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='city'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\t\tvalue={addressForm.city}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'city')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* COUNTRY */}\n\t\t\t\t\t\t{/* STATE/PROVINCE */}\n\t\t\t\t\t\t<div className='auth-form__field auth-form__field--side-by-side'>\n\t\t\t\t\t\t\t<div className='auth-form__field auth-form__field--address'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tCountry\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<CountryDropdown\n\t\t\t\t\t\t\t\t\tclasses='input input__select input__select--address'\n\t\t\t\t\t\t\t\t\tvalue={addressForm.country}\n\t\t\t\t\t\t\t\t\tdefaultOptionLabel={addressForm.country}\n\t\t\t\t\t\t\t\t\tpriorityOptions={['US', 'CA', 'GB', 'AU']}\n\t\t\t\t\t\t\t\t\tonChange={val =>\n\t\t\t\t\t\t\t\t\t\tsetFieldDropdown(val, 'country')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='auth-form__field auth-form__field--address'>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor='city'\n\t\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\t\tProvince/State\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<RegionDropdown\n\t\t\t\t\t\t\t\t\tclasses='input input__select input__select--address'\n\t\t\t\t\t\t\t\t\tcountry={addressForm.country}\n\t\t\t\t\t\t\t\t\tdefaultOptionLabel={addressForm.province}\n\t\t\t\t\t\t\t\t\tvalue={addressForm.province}\n\t\t\t\t\t\t\t\t\tonChange={val =>\n\t\t\t\t\t\t\t\t\t\tsetFieldDropdown(val, 'province')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor='zip'\n\t\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\t\tPostal/ZIP code\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='zip'\n\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\tmaxLength={20}\n\t\t\t\t\t\t\t\tvalue={addressForm.zip}\n\t\t\t\t\t\t\t\tonChange={event => setField(event, 'zip')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\t\tonClick={() => {}}>\n\t\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\t\tUpdate My Address\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<LoadingBar width={350} loading={loading} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Address;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Settings from './Settings';\nimport Orders from './Orders';\nimport Address from './Address';\n\nconst Profile = props => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path='/me/address'>\n\t\t\t\t<Address />\n\t\t\t</Route>\n\t\t\t<Route path='/me/orders'>\n\t\t\t\t<Orders />\n\t\t\t</Route>\n\t\t\t<Route path='/me/settings'>\n\t\t\t\t<Settings />\n\t\t\t</Route>\n\t\t\t<Redirect from='/me' to='/me/settings' />\n\t\t</Switch>\n\t);\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport validate from 'validate.js';\n\nimport axiosInstance from '../axios';\nimport { recoverCustomerPassword } from '../graphql';\nimport Layout from '../hoc/Layout';\nimport LoadingBar from '../components/LoadingBar';\n\nconst Forget = props => {\n\tconst history = useHistory();\n\n\tconst [email, setEmail] = useState('');\n\tconst [invalidEmailMessage, setInvalidEmailMessage] = useState();\n\tconst [loading, setLoading] = useState(false);\n\n\t/**\n\t * Checks whether the string 'email' is in\n\t * a valid email format.\n\t * @returns boolean value\n\t */\n\tconst validEmail = () => {\n\t\tconst constraints = {\n\t\t\tfrom: { email: true },\n\t\t};\n\n\t\tconst isValid = validate({ from: email }, constraints);\n\n\t\treturn isValid === undefined;\n\t};\n\n\t/**\n\t * Resets current user password.\n\t * - Checks if email input is valid.\n\t * - If the email input is valid, proceeds to\n\t * requesting a recovery email message, which,\n\t * in case there is no one registered with that email,\n\t * throws an error.\n\t * - If all went correctly, redirects user to home page.\n\t * @param {Event} event\n\t */\n\tconst resetPassword = async event => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tif (!validEmail()) throw new Error('This email format is invalid.');\n\n\t\t\tsetInvalidEmailMessage(null);\n\n\t\t\tsetLoading(true);\n\n\t\t\tconst user = await axiosInstance.post(\n\t\t\t\t'/api/graphql.json',\n\t\t\t\trecoverCustomerPassword(email)\n\t\t\t);\n\n\t\t\tif (user.data.data.customerRecover.customerUserErrors.length > 0)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Sorry, there is something wrong with that email.'\n\t\t\t\t);\n\n\t\t\thistory.replace('/');\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\tsetInvalidEmailMessage(err.message);\n\t\t\t//console.log('Something went terribly wrong! ', err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='auth-form auth-form__box'>\n\t\t\t\t<h2 className='heading-secondary heading-secondary--dark auth-form__title'>\n\t\t\t\t\tReset My Password\n\t\t\t\t</h2>\n\n\t\t\t\t<form className='auth-form__form' onSubmit={resetPassword}>\n\t\t\t\t\t<div className='auth-form__field'>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor='email'\n\t\t\t\t\t\t\tclassName='paragraph paragraph--black'>\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tmaxLength={200}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={event => setEmail(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{invalidEmailMessage && (\n\t\t\t\t\t\t\t<p className='paragraph paragraph--error'>\n\t\t\t\t\t\t\t\t{invalidEmailMessage}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='auth-form__field-button'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='button button__black button__black--card-big'\n\t\t\t\t\t\t\t\tonClick={() => {}}>\n\t\t\t\t\t\t\t\t<p className='paragraph card__price card__price--big cart__button-text'>\n\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LoadingBar loading={loading} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Forget;\n","import React, { memo } from 'react';\n\nimport Card from '../components/Card';\n\nconst Collection = props => {\n\treturn (\n\t\t<div className='home__featured-section'>\n\t\t\t<h2 className='heading-secondary heading-secondary--dark'>\n\t\t\t\tSearched Results\n\t\t\t</h2>\n\n\t\t\t{props.products.length > 0 ? (\n\t\t\t\t<div className='home__featured'>\n\t\t\t\t\t{props.products.map(product => (\n\t\t\t\t\t\t<Card key={product.id} product={product} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3 className='heading-tertiary heading-tertiary--dark'>\n\t\t\t\t\t-- ...nothing was found :(, please try something else. --\n\t\t\t\t</h3>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default memo(Collection);\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Layout from '../hoc/Layout';\nimport { ClientContext } from '../context/clientContext';\nimport SearchedResults from '../components/SearchedResults';\n\nconst Search = props => {\n\tconst [products, setProducts] = useState();\n\tconst clientContext = useContext(ClientContext);\n\tconst search = useSelector(state => state.search);\n\tconst { collections } = clientContext;\n\n\t/**\n\t * Searches through the collections for a product\n\t * handle that matches the search input.\n\t */\n\tconst getMatchingProducts = useCallback(() => {\n\t\tif (collections && search.searchText !== '') {\n\t\t\tconst collectionProducts = collections.map(\n\t\t\t\tcollection => collection.products\n\t\t\t);\n\n\t\t\tlet allProducts = [];\n\n\t\t\tcollectionProducts.forEach(products => {\n\t\t\t\tallProducts = allProducts.concat(products);\n\t\t\t});\n\n\t\t\tlet restructure = search.searchText.split(' ');\n\t\t\trestructure = restructure.join('-');\n\n\t\t\tconst result = [];\n\t\t\tallProducts.forEach(product => {\n\t\t\t\trestructure.split(' ').forEach(word => {\n\t\t\t\t\t//  If typed word is different than -1, it matches.\n\t\t\t\t\tif (\n\t\t\t\t\t\tproduct.handle\n\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.indexOf(word.toLowerCase()) !== -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tresult.push(product);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsetProducts(result);\n\t\t}\n\t}, [collections, search.searchText]);\n\n\tuseEffect(() => {\n\t\tgetMatchingProducts();\n\t}, [getMatchingProducts]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t{products && (\n\t\t\t\t<section className='home'>\n\t\t\t\t\t<SearchedResults products={products} />\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</Layout>\n\t);\n};\n\nexport default Search;\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ClientContext } from '../context/clientContext';\nimport Layout from '../hoc/Layout';\n\nconst Policies = props => {\n\tconst [htmlBody, setHtmlBody] = useState(null);\n\tconst [currPolicy, setCurrPolicy] = useState(null);\n\tconst { handle } = useParams();\n\tconst clientContext = useContext(ClientContext);\n\n\t/**\n\t * Sets the page content based on the current page\n\t * 'handle' param.\n\t */\n\tconst setContent = useCallback(() => {\n\t\tconst curr = clientContext.shopPolicies.find(\n\t\t\tpolicy => policy.handle === handle\n\t\t);\n\n\t\tsetHtmlBody(curr.body);\n\t\tsetCurrPolicy(curr);\n\t}, [clientContext.shopPolicies, handle]);\n\n\tuseEffect(() => {\n\t\tif (clientContext.shopPolicies) setContent();\n\t}, [clientContext.shopPolicies, setContent]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<section className='home home--terms'>\n\t\t\t\t<div className='home__featured-section'>\n\t\t\t\t\t{currPolicy && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark medium-margin-bottom'>\n\t\t\t\t\t\t\t\t{currPolicy.title}\n\t\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t\t<div className='home__featured home__featured--terms'>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName='card__description-box-description'\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t__html: htmlBody,\n\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</Layout>\n\t);\n};\n\nexport default Policies;\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ClientContext } from '../context/clientContext';\nimport Layout from '../hoc/Layout';\n\nconst Pages = props => {\n\tconst [htmlBody, setHtmlBody] = useState(null);\n\tconst [currPage, setCurrPage] = useState(null);\n\tconst { handle } = useParams();\n\tconst clientContext = useContext(ClientContext);\n\n\t/**\n\t * Sets the page content based on the current page\n\t * 'handle' param.\n\t */\n\tconst setContent = useCallback(() => {\n\t\tconst curr = clientContext.pages.find(\n\t\t\tpolicy => policy.handle === handle\n\t\t);\n\n\t\tsetHtmlBody(curr.body);\n\t\tsetCurrPage(curr);\n\t}, [clientContext.pages, handle]);\n\n\tuseEffect(() => {\n\t\tif (clientContext.pages) setContent();\n\t}, [clientContext.pages, setContent]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<section className='home home--terms'>\n\t\t\t\t<div className='home__featured-section'>\n\t\t\t\t\t{currPage && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h2 className='heading-secondary heading-secondary--dark medium-margin-bottom'>\n\t\t\t\t\t\t\t\t{currPage.title}\n\t\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t\t<div className='home__featured home__featured--terms'>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName='card__description-box-description'\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t__html: htmlBody,\n\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</Layout>\n\t);\n};\n\nexport default Pages;\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport '../styles/main.scss';\n\nimport Home from './Home';\nimport CollectionProducts from './CollectionProducts';\nimport ProductDetails from './ProductDetails';\nimport ProductDetailsMobile from './ProductDetailsMobile';\nimport Cart from './Cart';\nimport SignUp from './SignUp';\nimport Login from './Login';\nimport NotFound from './NotFound';\nimport Profile from './Profile';\nimport Forget from './Forget';\nimport Search from './Search';\nimport Policies from '../containers/Policies';\nimport Pages from '../containers/Pages';\nimport { AuthContext } from '../context/authContext';\n\nfunction App() {\n  const authContext = useContext(AuthContext);\n\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 1140);\n\n  const handleResize = useCallback(\n    () => setIsDesktop(window.innerWidth > 1140),\n    []\n  );\n\n  useEffect(() => {\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [handleResize]);\n\n  let routes = (\n    <Switch>\n      <Route path='/pages/:handle'>\n        <Pages />\n      </Route>\n      <Route path='/policy/:handle'>\n        <Policies />\n      </Route>\n\n      <Route path='/signup'>\n        <SignUp />\n      </Route>\n      <Route path='/login'>\n        <Login />\n      </Route>\n      <Route path='/forget'>\n        <Forget />\n      </Route>\n      <Route path='/search'>\n        <Search />\n      </Route>\n      <Route path='/cart'>\n        <Cart />\n      </Route>\n      <Route path='/collection/:handle'>\n        <CollectionProducts />\n      </Route>\n      <Route path='/product/:handle'>\n        {isDesktop ? <ProductDetails /> : <ProductDetailsMobile />}\n      </Route>\n      <Route path='/'>\n        <Home />\n      </Route>\n      <Route path='/404'>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n\n  if (authContext.customerToken)\n    routes = (\n      <Switch>\n        <Route path='/pages/:handle'>\n          <Pages />\n        </Route>\n        <Route path='/policy/:handle'>\n          <Policies />\n        </Route>\n\n        <Route path='/me'>\n          <Profile />\n        </Route>\n        <Route path='/search'>\n          <Search />\n        </Route>\n        <Route path='/cart'>\n          <Cart />\n        </Route>\n        <Route path='/collection/:handle'>\n          <CollectionProducts />\n        </Route>\n        <Route path='/product/:handle'>\n          {isDesktop ? <ProductDetails /> : <ProductDetailsMobile />}\n        </Route>\n        <Route path='/'>\n          <Home />\n        </Route>\n        <Route path='/404'>\n          <NotFound />\n        </Route>\n      </Switch>\n    );\n\n  return routes;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\tlineItems: [\n\t\t// variant\n\t\t// quantity: 5,\n\t\t// handle\n\t],\n\n\ttotalPrice: 0,\n};\n\nconst addProductToCheckout = (state, action) => {\n\tconst lineItemsCopy = [...state.lineItems];\n\n\tconst alreadyAdded = lineItemsCopy.findIndex(\n\t\tlineItem => lineItem.id === action.variant.id\n\t);\n\n\tif (alreadyAdded !== -1) {\n\t\tlineItemsCopy[alreadyAdded].quantity += action.quantity;\n\t} else\n\t\tlineItemsCopy.push({\n\t\t\t...action.variant,\n\t\t\tquantity: action.quantity,\n\t\t\tproductTitle: action.productTitle,\n\t\t\thandle: action.handle,\n\t\t});\n\n\treturn {\n\t\ttotalPrice: (state.totalPrice +=\n\t\t\taction.quantity * action.variant.price),\n\t\tlineItems: lineItemsCopy,\n\t};\n};\n\nconst updateProductFromCheckout = (state, action) => {\n\tconst lineItemsCopy = [...state.lineItems];\n\tlet price = 0;\n\n\tconst toUpdate = lineItemsCopy.findIndex(\n\t\tlineItem => lineItem.id === action.variant.id\n\t);\n\n\tif (action.fromItself) lineItemsCopy[toUpdate].quantity = action.quantity;\n\telse lineItemsCopy[toUpdate].quantity += action.quantity;\n\n\tlineItemsCopy.forEach(item => (price += item.quantity * item.price));\n\n\treturn {\n\t\ttotalPrice: price,\n\t\tlineItems: lineItemsCopy,\n\t};\n};\n\nconst removeProductFromCheckout = (state, action) => {\n\tconst lineItemsCopy = [...state.lineItems];\n\tlet price = state.totalPrice;\n\n\tconst toRemove = lineItemsCopy.findIndex(\n\t\tlineItem => lineItem.id === action.variant.id\n\t);\n\n\tprice -= lineItemsCopy[toRemove].quantity * lineItemsCopy[toRemove].price;\n\n\tlineItemsCopy.splice(toRemove, 1);\n\n\treturn {\n\t\ttotalPrice: price,\n\t\tlineItems: lineItemsCopy,\n\t};\n};\n\nconst removeAllProducts = () => {\n\treturn {\n\t\tlineItems: [],\n\t\ttotalPrice: 0,\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_PRODUCT_TO_CHECKOUT:\n\t\t\treturn addProductToCheckout(state, action);\n\t\tcase actionTypes.REMOVE_PRODUCT_FROM_CHECKOUT:\n\t\t\treturn removeProductFromCheckout(state, action);\n\t\tcase actionTypes.UPDATE_PRODUCT_FROM_CHECKOUT:\n\t\t\treturn updateProductFromCheckout(state, action);\n\t\tcase actionTypes.REMOVE_ALL_PRODUCTS_FROM_CHECKOUT:\n\t\t\treturn removeAllProducts();\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\tfirstName: '',\n\tlastName: '',\n\temail: '',\n\tmainAddress: null,\n\torders: null,\n};\n\nconst initializeUserDetails = action => {\n\treturn {\n\t\tfirstName: action.firstName,\n\t\tlastName: action.lastName,\n\t\temail: action.email,\n\t\tmainAddress: action.mainAddress,\n\t};\n};\n\nconst updateUserAddress = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tmainAddress: action.mainAddress,\n\t};\n};\n\nconst updateUserDetails = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tfirstName: action.firstName,\n\t\tlastName: action.lastName,\n\t\temail: action.email,\n\t};\n};\n\nconst setUserOrders = (state, action) => {\n\treturn {\n\t\t...state,\n\t\torders: action.orders.sort((a, b) => {\n\t\t\tconst dateA = new Date(a.processedAt);\n\t\t\tconst dateB = new Date(b.processedAt);\n\n\t\t\treturn dateA < dateB;\n\t\t}),\n\t};\n};\n\nconst updateUserOrders = (state, action) => {\n\treturn {\n\t\t...state,\n\t\torders: state.orders.concat(action.orders).sort((a, b) => {\n\t\t\tconst dateA = new Date(a.processedAt);\n\t\t\tconst dateB = new Date(b.processedAt);\n\n\t\t\treturn dateA < dateB;\n\t\t}),\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.INITIALIZE_USER_DETAILS:\n\t\t\treturn initializeUserDetails(action);\n\t\tcase actionTypes.UPDATE_USER_ADDRESS:\n\t\t\treturn updateUserAddress(state, action);\n\t\tcase actionTypes.UPDATE_USER_DETAILS:\n\t\t\treturn updateUserDetails(state, action);\n\t\tcase actionTypes.SET_USER_ORDERS:\n\t\t\treturn setUserOrders(state, action);\n\t\tcase actionTypes.UPDATE_USER_ORDERS:\n\t\t\treturn updateUserOrders(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\tsearchText: '',\n};\n\nconst setSearchText = action => {\n\treturn {\n\t\tsearchText: action.searchText,\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.SET_SEARCHED_TEXT:\n\t\t\treturn setSearchText(action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\ttoggle: false,\n};\n\nconst toggleMenu = state => {\n\treturn {\n\t\ttoggle: !state.toggle,\n\t};\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.TOGGLE_MENU:\n\t\t\treturn toggleMenu(state);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nimport ClientContextProvider from './context/clientContext';\nimport AuthContextProvider from './context/authContext';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport checkoutReducer from './store/reducers/checkout';\nimport userReducer from './store/reducers/user';\nimport searchReducer from './store/reducers/search';\nimport menuReducer from './store/reducers/menu';\n\nconst rootReducers = combineReducers({\n\tcheckout: checkoutReducer,\n\tuser: userReducer,\n\tsearch: searchReducer,\n\tmenu: menuReducer,\n});\n\nconst store = createStore(rootReducers);\n\nconst app = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<AuthContextProvider>\n\t\t\t\t<ClientContextProvider>\n\t\t\t\t\t<App />\n\t\t\t\t</ClientContextProvider>\n\t\t\t</AuthContextProvider>\n\t\t</BrowserRouter>\n\t</Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.a170f855.png\";","module.exports = __webpack_public_path__ + \"static/media/Rotating_Product_Banner_Finals_1.fd5134d8.png\";","module.exports = __webpack_public_path__ + \"static/media/Rotating_Product_Banner_Finals_2.27b28cc7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Rotating_Product_Banner_Finals_3.96d424c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Rotating_Product_Banner_Finals_4.b6831e09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sprite.afcd1ab0.svg\";"],"sourceRoot":""}